{"version":3,"sources":["fair-launch.ts","candy-machine.ts","utils.ts","connection.tsx","Home.tsx","countdown.tsx","confetti.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LotteryState","FAIR_LAUNCH_PROGRAM","anchor","PublicKey","getFairLaunchState","anchorWallet","fairLaunchId","connection","a","provider","preflightCommitment","idl","flidl","console","log","Map","set","default","program","account","fairLaunch","fetch","state","getFairLaunchTicket","tokenMint","publicKey","fairLaunchTicket","bump","fairLaunchData","getBalance","treasury","lotteryData","Uint8Array","getFairLaunchLotteryBitmap","fairLaunchLotteryBitmap","getAccountInfo","fairLaunchLotteryBitmapObj","data","id","ticket","pubkey","lottery","getMultipleAccounts","keys","commitment","Promise","all","chunks","map","chunk","getMultipleAccountsCore","result","array","acc","rest","Buffer","from","flat","args","_buildArgs","_rpcRequest","unsafeRes","error","Error","message","value","size","Array","apply","Math","ceil","length","_","index","slice","show_lottery","answer","fairLaunchLottery","fairLaunchLotteryBitmapAnchorObj","seqKeys","i","numberTicketsSold","getFairLaunchTicketSeqLookup","push","allIndexesInSlice","ticketKeys","s","toBase58","concat","buyer","seq","undefined","buyers","buyersFlattened","sort","b","toNumber","myByte","floor","positionFromRight","mask","pow","won","toString","bitmapOnes","atemp","stringtemp","ans","indexOf","getParticipationNft","payer","anchorProgram","fairLaunchObj","fairLaunchTicketObj","participationMint","participationModulo","mint","Keypair","generate","signers","getParticipationToken","authority","uuid","tokenAccount","getAtaForMint","buyerTokenNft","SystemProgram","MintLayout","span","getMinimumBalanceForRentExemption","TOKEN_PROGRAM_ID","fromPubkey","newAccountPubkey","space","lamports","programId","createAccount","Token","createInitMintInstruction","createAssociatedTokenAccountInstruction","createMintToInstruction","instructions","rpc","getMetadata","getMasterEdition","getEditionMarkPda","TOKEN_METADATA_PROGRAM_ID","SYSVAR_RENT_PUBKEY","participationTokenAccount","buyerNftTokenAccount","newMetadata","newEdition","newMint","newMintAuthority","metadata","masterEdition","editionMarkPda","tokenMetadataProgram","tokenProgram","systemProgram","rent","accounts","mintParticipationNft","sleep","ms","resolve","setTimeout","winnerwinnerchickendinner","tries","done","ticketsFlattened","states","key","model","coder","decode","ticketData","ticketDataFlat","gottenParticipation","nft","unpunched","amount","currentMedian","puncher","buyerTokenAccount","accountExists","punchTicket","dev","withdrawn","punched","remainingAccounts","treasuryMint","isWritable","isSigner","withdrawFunds","show","treasuryAmount","getTokenAccountBalance","token","uiAmount","treasuryBump","tokenMintBump","priceRangeStart","priceRangeEnd","tickSize","fee","treasurySnapshot","Date","phaseOneStart","phaseOneEnd","phaseTwoEnd","lotteryDuration","numberOfTokens","numberTicketsUnSeqed","numberTicketsDropped","numberTicketsPunched","numberTokensBurnedForRefunds","numberTokensPreminted","phaseThreeStarted","currentEligibleHolders","countsAtEachTick","forEach","c","gt","getSetupForTicketing","adjustTicket","clock","SYSVAR_CLOCK_PUBKEY","__private","logAccounts","findProgramAddress","toBuffer","ticketKey","amountLamports","LAMPORTS_PER_SOL","fairLaunchTicketSeqLookup","seqBump","instruction","createTicketSeq","receiveRefund","transferAuthority","createApproveInstruction","purchaseTicket","fuckboi","CANDY_MACHINE_PROGRAM","awaitTransactionSignatureConfirmation","txid","timeout","queryStatus","status","slot","confirmations","err","subId","reject","getSignatureStatuses","signatureStatuses","_signatureSubscriptions","removeSignatureListener","associatedTokenAddress","walletAddress","splTokenMintAddress","TransactionInstruction","SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","getCandyMachineState","candyMachineId","fetchIdl","candyMachine","itemsAvailable","itemsRedeemed","itemsRemaining","isSoldOut","isActive","goLiveDate","getTime","wallet","config","price","mintOneToken","userTokenAccountAddress","userPayingAccountAddress","candyMachineAddress","metadataAddress","mintNft","mintAuthority","updateAuthority","sendTransactionWithRetry","FAIR_LAUNCH_PROGRAM_ID","toDate","numberFormater","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","formatNumber","format","val","asInteger","asNumber","toArrayLike","SequenceType","includesFeePayer","block","beforeSend","WalletNotConnectedError","transaction","Transaction","add","getRecentBlockhash","recentBlockhash","blockhash","setSigners","partialSign","signTransaction","sendSignedTransaction","signedTransaction","getUnixTs","DEFAULT_TIMEOUT","rawTransaction","serialize","startTime","sendRawTransaction","skipPreflight","confirmation","simulateResult","simulateTransaction","logs","line","startsWith","JSON","stringify","_recentBlockhash","_disableBlockhashCaching","signData","serializeMessage","wireTransaction","_serialize","encodedTransaction","encoding","res","onSignature","context","e","Phase","useStyles","makeStyles","theme","createStyles","root","display","padding","spacing","margin","marginRight","width","height","flexDirection","alignContent","alignItems","justifyContent","background","color","borderRadius","fontSize","fontWeight","item","PhaseCountdown","date","start","end","onComplete","classes","useState","now","isFixed","renderCountdown","days","hours","minutes","seconds","completed","className","Paper","elevation","renderer","ConnectButton","styled","WalletDialogButton","MintContainer","div","MintButton","Button","dialogStyles","closeButton","position","right","top","palette","grey","ValueSlider","Slider","border","marginTop","boxShadow","lineHeight","marginLeft","Header","props","phaseName","desc","Grid","container","xs","direction","Typography","variant","isWinner","fairLaunchBalance","first","Home","isMinting","setIsMinting","contributed","setContributed","useWallet","useMemo","signAllTransactions","open","severity","alertState","setAlertState","setFairLaunch","setCandyMachine","howToOpen","setHowToOpen","refundExplainerOpen","setRefundExplainerOpen","showOpen","setShowOpen","aShow1","setAShow1","aShow2","setAShow2","t1","t2","process","m","idx","onMint","connected","onPunchTicket","mintTxId","txTimeout","msg","code","window","location","reload","useEffect","cndy","min","max","step","median","highest","currentHighest","numtickets","marks","label","filter","onDeposit","phase","curr","phaseOne","candyMachineGoLive","Phase0","Phase1","Phase2","Phase4","Phase3","Unknown","Lottery","getPhase","candyMachinePredatesFairLaunch","lt","Container","maxWidth","Link","component","align","onClick","backgroundColor","url","options","text","via","marginBottom","includes","paddingTop","Alert","onChange","ev","valueLabelDisplay","disabled","CircularProgress","Dialog","onClose","PaperProps","disableTypography","IconButton","gutterBottom","wrap","md","Snackbar","autoHideDuration","sourceType","screenName","textSize","ConfettiContext","React","createContext","ConfettiProvider","children","canvasRef","useRef","confettiRef","dropConfetti","current","visibility","particleCount","spread","origin","y","finally","confetti","create","resize","useWorker","Provider","ref","zIndex","left","createTheme","type","network","rpcHost","clusterApiUrl","Connection","startDateSeed","parseInt","REACT_APP_CANDY_START_DATE","App","endpoint","wallets","getPhantomWallet","getSolflareWallet","getSolletWallet","ThemeProvider","autoConnect","startDate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa351acb.chunk.js","sourcesContent":["// @ts-nocheck\nimport * as anchor from '@project-serum/anchor';\nimport * as flidl from './idl.json';\nimport { TOKEN_PROGRAM_ID, Token } from '@solana/spl-token';\n\nimport { Idl } from \"./idl\";\nimport { LAMPORTS_PER_SOL, TransactionInstruction } from '@solana/web3.js';\nimport {\n  createAssociatedTokenAccountInstruction,\n  getAtaForMint,\n  getFairLaunchTicketSeqLookup,\n} from './utils';\n\nexport const FAIR_LAUNCH_PROGRAM = new anchor.web3.PublicKey(\n  'EHNbEKdx5qimYUBQdUXq2KmdZeikbnpiEzpKnydBUEwB',\n);\n\nexport interface FairLaunchAccount {\n  id: anchor.web3.PublicKey;\n  program: anchor.Program;\n  state: FairLaunchState;\n  ticket: {\n    pubkey: anchor.web3.PublicKey;\n    bump: number;\n    data?: FairLaunchTicket;\n  };\n  lottery: {\n    pubkey: anchor.web3.PublicKey;\n    data?: Uint8Array;\n  };\n  treasury: number;\n}\n\nexport interface FairLaunchTicket {\n  fairLaunch: anchor.web3.PublicKey;\n  buyer: anchor.web3.PublicKey;\n  amount: anchor.BN;\n  state: {\n    punched?: {};\n    unpunched?: {};\n    withdrawn?: {};\n    no_sequence_struct: {};\n  };\n  bump: number;\n  seq: anchor.BN;\n}\n\nexport interface AntiRugSetting {\n  reserveBp: number;\n  tokenRequirement: anchor.BN;\n  selfDestructDate: anchor.BN;\n}\nexport interface FairLaunchState {\n  authority: anchor.web3.PublicKey;\n  dev: anchor.web3.PublicKey;\n  bump: number;\n\n  currentMedian: anchor.BN;\n  currentHighest: number,\n  currentEligibleHolders: anchor.BN;\n  data: {\n    antiRugSetting?: AntiRugSetting;\n    fee: anchor.BN;\n    numberOfTokens: anchor.BN;\n    phaseOneEnd: anchor.BN;\n    phaseOneStart: anchor.BN;\n    phaseTwoEnd: anchor.BN;\n    priceRangeEnd: anchor.BN;\n    priceRangeStart: anchor.BN;\n    lotteryDuration: anchor.BN;\n    tickSize: anchor.BN;\n    uuid: string;\n  };\n  numberTicketsDropped: anchor.BN;\n  numberTicketsPunched: anchor.BN;\n  numberTicketsSold: anchor.BN;\n  numberTicketsUnSeqed: anchor.BN;\n  numberTokensBurnedForRefunds: anchor.BN;\n  numberTokensPreminted: anchor.BN;\n  phaseThreeStarted: boolean;\n  tokenMint: anchor.web3.PublicKey;\n  tokenMintBump: number;\n  treasury: anchor.web3.PublicKey;\n  treasuryBump: number;\n  treasuryMint: anchor.web3.PublicKey; // only for SPL tokens\n  treasurySnapshot: null;\n}\n\nexport enum LotteryState {\n  Brewing = 'Brewing',\n  Finished = 'Finished',\n  PastDue = 'Past Due',\n}\n\nexport const getLotteryState = (\n  phaseThree: boolean | undefined,\n  lottery: Uint8Array | null,\n  lotteryDuration: anchor.BN,\n  phaseTwoEnd: anchor.BN,\n): LotteryState => {\n  if (\n    !phaseThree &&\n    (!lottery || lottery.length === 0) &&\n    phaseTwoEnd.add(lotteryDuration).lt(new anchor.BN(Date.now() / 1000))\n  ) {\n    return LotteryState.PastDue;\n  } else if (phaseThree) {\n    return LotteryState.Finished;\n  } else {\n    return LotteryState.Brewing;\n  }\n};\n\nexport const getFairLaunchState = async (\n  anchorWallet: anchor.Wallet,\n  fairLaunchId: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection,\n): Promise<FairLaunchAccount> => {\n  const provider = new anchor.Provider(connection, anchorWallet, {\n    preflightCommitment: 'recent',\n  });\n\n  const idl = (flidl)\nconsole.log(idl)\n        const idlMap = new Map<string, Idl>();\n\n        idlMap.set(idl);\n//await anchor.Program.fetchIdl(, provider);\nconsole.log(idl.default)\n  const program = new anchor.Program(idl.default, FAIR_LAUNCH_PROGRAM, provider);\n  const state: any = await program.account.fairLaunch.fetch(fairLaunchId);\n  console.log((state));\n  const [fairLaunchTicket, bump] = await getFairLaunchTicket(\n    //@ts-ignore\n    state.tokenMint,\n    anchorWallet.publicKey,\n  );\n\n  let fairLaunchData: any;\n\n  try {\n    fairLaunchData = await program.account.fairLaunchTicket.fetch(\n      fairLaunchTicket,\n    );\n  } catch {\n    console.log('No ticket');\n  }\n\n  const treasury = await program.provider.connection.getBalance(state.treasury);\n\n  let lotteryData: Uint8Array = new Uint8Array([]);\n  let fairLaunchLotteryBitmap = (\n    await getFairLaunchLotteryBitmap(\n      //@ts-ignore\n      state.tokenMint,\n    )\n  )[0];\n\n  try {\n    const fairLaunchLotteryBitmapObj =\n      await program.provider.connection.getAccountInfo(fairLaunchLotteryBitmap);\n\n    lotteryData = new Uint8Array(fairLaunchLotteryBitmapObj?.data || []);\n  } catch (e) {\n    console.log('Could not find fair launch lottery.');\n    console.log(e);\n  }\n\n  return {\n    id: fairLaunchId,\n    state,\n    program,\n    ticket: {\n      pubkey: fairLaunchTicket,\n      bump,\n      data: fairLaunchData,\n    },\n    lottery: {\n      pubkey: fairLaunchLotteryBitmap,\n      data: lotteryData,\n    },\n    treasury,\n  };\n};\n\n\nconst FAIR_LAUNCH_LOTTERY_SIZE =\n  8 + // discriminator\n  32 + // fair launch\n  1 + // bump\n  8; // size of bitmask ones\n\nexport const getMultipleAccounts = async (\n  connection: any,\n  keys: string[],\n  commitment: string,\n) => {\n  const result = await Promise.all(\n    chunks(keys, 99).map(chunk =>\n      getMultipleAccountsCore(connection, chunk, commitment),\n    ),\n  );\n\n  const array = result\n    .map(\n      a =>\n        //@ts-ignore\n        a.array.map(acc => {\n          if (!acc) {\n            return undefined;\n          }\n\n          const { data, ...rest } = acc;\n          const obj = {\n            ...rest,\n            data: Buffer.from(data[0], 'base64'),\n          } as AccountInfo<Buffer>;\n          return obj;\n        }) as AccountInfo<Buffer>[],\n    )\n    //@ts-ignore\n    .flat();\n  return { keys, array };\n};\n\nconst getMultipleAccountsCore = async (\n  connection: any,\n  keys: string[],\n  commitment: string,\n) => {\n  const args = connection._buildArgs([keys], commitment, 'base64');\n\n  const unsafeRes = await connection._rpcRequest('getMultipleAccounts', args);\n  if (unsafeRes.error) {\n    throw new Error(\n      'failed to get info about account ' + unsafeRes.error.message,\n    );\n  }\n\n  if (unsafeRes.result.value) {\n    const array = unsafeRes.result.value as AccountInfo<string[]>[];\n    return { keys, array };\n  }\n\n  // TODO: fix\n  throw new Error();\n};\n\nexport function chunks(array, size) {\n  return Array.apply(0, new Array(Math.ceil(array.length / size))).map(\n    (_, index) => array.slice(index * size, (index + 1) * size),\n  );\n}\nexport const show_lottery = async (\n  anchorWallet: anchor.Wallet,\n  fairLaunch: FairLaunchAccount\n) => {\n  let answer = [];\n  \ntry {\nconst fairLaunchLottery = (\n      await getFairLaunchLotteryBitmap(\n        //@ts-ignore\n        fairLaunch.state.tokenMint,\n      )\n    )[0];\n    const fairLaunchLotteryBitmapObj =\n      await fairLaunch.program.provider.connection.getAccountInfo(fairLaunchLottery);\n\n    const fairLaunchLotteryBitmapAnchorObj =\n      await fairLaunch.program.account.fairLaunchLotteryBitmap.fetch(\n        fairLaunchLottery,\n      );\n    const seqKeys = [];\n    //@ts-ignore\n    for (let i = 0; i < fairLaunch.state.numberTicketsSold; i++) {\n      seqKeys.push(\n        (\n          await getFairLaunchTicketSeqLookup(\n            //@ts-ignore\n            fairLaunch.state.tokenMint,\n            new anchor.BN(i),\n          )\n        )[0],\n      );\n    }\n    const buyers: { seq: anchor.BN; buyer: anchor.web3.PublicKey }[][] =\n      await Promise.all(\n        chunks(Array.from(Array(seqKeys.length).keys()), 1).map(\n          async allIndexesInSlice => {\n            let ticketKeys = [];\n            for (let i = 0; i < allIndexesInSlice.length; i += 1) {\n              \n              const slice = allIndexesInSlice\n                .slice(i, i + 1)\n                .map(index => seqKeys[index]);\n              const result = await getMultipleAccounts(\n                fairLaunch.program.provider.connection,\n                slice.map(s => s.toBase58()),\n                'recent',\n              );\n              ticketKeys = ticketKeys.concat(\n                result.array.map(a => ({\n                  buyer: new anchor.web3.PublicKey(\n                    new Uint8Array(a.data.slice(8 + 32, 8 + 32 + 32)),\n                  ),\n                  seq: new anchor.BN(\n                    a.data.slice(8 + 32 + 32, 8 + 32 + 32 + 8),\n                    undefined,\n                    'le',\n                  ),\n                })),\n              );\n\n              return ticketKeys;\n            }\n          },\n        ),\n      );\n\n    const buyersFlattened = buyers\n      .flat()\n      .sort((a, b) => a.seq.toNumber() - b.seq.toNumber());\n\n    for (let i = 0; i < buyersFlattened.length; i++) {\n      const buyer = buyersFlattened[i];\n\n      const myByte =\n        fairLaunchLotteryBitmapObj.data[\n          FAIR_LAUNCH_LOTTERY_SIZE + Math.floor(buyer.seq.toNumber() / 8)\n        ];\n\n      const positionFromRight = 7 - (buyer.seq.toNumber() % 8);\n      const mask = Math.pow(2, positionFromRight);\n      const isWinner = myByte & mask;\n      let won = isWinner > 0 ? ' won!' : ' lost :('\n      answer.push('Ticket #' + \n        buyer.seq.toString() + ' owned by: ' +\n        buyer.buyer.toBase58() +\n        won\n      );\n    }\n\n    answer.push('Bit Map ones: ' + \n      //@ts-ignore\n      fairLaunchLotteryBitmapAnchorObj.bitmapOnes.toNumber().toString()\n    );\n    console.log(answer)\n    let atemp = []\nlet stringtemp = \"\"\nconsole.log(answer)\nfor (var ans = 0; ans < answer.length; ans++){\n  if (answer[ans].indexOf(': ') != -1 && answer[ans].length > 4){\n    if (stringtemp.length > 1){\n      atemp.push(stringtemp)\n    }\n    stringtemp = answer[ans]\n  }\n  else {\n    stringtemp=stringtemp +\" \" + answer[ans]\n  }\n  \n}\nif (atemp.length < 1){\n  return [\"No lottery run yet: heck back later!\"]\n}\n    return atemp;\n  } catch (err)\n  {\n    console.log(err)\n    return [\"No lottery run yet: heck back later!\"]\n  }\n  }\nlet show1\nlet show2\nasync function getParticipationNft({\n  buyer,\n  payer,\n  anchorProgram,\n  fairLaunchTicket,\n  fairLaunch,\n  fairLaunchObj,\n  fairLaunchTicketObj,\n}: {\n  buyer: anchor.web3.PublicKey;\n  anchorProgram: anchor.Program;\n  payer: anchor.web3.Keypair;\n  fairLaunchTicket: anchor.web3.PublicKey;\n  fairLaunch: anchor.web3.PublicKey;\n  fairLaunchObj: any;\n  fairLaunchTicketObj: any;\n}): Promise<anchor.web3.PublicKey | null> {\n  if (\n    fairLaunchObj.participationMint &&\n    fairLaunchTicketObj.seq.toNumber() % fairLaunchObj.participationModulo == 0\n  ) {\n    console.log(buyer.toBase58(), 'gets participation token.');\n    const mint = anchor.web3.Keypair.generate();\n    let signers = [mint];\n    const tokenAccount = (\n      await getParticipationToken(\n        fairLaunchObj.authority,\n        fairLaunchObj.data.uuid,\n      )\n    )[0];\n    const buyerTokenNft = (await getAtaForMint(mint.publicKey, buyer))[0];\n    let instructions = [\n      anchor.web3.SystemProgram.createAccount({\n        fromPubkey: payer.publicKey,\n        newAccountPubkey: mint.publicKey,\n        space: MintLayout.span,\n        lamports:\n          await anchorProgram.provider.connection.getMinimumBalanceForRentExemption(\n            MintLayout.span,\n          ),\n        programId: TOKEN_PROGRAM_ID,\n      }),\n      Token.createInitMintInstruction(\n        TOKEN_PROGRAM_ID,\n        mint.publicKey,\n        0,\n        payer.publicKey,\n        payer.publicKey,\n      ),\n      createAssociatedTokenAccountInstruction(\n        buyerTokenNft,\n        payer.publicKey,\n        buyer,\n        mint.publicKey,\n      ),\n      Token.createMintToInstruction(\n        TOKEN_PROGRAM_ID,\n        mint.publicKey,\n        buyerTokenNft,\n        payer.publicKey,\n        [],\n        1,\n      ),\n    ];\n    await anchorProgram.rpc.mintParticipationNft({\n      accounts: {\n        fairLaunch,\n        fairLaunchTicket,\n        payer: payer.publicKey,\n        participationMint: fairLaunchObj.participationMint,\n        participationTokenAccount: tokenAccount,\n        buyer,\n        buyerNftTokenAccount: buyerTokenNft,\n        newMetadata: await getMetadata(mint.publicKey),\n        newEdition: await getMasterEdition(mint.publicKey),\n        newMint: mint.publicKey,\n        newMintAuthority: payer.publicKey,\n        metadata: await getMetadata(fairLaunchObj.participationMint),\n        masterEdition: await getMasterEdition(fairLaunchObj.participationMint),\n        editionMarkPda: await getEditionMarkPda(\n          fairLaunchObj.participationMint,\n          fairLaunchTicketObj.seq.toNumber(),\n        ),\n        tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\n        tokenProgram: TOKEN_PROGRAM_ID,\n          // @ts-ignore\n        systemProgram: anchor.web3.SystemProgram.programId,\n        rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n      },\n      instructions,\n      signers,\n    });\n    return buyerTokenNft;\n  } else {\n    console.log(buyer.toBase58(), 'doesnt get participation token.');\n    return null;\n  }\n}\n\n\nasync function punchTicket2({\n  puncher,\n  payer,\n  anchorProgram,\n  fairLaunchTicket,\n  fairLaunch,\n  fairLaunchLotteryBitmap,\n  fairLaunchObj,\n  fairLaunchTicketObj,\n}: {\n  puncher: anchor.web3.PublicKey;\n  anchorProgram: anchor.Program;\n  payer: anchor.web3.Keypair;\n  fairLaunchTicket: anchor.web3.PublicKey;\n  fairLaunch: anchor.web3.PublicKey;\n  fairLaunchLotteryBitmap: anchor.web3.PublicKey;\n  fairLaunchObj: any;\n  fairLaunchTicketObj: any;\n}): Promise<anchor.web3.PublicKey> {\n  const buyerTokenAccount = (\n    await getAtaForMint(\n      //@ts-ignore\n      fairLaunchObj.tokenMint,\n      puncher,\n    )\n  )[0];\n\n  const accountExists =\n    await anchorProgram.provider.connection.getAccountInfo(\n      buyerTokenAccount,\n    );\n\n  const instructions = !accountExists\n    ? [\n        createAssociatedTokenAccountInstruction(\n          buyerTokenAccount,\n          payer,\n          payer,\n          //@ts-ignore\n          fairLaunchObj.tokenMint,\n        ),\n      ]\n    : [];\nconsole.log({\n      fairLaunchTicket,\n      fairLaunch,\n      fairLaunchLotteryBitmap,\n      payer: payer,\n      buyerTokenAccount,\n      //@ts-ignore\n      tokenMint: fairLaunchObj.tokenMint,\n      tokenProgram: TOKEN_PROGRAM_ID,\n        treasury: fairLaunchObj.treasury,\n        systemProgram: anchor.web3.SystemProgram.programId,\n          dev: fairLaunchObj.dev,\n      buyer: puncher\n    })\n  await anchorProgram.rpc.punchTicket({\n    accounts: {\n      fairLaunchTicket,\n      fairLaunch,\n      fairLaunchLotteryBitmap,\n      payer: payer,\n      buyerTokenAccount,\n      //@ts-ignore\n      tokenMint: fairLaunchObj.tokenMint,\n      tokenProgram: TOKEN_PROGRAM_ID,\n        treasury: fairLaunchObj.treasury,\n        systemProgram: anchor.web3.SystemProgram.programId,\n          dev: fairLaunchObj.dev,\n      buyer: puncher\n    },\n    instructions: instructions.length > 0 ? instructions : undefined,\n  });\n\n\n  return buyerTokenAccount;\n}\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\nexport const winnerwinnerchickendinner = async (\n  anchorWallet: anchor.Wallet,\n  fairLaunch: FairLaunchAccount\n  ) => {\n    const anchorProgram = fairLaunch.program;\n    const fairLaunchKey = fairLaunch.publicKey;\n    const fairLaunchObj = fairLaunch.state\n\n    const fairLaunchLotteryBitmap = (\n      await getFairLaunchLotteryBitmap(\n        //@ts-ignore\n        fairLaunchObj.tokenMint,\n      )\n    )[0];\n\n    const fairLaunchLotteryBitmapObj =\n      await anchorProgram.provider.connection.getAccountInfo(\n        fairLaunchLotteryBitmap,\n      );\n\n    const seqKeys = [];\n    //@ts-ignore\n    for (let i = 0; i < fairLaunchObj.numberTicketsSold; i++) {\n      seqKeys.push(\n        (\n          await getFairLaunchTicketSeqLookup(\n            //@ts-ignore\n            fairLaunchObj.tokenMint,\n            new anchor.BN(i),\n          )\n        )[0],\n      );\n    }\n\n    const ticketKeys: any[][] = await Promise.all(\n      chunks(Array.from(Array(seqKeys.length).keys()), 2).map(\n        async allIndexesInSlice => {\n          let ticketKeys = [];\n          for (let i = 0; i < allIndexesInSlice.length; i += 1) {\n            console.log(\n              'Pulling ticket seqs for slice',\n              allIndexesInSlice[i],\n              allIndexesInSlice[i + 1],\n            );\n            const slice = allIndexesInSlice\n              .slice(i, i + 1)\n              .map(index => seqKeys[index]);\n            let result;\n            let tries = 0;\n            let done = false;\n            while (tries < 3 && !done) {\n              try {\n                result = await getMultipleAccounts(\n                  anchorProgram.provider.connection,\n                  slice.map(s => s.toBase58()),\n                  'recent',\n                );\n                done = true;\n              } catch (e) {\n                console.log(e);\n                console.log('Failed, retrying after 10s sleep');\n                await sleep(10000);\n                tries += 1;\n              }\n            }\n            ticketKeys = ticketKeys.concat(\n              result.array.map(\n                a =>\n                  new anchor.web3.PublicKey(\n                    new Uint8Array(a.data.slice(8, 8 + 32)),\n                  ),\n              ),\n            );\n          }\n          return ticketKeys;\n        },\n      ),\n    );\n\n    const ticketsFlattened = ticketKeys.flat();\n\n    const ticketData: { key: anchor.web3.PublicKey; model: any }[][] =\n      await Promise.all(\n        chunks(Array.from(Array(ticketsFlattened.length).keys()), 2).map(\n          async allIndexesInSlice => {\n            let states = [];\n            for (let i = 0; i < allIndexesInSlice.length; i += 1) {\n              console.log(\n                'Pulling accounts for slice',\n                allIndexesInSlice[i],\n                allIndexesInSlice[i + 1],\n              );\n              const slice = allIndexesInSlice\n                .slice(i, i + 1)\n                .map(index => ticketsFlattened[index]);\n\n              let result;\n              let tries = 0;\n              let done = false;\n              while (tries < 3 && !done) {\n                try {\n                  result = await getMultipleAccounts(\n                    anchorProgram.provider.connection,\n                    slice.map(s => s.toBase58()),\n                    'recent',\n                  );\n                  done = true;\n                } catch (e) {\n                  console.log(e);\n                  console.log('Failed, retrying after 10s sleep');\n                  await sleep(10000);\n                  tries += 1;\n                }\n              }\n              states = states.concat(\n                result.array.map((a, i) => ({\n                  key: new anchor.web3.PublicKey(result.keys[i]),\n                  model: anchorProgram.coder.accounts.decode(\n                    'FairLaunchTicket',\n                    a.data,\n                  ),\n                })),\n              );\n            }\n            return states;\n          },\n        ),\n      );\n\n    const ticketDataFlat = ticketData.flat();\n\n    await Promise.all(\n      chunks(Array.from(Array(ticketDataFlat.length).keys()), 2).map(\n        async allIndexesInSlice => {\n          for (let i = 0; i < allIndexesInSlice.length; i++) {\n            const ticket = ticketDataFlat[allIndexesInSlice[i]];\n            if (!ticket.model.gottenParticipation) {\n              let tries = 0;\n              let done = false;\n              while (tries < 3 && !done) {\n                try {\n                  const nft = await getParticipationNft({\n                    payer: anchorWallet.publicKey,\n                    buyer: ticket.model.buyer,\n                    anchorProgram,\n                    fairLaunchTicket: ticket.key,\n                    fairLaunch,\n                    fairLaunchObj,\n                    fairLaunchTicketObj: ticket.model,\n                  });\n                  done = true;\n                  if (nft) {\n                    console.log(\n                      `Got participation nft and placed token in new account ${nft.toBase58()}.`,\n                    );\n                  }\n                } catch (e) {\n                  if (tries > 3) {\n                    throw e;\n                  } else {\n                    tries++;\n                  }\n                  console.log(e);\n                  console.log(\n                    'Ticket failed to get participation nft, trying one more time',\n                  );\n                  await sleep(1000);\n                }\n              }\n            } else {\n              console.log(\n                'Ticket',\n                ticket.model.buyer.toBase58(),\n                'already received participation',\n              );\n            }\n            if (ticket.model.state.unpunched) {\n              \n                const myByte =\n                  fairLaunchLotteryBitmapObj.data[\n                    FAIR_LAUNCH_LOTTERY_SIZE +\n                      Math.floor(ticket.model.seq.toNumber() / 8)\n                  ];\n\n                const positionFromRight = 7 - (ticket.model.seq.toNumber() % 8);\n                const mask = Math.pow(2, positionFromRight);\n                const isWinner = myByte & mask;\n                if (isWinner > 0) {\n                  console.log(\n                    'Punching ticket for buyer',\n                    allIndexesInSlice[i],\n                    ticket.model.buyer.toBase58(),\n                  );\n                  const diff =\n                    ticket.model.amount.toNumber() -\n                    //@ts-ignore\n                    fairLaunchObj.currentMedian.toNumber();\n                  \n                  let tries = 0;\n                  let done = false;\n                  while (tries < 3 && !done) {\n                    try {\n                      \n\n      let puncher = ticket.model.buyer;\nconst buyerTokenAccount = (\n    await getAtaForMint(\n      //@ts-ignore\n      fairLaunch.state.tokenMint,\n      puncher,\n    )\n  )[0];\n  const accountExists =\n    await anchorProgram.provider.connection.getAccountInfo(\n      buyerTokenAccount,\n    );\n\n  const instructions = !accountExists\n    ? [\n        createAssociatedTokenAccountInstruction(\n          buyerTokenAccount,\n          anchorWallet.publicKey,\n          puncher,\n          //@ts-ignore\n          fairLaunch.state.tokenMint,\n        ),\n      ]\n    : [];\n\n  await anchorProgram.rpc.punchTicket({\n    accounts: {\n      fairLaunchTicket: ticket.key,\n      fairLaunch: fairLaunch.id,\n      fairLaunchLotteryBitmap,\n      payer: anchorWallet.publicKey,\n      buyerTokenAccount,\n      //@ts-ignore\n      tokenMint: fairLaunch.state.tokenMint,\n      tokenProgram: TOKEN_PROGRAM_ID,\n        treasury: fairLaunch.state.treasury,\n        systemProgram: anchor.web3.SystemProgram.programId,\n          dev: fairLaunch.state.dev,\n      buyer: puncher,\n    },\n    instructions: instructions.length > 0 ? instructions : undefined,\n  });\n                      done = true;\n                      console.log(\n                        `Punched ticket and placed token in new account ${buyerTokenAccount.toBase58()}.`,\n                      );\n                    } catch (e) {\n                      if (tries > 3) {\n                        throw e;\n                      } else {\n                        tries++;\n                      }\n                      console.log(e);\n                      console.log(\n                        'Ticket failed to punch, trying one more time',\n                      );\n                      await sleep(1000);\n                    }\n                  }\n                }\n            } else if (ticket.model.state.withdrawn) {\n              console.log(\n                'Buyer',\n                allIndexesInSlice[i],\n                ticket.model.buyer.toBase58(),\n                'withdrawn already',\n              );\n            } else if (ticket.model.state.punched) {\n              console.log(\n                'Buyer',\n                allIndexesInSlice[i],\n                ticket.model.buyer.toBase58(),\n                'punched already',\n              );\n            }\n              }\n\n\n\n    const remainingAccounts = [];\n\n    //@ts-ignore\n    if (fairLaunchObj.treasuryMint) {\n      remainingAccounts.push({\n        //@ts-ignore\n        pubkey: fairLaunchObj.treasuryMint,\n        isWritable: true,\n        isSigner: false,\n      });\n      remainingAccounts.push({\n        pubkey: (\n          await getAtaForMint(\n            //@ts-ignore\n            fairLaunchObj.treasuryMint,\n            anchorWallet.publicKey,\n          )\n        )[0],\n        isWritable: true,\n        isSigner: false,\n      });\n      remainingAccounts.push({\n        pubkey: TOKEN_PROGRAM_ID,\n        isWritable: false,\n        isSigner: false,\n      });\n    }\n\n    await anchorProgram.rpc.withdrawFunds({\n      accounts: {\n        fairLaunch: fairLaunch.id,\n        // @ts-ignore\n        treasury: fairLaunchObj.treasury,\n        authority: anchorWallet.publicKey,\n        // @ts-ignore\n        tokenMint: fairLaunchObj.tokenMint,\n          // @ts-ignore\n        systemProgram: anchor.web3.SystemProgram.programId,\n      },\n      remainingAccounts,\n    });\n\n          })\n    );\n}\nexport const show = async (\n  anchorWallet: anchor.Wallet,\n  fairLaunch: FairLaunchAccount\n) => {\n  let answer = [];\n  let treasuryAmount = 0;\n    // @ts-ignore\n    try{\n      \n    if (fairLaunch.state.treasuryMint) {\n      const token =\n        await fairLaunch.program.provider.connection.getTokenAccountBalance(\n          // @ts-ignore\n          fairLaunch.treasury,\n        );\n      treasuryAmount = token.value.uiAmount;\n    } else {\n      treasuryAmount = await fairLaunch.program.provider.connection.getBalance(\n        // @ts-ignore\n        fairLaunch.state.treasury,\n      );\n    }\n\n    //@ts-ignore\n    answer.push('Token Mint: ' + fairLaunch.state.tokenMint.toBase58());\n    //@ts-ignore\n    answer.push('Treasury: ' + fairLaunch.state.treasury.toBase58());\n    //@ts-ignore\n    answer.push('Treasury Mint: ' + fairLaunch.state.treasuryMint?.toBase58());\n    //@ts-ignore\n    answer.push('Participation Mint: ' +\n      //@ts-ignore\n      fairLaunch.state.participationMint?.toBase58()\n    );\n    //@ts-ignore\n    answer.push('Authority: ' + fairLaunch.state.authority.toBase58());\n    //@ts-ignore\n    answer.push('Bump: ' + fairLaunch.state.bump.toString());\n    //@ts-ignore\n    answer.push('Treasury Bump: ' + fairLaunch.state.treasuryBump.toString());\n    //@ts-ignore\n    answer.push('Token Mint Bump: ' + fairLaunch.state.tokenMintBump.toString());\n    //@ts-ignore\n    answer.push('Participation Modulo: ' + fairLaunch.state.participationModulo.toString());\n    //@ts-ignore\n\n    answer.push('Price Range Start: ' + \n      //@ts-ignore\n      fairLaunch.state.data.priceRangeStart.toNumber().toString()\n    );\n    answer.push('Price Range End: ' + \n      //@ts-ignore\n      fairLaunch.state.data.priceRangeEnd.toNumber().toString()\n    );\n\n    answer.push('Tick Size: ' + \n      //@ts-ignore\n      fairLaunch.state.data.tickSize.toNumber().toString()\n    );\n\n    answer.push('Fees: ' + \n      //@ts-ignore\n      fairLaunch.state.data.fee.toNumber().toString()\n    );\n\n    answer.push('Current Treasury Holdings: ' +  treasuryAmount.toString());\n\n    answer.push('Treasury Snapshot At Peak: ' + \n      //@ts-ignore\n      fairLaunch.state.treasurySnapshot?.toNumber().toString()\n    );\n\n    answer.push('Phase One Start: ' + \n      //@ts-ignore\n      new Date(fairLaunch.state.data.phaseOneStart.toNumber() * 1000).toString()\n    );\n    answer.push('Phase One End: ' + \n      //@ts-ignore\n      new Date(fairLaunch.state.data.phaseOneEnd.toNumber() * 1000).toString()\n    );\n    answer.push('Phase Two End: ' + \n      //@ts-ignore\n      new Date(fairLaunch.state.data.phaseTwoEnd.toNumber() * 1000).toString()\n    );\n\n    answer.push('Lottery Period End: ' + \n      //@ts-ignore\n      new Date(\n        //@ts-ignore\n        (fairLaunch.state.data.phaseTwoEnd.toNumber() +\n          //@ts-ignore\n          fairLaunch.state.data.lotteryDuration.toNumber()) *\n          1000,\n      ).toString()\n    );\n\n    answer.push('Number of Tokens: ' + \n      //@ts-ignore\n      fairLaunch.state.data.numberOfTokens.toNumber().toString()\n    );\n\n    answer.push('Number of Tickets Un-Sequenced: ' + \n      //@ts-ignore\n      fairLaunch.state.numberTicketsUnSeqed.toNumber().toString()\n    );\n\n    answer.push('Number of Tickets Sold: ' + \n      //@ts-ignore\n      fairLaunch.state.numberTicketsSold.toNumber().toString()\n    );\n\n    answer.push('Number of Tickets Dropped: ' + \n      //@ts-ignore\n      fairLaunch.state.numberTicketsDropped.toNumber().toString()\n    );\n\n    answer.push('Number of Tickets Punched: ' + \n      //@ts-ignore\n      fairLaunch.state.numberTicketsPunched.toNumber().toString()\n    );\n\n    answer.push('Number of Tickets Dropped + Punched: ' + \n      //@ts-ignore\n      fairLaunch.state.numberTicketsDropped.toNumber().toString() +\n        //@ts-ignore\n        fairLaunch.state.numberTicketsPunched.toNumber().toString()\n    );\n\n    answer.push('Number of Tokens Refunded: ' + \n      //@ts-ignore\n      fairLaunch.state.numberTokensBurnedForRefunds.toNumber().toString()\n    );\n\n    answer.push('Number of Tokens Preminted: ' + \n      //@ts-ignore\n      fairLaunch.state.numberTokensPreminted.toNumber().toString()\n    );\n\n    answer.push('Phase Three Started: ' + \n      //@ts-ignore\n      fairLaunch.state.phaseThreeStarted.toString()\n    );\n\n    answer.push('Current Eligible Holders: ' + \n      //@ts-ignore\n      fairLaunch.state.currentEligibleHolders.toNumber().toString()\n    );\n\n    answer.push('Current Median: ' + \n      //@ts-ignore\n      fairLaunch.state.currentMedian.toNumber().toString()\n    );\n\n    answer.push('Counts at Each Tick: ');\n    //@ts-ignore\n    fairLaunch.state.countsAtEachTick.forEach((c, i) =>\n      answer.push(\n        //@ts-ignore\n        fairLaunch.state.data.priceRangeStart.toNumber().toString() +\n          //@ts-ignore\n          i * fairLaunch.state.data.tickSize.toNumber().toString() +\n        ': ' +\n        c.toNumber().toString(),\n      )\n    );\n\nlet atemp = []\nlet stringtemp = \"\"\nconsole.log(answer)\nfor (var ans = 0; ans < answer.length; ans++){\n  if (answer[ans].indexOf(': ') != -1 && answer[ans].length > 4){\n    if (stringtemp.length > 1){\n      atemp.push(stringtemp)\n    }\n    stringtemp = answer[ans]\n  }\n  else {\nstringtemp=stringtemp + answer[ans]\n  }\n  \n}\n    return atemp;\n  }\n  catch (err){\n    console.log(err)\n}\n    \n  \n} \n\nexport const punchTicket = async (\n  anchorWallet: anchor.Wallet,\n  fairLaunch: FairLaunchAccount,\n) => {\n  const fairLaunchTicket = (\n    await getFairLaunchTicket(\n      //@ts-ignore\n      fairLaunch.state.tokenMint,\n      anchorWallet.publicKey,\n    )\n  )[0];\n\n  const ticket = fairLaunch.ticket.data;\n\n  const fairLaunchLotteryBitmap = //@ts-ignore\n  (await getFairLaunchLotteryBitmap(fairLaunch.state.tokenMint))[0];\n\n  const buyerTokenAccount = (\n    await getAtaForMint(\n      //@ts-ignore\n      fairLaunch.state.tokenMint,\n      anchorWallet.publicKey,\n    )\n  )[0];\n\n  if (ticket?.amount.gt(fairLaunch.state.currentMedian)) {\n    console.log(\n      'Adjusting down...',\n      ticket?.amount.toNumber(),\n      fairLaunch.state.currentMedian.toNumber(),\n    );\n    const { remainingAccounts, instructions, signers } =\n      await getSetupForTicketing(\n        fairLaunch.program,\n        fairLaunch.state.currentMedian.toNumber(),\n        anchorWallet,\n        fairLaunch,\n        fairLaunchTicket,\n      );\n    await fairLaunch.program.rpc.adjustTicket(fairLaunch.state.currentMedian, {\n      accounts: {\n        fairLaunchTicket,\n        fairLaunch: fairLaunch.id,\n        fairLaunchLotteryBitmap,\n        //@ts-ignore\n        treasury: fairLaunch.state.treasury,\n        systemProgram: anchor.web3.SystemProgram.programId,\n        clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n      },\n      __private: { logAccounts: true },\n      instructions: instructions.length > 0 ? instructions : undefined,\n      remainingAccounts: [\n        {\n          pubkey: anchorWallet.publicKey,\n          isSigner: true,\n          isWritable: true,\n        },\n        ...remainingAccounts,\n      ],\n      signers,\n    });\n  }\n\n  const accountExists =\n    await fairLaunch.program.provider.connection.getAccountInfo(\n      buyerTokenAccount,\n    );\n\n  const instructions = !accountExists\n    ? [\n        createAssociatedTokenAccountInstruction(\n          buyerTokenAccount,\n          anchorWallet.publicKey,\n          anchorWallet.publicKey,\n          //@ts-ignore\n          fairLaunch.state.tokenMint,\n        ),\n      ]\n    : [];\n\n  await fairLaunch.program.rpc.punchTicket({\n    accounts: {\n      fairLaunchTicket,\n      fairLaunch: fairLaunch.id,\n      fairLaunchLotteryBitmap,\n      payer: anchorWallet.publicKey,\n      buyerTokenAccount,\n      //@ts-ignore\n      tokenMint: fairLaunch.state.tokenMint,\n      tokenProgram: TOKEN_PROGRAM_ID,\n        treasury: fairLaunch.state.treasury,\n        systemProgram: anchor.web3.SystemProgram.programId,\n          dev: fairLaunch.state.dev,\n      buyer: anchorWallet.publicKey,\n    },\n    instructions: instructions.length > 0 ? instructions : undefined,\n  });\n};\n\n\nexport const getFairLaunchTicket = async (\n  tokenMint: anchor.web3.PublicKey,\n  buyer: anchor.web3.PublicKey,\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [Buffer.from('fair_launch'), tokenMint.toBuffer(), buyer.toBuffer()],\n    FAIR_LAUNCH_PROGRAM,\n  );\n};\n\nexport const getFairLaunchLotteryBitmap = async (\n  tokenMint: anchor.web3.PublicKey,\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [Buffer.from('fair_launch'), tokenMint.toBuffer(), Buffer.from('lottery')],\n    FAIR_LAUNCH_PROGRAM,\n  );\n};\n\nconst getSetupForTicketing = async (\n  anchorProgram: anchor.Program,\n  amount: number,\n  anchorWallet: anchor.Wallet,\n  fairLaunch: FairLaunchAccount | undefined,\n  ticketKey: anchor.web3.PublicKey,\n): Promise<{\n  remainingAccounts: {\n    pubkey: anchor.web3.PublicKey | null;\n    isWritable: boolean;\n    isSigner: boolean;\n  }[];\n  instructions: TransactionInstruction[];\n  signers: anchor.web3.Keypair[];\n  amountLamports: number;\n}> => {\n  if (!fairLaunch) {\n    return {\n      remainingAccounts: [],\n      instructions: [],\n      signers: [],\n      amountLamports: 0,\n    };\n  }\n  const ticket = fairLaunch.ticket;\n  console.log(1)\nconsole.log(ticket)\n  const remainingAccounts = [];\n  const instructions = [];\n  const signers = [];\n\n  let amountLamports = 0;\n  //@ts-ignore\n      if (amount == 0){\n      amountLamports = fairLaunch.state.data.priceRangeStart.toNumber();\n    }\n    else {\n      amountLamports = amount * LAMPORTS_PER_SOL;\n    }\n    console.log(ticket.data)\n  if (ticket.data) {\n    const [fairLaunchTicketSeqLookup, seqBump] =\n      await getFairLaunchTicketSeqLookup(\n        fairLaunch.state.tokenMint,\n        ticket.data?.seq,\n      );\n\n    const seq = await fairLaunch.program.provider.connection.getAccountInfo(\n      fairLaunchTicketSeqLookup,\n    );\n    if (!seq) {\n      instructions.push(\n        await fairLaunch.program.instruction.createTicketSeq(seqBump, {\n          accounts: {\n            fairLaunchTicketSeqLookup,\n            fairLaunch: fairLaunch.id,\n            fairLaunchTicket: ticketKey,\n            payer: anchorWallet.publicKey,\n            systemProgram: anchor.web3.SystemProgram.programId,\n            rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n          },\n          signers: [],\n        }),\n      );\n    }\n  }\n\n  return {\n    remainingAccounts,\n    instructions,\n    signers,\n    amountLamports,\n  };\n};\n\nexport const receiveRefund = async (\n  anchorWallet: anchor.Wallet,\n  fairLaunch: FairLaunchAccount | undefined,\n) => {\n  if (!fairLaunch) {\n    return;\n  }\n\n  const buyerTokenAccount = (\n    await getAtaForMint(fairLaunch.state.tokenMint, anchorWallet.publicKey)\n  )[0];\n\n  const transferAuthority = anchor.web3.Keypair.generate();\n\n  const signers = [transferAuthority];\n  const instructions = [\n    Token.createApproveInstruction(\n      TOKEN_PROGRAM_ID,\n      buyerTokenAccount,\n      transferAuthority.publicKey,\n      anchorWallet.publicKey,\n      [],\n      1,\n    ),\n  ];\n\n  const remainingAccounts = [];\n\n  if (fairLaunch.state.treasuryMint) {\n    remainingAccounts.push({\n      pubkey: fairLaunch.state.treasuryMint,\n      isWritable: true,\n      isSigner: false,\n    });\n    remainingAccounts.push({\n      pubkey: (\n        await getAtaForMint(\n          fairLaunch.state.treasuryMint,\n          anchorWallet.publicKey,\n        )\n      )[0],\n      isWritable: true,\n      isSigner: false,\n    });\n  }\n\n  console.log(\n    'tfr',\n    fairLaunch.state.treasury.toBase58(),\n    anchorWallet.publicKey.toBase58(),\n    buyerTokenAccount.toBase58(),\n  );\n  await fairLaunch.program.rpc.receiveRefund({\n    accounts: {\n      fairLaunch: fairLaunch.id,\n      treasury: fairLaunch.state.treasury,\n      buyer: anchorWallet.publicKey,\n      buyerTokenAccount,\n      transferAuthority: transferAuthority.publicKey,\n      tokenMint: fairLaunch.state.tokenMint,\n      tokenProgram: TOKEN_PROGRAM_ID,\n      systemProgram: anchor.web3.SystemProgram.programId,\n      clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n    },\n\n    __private: { logAccounts: true },\n    remainingAccounts,\n    instructions,\n    signers,\n  });\n};\nexport const purchaseTicket = async (\n  amount: number,\n  anchorWallet: anchor.Wallet,\n  fairLaunch: FairLaunchAccount | undefined,\n) => {\n  if (!fairLaunch) {\n    return;\n  }\n\n  const ticket = fairLaunch.ticket.data;\n\n  console.log(1)\nconsole.log(ticket)\n  const [fairLaunchTicket, bump] = await getFairLaunchTicket(\n    //@ts-ignore\n    fairLaunch.state.tokenMint,\n    anchorWallet.publicKey,\n  );\n\n  let { remainingAccounts, instructions, signers, amountLamports } =\n    await getSetupForTicketing(\n      fairLaunch.program,\n      amount,\n      anchorWallet,\n      fairLaunch,\n      fairLaunchTicket,\n    );\n    if (amount == 0){\n      amountLamports = 0;\n    }\n  if (ticket) {\n    const fairLaunchLotteryBitmap = ( //@ts-ignore\n      await getFairLaunchLotteryBitmap(fairLaunch.state.tokenMint)\n    )[0];\n    console.log(\n      'Anchor wallet',\n      anchorWallet.publicKey.toBase58(),\n      amountLamports,\n    );\n    await fairLaunch.program.rpc.adjustTicket(new anchor.BN(amountLamports), {\n      accounts: {\n        fairLaunchTicket,\n        fairLaunch: fairLaunch.id,\n        fairLaunchLotteryBitmap,\n        //@ts-ignore\n        treasury: fairLaunch.state.treasury,\n        systemProgram: anchor.web3.SystemProgram.programId,\n        clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n          dev: fairLaunch.state.dev,\n            fuckboi: fairLaunch.state.fuckboi,\n      },\n      __private: { logAccounts: true },\n      remainingAccounts: [\n        {\n          pubkey: anchorWallet.publicKey,\n          isSigner: true,\n          isWritable: true,\n        },\n        ...remainingAccounts,\n      ],\n      signers,\n      instructions: instructions.length > 0 ? instructions : undefined,\n    });\n\n    return;\n  }\n    console.log('Amount', amountLamports);\n    console.log()\n    await fairLaunch.program.rpc.purchaseTicket(\n      bump,\n      new anchor.BN(amountLamports),\n      {\n        accounts: {\n          fairLaunchTicket,\n          fairLaunch: fairLaunch.id,\n          //@ts-ignore\n          treasury: fairLaunch.state.treasury,\n          buyer: anchorWallet.publicKey,\n          payer: anchorWallet.publicKey,\n          systemProgram: anchor.web3.SystemProgram.programId,\n          rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n          clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n          dev: fairLaunch.state.dev,\n            fuckboi: fairLaunch.state.fuckboi\n        },\n        //__private: { logAccounts: true },\n        remainingAccounts,\n        signers,\n        instructions: instructions.length > 0 ? instructions : undefined,\n      },\n    );\n};\n\nexport const withdrawFunds = async (\n  anchorWallet: anchor.Wallet,\n  fairLaunch: FairLaunchAccount | undefined,\n) => {\n  if (!fairLaunch) {\n    return;\n  }\n\n  // TODO: create sequence ticket\n\n  const remainingAccounts = [];\n\n  //@ts-ignore\n  if (fairLaunch.state.treasuryMint) {\n    remainingAccounts.push({\n      //@ts-ignore\n      pubkey: fairLaunch.state.treasuryMint,\n      isWritable: true,\n      isSigner: false,\n    });\n    remainingAccounts.push({\n      pubkey: (\n        await getAtaForMint(\n          //@ts-ignore\n          fairLaunch.state.treasuryMint,\n          anchorWallet.publicKey,\n        )\n      )[0],\n      isWritable: true,\n      isSigner: false,\n    });\n    remainingAccounts.push({\n      pubkey: TOKEN_PROGRAM_ID,\n      isWritable: false,\n      isSigner: false,\n    });\n  }\n\n  await fairLaunch.program.rpc.withdrawFunds({\n    accounts: {\n      fairLaunch: fairLaunch.id,\n      // @ts-ignore\n      treasury: fairLaunch.state.treasury,\n      authority: anchorWallet.publicKey,\n      // @ts-ignore\n      tokenMint: fairLaunch.state.tokenMint,\n      systemProgram: anchor.web3.SystemProgram.programId,\n    },\n    remainingAccounts,\n  });\n};\n","import * as anchor from '@project-serum/anchor';\n\nimport { MintLayout, TOKEN_PROGRAM_ID, Token } from '@solana/spl-token';\nimport { SystemProgram } from '@solana/web3.js';\nimport { sendTransactionWithRetry } from './connection';\n\nimport {\n  getAtaForMint,\n  SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n} from './utils';\n\nexport const CANDY_MACHINE_PROGRAM = new anchor.web3.PublicKey(\n  'cndyAnrLdpjq1Ssp1z8xxDsB8dxe7u4HL5Nxi2K5WXZ',\n);\n\nconst TOKEN_METADATA_PROGRAM_ID = new anchor.web3.PublicKey(\n  'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',\n);\n\ninterface CandyMachineState {\n  itemsAvailable: number;\n  itemsRedeemed: number;\n  itemsRemaining: number;\n  config: anchor.web3.PublicKey;\n  treasury: anchor.web3.PublicKey;\n  tokenMint: anchor.web3.PublicKey;\n  isSoldOut: boolean;\n  isActive: boolean;\n  goLiveDate: anchor.BN;\n  price: anchor.BN;\n}\n\nexport interface CandyMachineAccount {\n  id: anchor.web3.PublicKey;\n  program: anchor.Program;\n  state: CandyMachineState;\n}\n\nexport const awaitTransactionSignatureConfirmation = async (\n  txid: anchor.web3.TransactionSignature,\n  timeout: number,\n  connection: anchor.web3.Connection,\n  commitment: anchor.web3.Commitment = 'recent',\n  queryStatus = false,\n): Promise<anchor.web3.SignatureStatus | null | void> => {\n  let done = false;\n  let status: anchor.web3.SignatureStatus | null | void = {\n    slot: 0,\n    confirmations: 0,\n    err: null,\n  };\n  let subId = 0;\n  status = await new Promise(async (resolve, reject) => {\n    setTimeout(() => {\n      if (done) {\n        return;\n      }\n      done = true;\n      console.log('Rejecting for timeout...');\n      reject({ timeout: true });\n    }, timeout);\n    while (!done && queryStatus) {\n      // eslint-disable-next-line no-loop-func\n      (async () => {\n        try {\n          const signatureStatuses = await connection.getSignatureStatuses([\n            txid,\n          ]);\n          status = signatureStatuses && signatureStatuses.value[0];\n          if (!done) {\n            if (!status) {\n              console.log('REST null result for', txid, status);\n            } else if (status.err) {\n              console.log('REST error for', txid, status);\n              done = true;\n              reject(status.err);\n            } else if (!status.confirmations) {\n              console.log('REST no confirmations for', txid, status);\n            } else {\n              console.log('REST confirmation for', txid, status);\n              done = true;\n              resolve(status);\n            }\n          }\n        } catch (e) {\n          if (!done) {\n            console.log('REST connection error: txid', txid, e);\n          }\n        }\n      })();\n      await sleep(2000);\n    }\n  });\n\n  //@ts-ignore\n  if (connection._signatureSubscriptions[subId]) {\n    connection.removeSignatureListener(subId);\n  }\n  done = true;\n  console.log('Returning status', status);\n  return status;\n};\n\n/* export */ const createAssociatedTokenAccountInstruction = (\n  associatedTokenAddress: anchor.web3.PublicKey,\n  payer: anchor.web3.PublicKey,\n  walletAddress: anchor.web3.PublicKey,\n  splTokenMintAddress: anchor.web3.PublicKey,\n) => {\n  const keys = [\n    { pubkey: payer, isSigner: true, isWritable: true },\n    { pubkey: associatedTokenAddress, isSigner: false, isWritable: true },\n    { pubkey: walletAddress, isSigner: false, isWritable: false },\n    { pubkey: splTokenMintAddress, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SystemProgram.programId,\n      isSigner: false,\n      isWritable: false,\n    },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false,\n    },\n  ];\n  return new anchor.web3.TransactionInstruction({\n    keys,\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n    data: Buffer.from([]),\n  });\n};\n\nexport const getCandyMachineState = async (\n  anchorWallet: anchor.Wallet,\n  candyMachineId: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection,\n): Promise<CandyMachineAccount> => {\n  const provider = new anchor.Provider(connection, anchorWallet, {\n    preflightCommitment: 'recent',\n  });\n\n  const idl = await anchor.Program.fetchIdl(CANDY_MACHINE_PROGRAM, provider);\n\n  const program = new anchor.Program(idl, CANDY_MACHINE_PROGRAM, provider);\n\n  const state: any = await program.account.candyMachine.fetch(candyMachineId);\n  const itemsAvailable = state.data.itemsAvailable.toNumber();\n  const itemsRedeemed = state.itemsRedeemed.toNumber();\n  const itemsRemaining = itemsAvailable - itemsRedeemed;\n\n  return {\n    id: candyMachineId,\n    program,\n    state: {\n      itemsAvailable,\n      itemsRedeemed,\n      itemsRemaining,\n      isSoldOut: itemsRemaining === 0,\n      isActive: state.data.goLiveDate.toNumber() < new Date().getTime() / 1000,\n      goLiveDate: state.data.goLiveDate,\n      treasury: state.wallet,\n      tokenMint: state.tokenMint,\n      config: state.config,\n      price: state.data.price,\n    },\n  };\n};\n\nconst getMasterEdition = async (\n  mint: anchor.web3.PublicKey,\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from('metadata'),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n        Buffer.from('edition'),\n      ],\n      TOKEN_METADATA_PROGRAM_ID,\n    )\n  )[0];\n};\n\nconst getMetadata = async (\n  mint: anchor.web3.PublicKey,\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from('metadata'),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n      ],\n      TOKEN_METADATA_PROGRAM_ID,\n    )\n  )[0];\n};\n\nexport const mintOneToken = async (\n  candyMachine: CandyMachineAccount,\n  payer: anchor.web3.PublicKey,\n): Promise<string> => {\n  const mint = anchor.web3.Keypair.generate();\n\n  const userTokenAccountAddress = (\n    await getAtaForMint(mint.publicKey, payer)\n  )[0];\n\n  const userPayingAccountAddress = (\n    await getAtaForMint(candyMachine.state.tokenMint, payer)\n  )[0];\n\n  const candyMachineAddress = candyMachine.id;\n\n  const remainingAccounts = [];\n  const signers: anchor.web3.Keypair[] = [mint];\n  const instructions = [\n    anchor.web3.SystemProgram.createAccount({\n      fromPubkey: payer,\n      newAccountPubkey: mint.publicKey,\n      space: MintLayout.span,\n      lamports:\n        await candyMachine.program.provider.connection.getMinimumBalanceForRentExemption(\n          MintLayout.span,\n        ),\n      programId: TOKEN_PROGRAM_ID,\n    }),\n    Token.createInitMintInstruction(\n      TOKEN_PROGRAM_ID,\n      mint.publicKey,\n      0,\n      payer,\n      payer,\n    ),\n    createAssociatedTokenAccountInstruction(\n      userTokenAccountAddress,\n      payer,\n      payer,\n      mint.publicKey,\n    ),\n    Token.createMintToInstruction(\n      TOKEN_PROGRAM_ID,\n      mint.publicKey,\n      userTokenAccountAddress,\n      payer,\n      [],\n      1,\n    ),\n  ];\n\n  let tokenAccount;\n  if (candyMachine.state.tokenMint) {\n    const transferAuthority = anchor.web3.Keypair.generate();\n\n    signers.push(transferAuthority);\n    remainingAccounts.push({\n      pubkey: userPayingAccountAddress,\n      isWritable: true,\n      isSigner: false,\n    });\n    remainingAccounts.push({\n      pubkey: transferAuthority.publicKey,\n      isWritable: false,\n      isSigner: true,\n    });\n\n    instructions.push(\n      Token.createApproveInstruction(\n        TOKEN_PROGRAM_ID,\n        userPayingAccountAddress,\n        transferAuthority.publicKey,\n        payer,\n        [],\n        candyMachine.state.price.toNumber(),\n      ),\n    );\n  }\n  const metadataAddress = await getMetadata(mint.publicKey);\n  const masterEdition = await getMasterEdition(mint.publicKey);\n\n  instructions.push(\n    await candyMachine.program.instruction.mintNft({\n      accounts: {\n        config: candyMachine.state.config,\n        candyMachine: candyMachineAddress,\n        payer,\n        wallet: candyMachine.state.treasury,\n        mint: mint.publicKey,\n        metadata: metadataAddress,\n        masterEdition,\n        mintAuthority: payer,\n        updateAuthority: payer,\n        tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\n        tokenProgram: TOKEN_PROGRAM_ID,\n        systemProgram: SystemProgram.programId,\n        rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n        clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n      },\n      remainingAccounts:\n        remainingAccounts.length > 0 ? remainingAccounts : undefined,\n    }),\n  );\n\n  if (tokenAccount) {\n    instructions.push(\n      Token.createRevokeInstruction(\n        TOKEN_PROGRAM_ID,\n        userPayingAccountAddress,\n        payer,\n        [],\n      ),\n    );\n  }\n  try {\n    return (\n      await sendTransactionWithRetry(\n        candyMachine.program.provider.connection,\n        candyMachine.program.provider.wallet,\n        instructions,\n        signers,\n      )\n    ).txid;\n  } catch (e) {\n    console.log(e);\n  }\n  return 'j';\n};\n\nexport const shortenAddress = (address: string, chars = 4): string => {\n  return `${address.slice(0, chars)}...${address.slice(-chars)}`;\n};\n\nconst sleep = (ms: number): Promise<void> => {\n  return new Promise(resolve => setTimeout(resolve, ms));\n};\n","import * as anchor from '@project-serum/anchor';\nimport { TOKEN_PROGRAM_ID } from '@solana/spl-token';\nimport { SystemProgram } from '@solana/web3.js';\nimport {\n  LAMPORTS_PER_SOL,\n  SYSVAR_RENT_PUBKEY,\n  TransactionInstruction,\n} from '@solana/web3.js';\n\nexport const FAIR_LAUNCH_PROGRAM_ID = new anchor.web3.PublicKey(\n  'EHNbEKdx5qimYUBQdUXq2KmdZeikbnpiEzpKnydBUEwB',\n);\n\nexport const toDate = (value?: anchor.BN) => {\n  if (!value) {\n    return;\n  }\n\n  return new Date(value.toNumber() * 1000);\n};\n\nconst numberFormater = new Intl.NumberFormat('en-US', {\n  style: 'decimal',\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\nexport const formatNumber = {\n  format: (val?: number) => {\n    if (!val) {\n      return '--';\n    }\n\n    return numberFormater.format(val);\n  },\n  asInteger: (val?: anchor.BN) => {\n    if (!val) {\n      return 1;\n    }\n    return val.toNumber();\n  },\n  asNumber: (val?: anchor.BN) => {\n    if (!val) {\n      return undefined;\n    }\n\n    return val.toNumber() / LAMPORTS_PER_SOL;\n  },\n};\n\nexport const SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID =\n  new anchor.web3.PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL');\n\nexport const getFairLaunchTicketSeqLookup = async (\n  tokenMint: anchor.web3.PublicKey,\n  seq: anchor.BN,\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [\n      Buffer.from('fair_launch'),\n      tokenMint.toBuffer(),\n      seq.toArrayLike(Buffer, 'le', 8),\n    ],\n    FAIR_LAUNCH_PROGRAM_ID,\n  );\n};\n\nexport const getAtaForMint = async (\n  mint: anchor.web3.PublicKey,\n  buyer: anchor.web3.PublicKey,\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [buyer.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()],\n    SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n  );\n};\n\nexport const getFairLaunchTicket = async (\n  tokenMint: anchor.web3.PublicKey,\n  buyer: anchor.web3.PublicKey,\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [Buffer.from('fair_launch'), tokenMint.toBuffer(), buyer.toBuffer()],\n    FAIR_LAUNCH_PROGRAM_ID,\n  );\n};\n\nexport function createAssociatedTokenAccountInstruction(\n  associatedTokenAddress: anchor.web3.PublicKey,\n  payer: anchor.web3.PublicKey,\n  walletAddress: anchor.web3.PublicKey,\n  splTokenMintAddress: anchor.web3.PublicKey,\n) {\n  const keys = [\n    {\n      pubkey: payer,\n      isSigner: true,\n      isWritable: true,\n    },\n    {\n      pubkey: associatedTokenAddress,\n      isSigner: false,\n      isWritable: true,\n    },\n    {\n      pubkey: walletAddress,\n      isSigner: false,\n      isWritable: false,\n    },\n    {\n      pubkey: splTokenMintAddress,\n      isSigner: false,\n      isWritable: false,\n    },\n    {\n      pubkey: SystemProgram.programId,\n      isSigner: false,\n      isWritable: false,\n    },\n    {\n      pubkey: TOKEN_PROGRAM_ID,\n      isSigner: false,\n      isWritable: false,\n    },\n    {\n      pubkey: SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false,\n    },\n  ];\n  return new TransactionInstruction({\n    keys,\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n    data: Buffer.from([]),\n  });\n}\n","import {\n  Keypair,\n  Commitment,\n  Connection,\n  RpcResponseAndContext,\n  SignatureStatus,\n  SimulatedTransactionResponse,\n  Transaction,\n  TransactionInstruction,\n  TransactionSignature,\n  Blockhash,\n  FeeCalculator,\n} from '@solana/web3.js';\n\nimport {\n  WalletNotConnectedError,\n} from '@solana/wallet-adapter-base';\n\ninterface BlockhashAndFeeCalculator {\n  blockhash: Blockhash;\n  feeCalculator: FeeCalculator;\n}\n\nexport const getErrorForTransaction = async (\n  connection: Connection,\n  txid: string,\n) => {\n  // wait for all confirmation before geting transaction\n  await connection.confirmTransaction(txid, 'max');\n\n  const tx = await connection.getParsedConfirmedTransaction(txid);\n\n  const errors: string[] = [];\n  if (tx?.meta && tx.meta.logMessages) {\n    tx.meta.logMessages.forEach(log => {\n      const regex = /Error: (.*)/gm;\n      let m;\n      while ((m = regex.exec(log)) !== null) {\n        // This is necessary to avoid infinite loops with zero-width matches\n        if (m.index === regex.lastIndex) {\n          regex.lastIndex++;\n        }\n\n        if (m.length > 1) {\n          errors.push(m[1]);\n        }\n      }\n    });\n  }\n\n  return errors;\n};\n\nexport enum SequenceType {\n  Sequential,\n  Parallel,\n  StopOnFailure,\n}\n\nexport async function sendTransactionsWithManualRetry(\n  connection: Connection,\n  wallet: any,\n  instructions: TransactionInstruction[][],\n  signers: Keypair[][],\n) {\n  let stopPoint = 0;\n  let tries = 0;\n  let lastInstructionsLength = null;\n  let toRemoveSigners: Record<number, boolean> = {};\n  instructions = instructions.filter((instr, i) => {\n    if (instr.length > 0) {\n      return true;\n    } else {\n      toRemoveSigners[i] = true;\n      return false;\n    }\n  });\n  let filteredSigners = signers.filter((_, i) => !toRemoveSigners[i]);\n\n  while (stopPoint < instructions.length && tries < 3) {\n    instructions = instructions.slice(stopPoint, instructions.length);\n    filteredSigners = filteredSigners.slice(stopPoint, filteredSigners.length);\n\n    if (instructions.length === lastInstructionsLength) tries = tries + 1;\n    else tries = 0;\n\n    try {\n      if (instructions.length === 1) {\n        await sendTransactionWithRetry(\n          connection,\n          wallet,\n          instructions[0],\n          filteredSigners[0],\n          'single',\n        );\n        stopPoint = 1;\n      } else {\n        stopPoint = await sendTransactions(\n          connection,\n          wallet,\n          instructions,\n          filteredSigners,\n          SequenceType.StopOnFailure,\n          'single',\n        );\n      }\n    } catch (e) {\n      console.error(e);\n    }\n    console.log(\n      'Died on ',\n      stopPoint,\n      'retrying from instruction',\n      instructions[stopPoint],\n      'instructions length is',\n      instructions.length,\n    );\n    lastInstructionsLength = instructions.length;\n  }\n}\n\nexport const sendTransactions = async (\n  connection: Connection,\n  wallet: any,\n  instructionSet: TransactionInstruction[][],\n  signersSet: Keypair[][],\n  sequenceType: SequenceType = SequenceType.Parallel,\n  commitment: Commitment = 'singleGossip',\n  successCallback: (txid: string, ind: number) => void = (txid, ind) => {},\n  failCallback: (reason: string, ind: number) => boolean = (txid, ind) => false,\n  block?: BlockhashAndFeeCalculator,\n): Promise<number> => {\n  if (!wallet.publicKey) throw new WalletNotConnectedError();\n\n  const unsignedTxns: Transaction[] = [];\n\n  if (!block) {\n    block = await connection.getRecentBlockhash(commitment);\n  }\n\n  for (let i = 0; i < instructionSet.length; i++) {\n    const instructions = instructionSet[i];\n    const signers = signersSet[i];\n\n    if (instructions.length === 0) {\n      continue;\n    }\n\n    let transaction = new Transaction();\n    instructions.forEach(instruction => transaction.add(instruction));\n    transaction.recentBlockhash = block.blockhash;\n    transaction.setSigners(\n      // fee payed by the wallet owner\n      wallet.publicKey,\n      ...signers.map(s => s.publicKey),\n    );\n\n    if (signers.length > 0) {\n      transaction.partialSign(...signers);\n    }\n\n    unsignedTxns.push(transaction);\n  }\n\n  const signedTxns = await wallet.signAllTransactions(unsignedTxns);\n\n  const pendingTxns: Promise<{ txid: string; slot: number }>[] = [];\n\n  let breakEarlyObject = { breakEarly: false, i: 0 };\n  console.log(\n    'Signed txns length',\n    signedTxns.length,\n    'vs handed in length',\n    instructionSet.length,\n  );\n  for (let i = 0; i < signedTxns.length; i++) {\n    const signedTxnPromise = sendSignedTransaction({\n      connection,\n      signedTransaction: signedTxns[i],\n    });\n\n    signedTxnPromise\n      .then(({ txid, slot }) => {\n        successCallback(txid, i);\n      })\n      .catch(reason => {\n        // @ts-ignore\n        failCallback(signedTxns[i], i);\n        if (sequenceType === SequenceType.StopOnFailure) {\n          breakEarlyObject.breakEarly = true;\n          breakEarlyObject.i = i;\n        }\n      });\n\n    if (sequenceType !== SequenceType.Parallel) {\n      try {\n        await signedTxnPromise;\n      } catch (e) {\n        console.log('Caught failure', e);\n        if (breakEarlyObject.breakEarly) {\n          console.log('Died on ', breakEarlyObject.i);\n          return breakEarlyObject.i; // Return the txn we failed on by index\n        }\n      }\n    } else {\n      pendingTxns.push(signedTxnPromise);\n    }\n  }\n\n  if (sequenceType !== SequenceType.Parallel) {\n    await Promise.all(pendingTxns);\n  }\n\n  return signedTxns.length;\n};\n\nexport const sendTransaction = async (\n  connection: Connection,\n  wallet: any,\n  instructions: TransactionInstruction[],\n  signers: Keypair[],\n  awaitConfirmation = true,\n  commitment: Commitment = 'singleGossip',\n  includesFeePayer: boolean = false,\n  block?: BlockhashAndFeeCalculator,\n) => {\n  if (!wallet.publicKey) throw new WalletNotConnectedError();\n\n  let transaction = new Transaction();\n  instructions.forEach(instruction => transaction.add(instruction));\n  transaction.recentBlockhash = (\n    block || (await connection.getRecentBlockhash(commitment))\n  ).blockhash;\n\n  if (includesFeePayer) {\n    transaction.setSigners(...signers.map(s => s.publicKey));\n  } else {\n    transaction.setSigners(\n      // fee payed by the wallet owner\n      wallet.publicKey,\n      ...signers.map(s => s.publicKey),\n    );\n  }\n\n  if (signers.length > 0) {\n    transaction.partialSign(...signers);\n  }\n  if (!includesFeePayer) {\n    transaction = await wallet.signTransaction(transaction);\n  }\n\n  const rawTransaction = transaction.serialize();\n  let options = {\n    skipPreflight: true,\n    commitment,\n  };\n\n  const txid = await connection.sendRawTransaction(rawTransaction, options);\n  let slot = 0;\n\n  if (awaitConfirmation) {\n    const confirmation = await awaitTransactionSignatureConfirmation(\n      txid,\n      DEFAULT_TIMEOUT,\n      connection,\n      commitment,\n    );\n\n    if (!confirmation)\n      throw new Error('Timed out awaiting confirmation on transaction');\n    slot = confirmation?.slot || 0;\n\n    if (confirmation?.err) {\n      const errors = await getErrorForTransaction(connection, txid);\n\n      console.log(errors);\n      throw new Error(`Raw transaction ${txid} failed`);\n    }\n  }\n\n  return { txid, slot };\n};\n\nexport const sendTransactionWithRetry = async (\n  connection: Connection,\n  wallet: any,\n  instructions: TransactionInstruction[],\n  signers: Keypair[],\n  commitment: Commitment = 'singleGossip',\n  includesFeePayer: boolean = false,\n  block?: BlockhashAndFeeCalculator,\n  beforeSend?: () => void,\n) => {\n  if (!wallet.publicKey) throw new WalletNotConnectedError();\n\n  let transaction = new Transaction();\n  instructions.forEach(instruction => transaction.add(instruction));\n  transaction.recentBlockhash = (\n    block || (await connection.getRecentBlockhash(commitment))\n  ).blockhash;\n\n  if (includesFeePayer) {\n    transaction.setSigners(...signers.map(s => s.publicKey));\n  } else {\n    transaction.setSigners(\n      // fee payed by the wallet owner\n      wallet.publicKey,\n      ...signers.map(s => s.publicKey),\n    );\n  }\n\n  if (signers.length > 0) {\n    transaction.partialSign(...signers);\n  }\n  if (!includesFeePayer) {\n    transaction = await wallet.signTransaction(transaction);\n  }\n\n  if (beforeSend) {\n    beforeSend();\n  }\n\n  const { txid, slot } = await sendSignedTransaction({\n    connection,\n    signedTransaction: transaction,\n  });\n\n  return { txid, slot };\n};\n\nexport const getUnixTs = () => {\n  return new Date().getTime() / 1000;\n};\n\nconst DEFAULT_TIMEOUT = 15000;\n\nexport async function sendSignedTransaction({\n  signedTransaction,\n  connection,\n  timeout = DEFAULT_TIMEOUT,\n}: {\n  signedTransaction: Transaction;\n  connection: Connection;\n  sendingMessage?: string;\n  sentMessage?: string;\n  successMessage?: string;\n  timeout?: number;\n}): Promise<{ txid: string; slot: number }> {\n  const rawTransaction = signedTransaction.serialize();\n  const startTime = getUnixTs();\n  let slot = 0;\n  const txid: TransactionSignature = await connection.sendRawTransaction(\n    rawTransaction,\n    {\n      skipPreflight: true,\n    },\n  );\n\n  console.log('Started awaiting confirmation for', txid);\n\n  let done = false;\n  (async () => {\n    while (!done && getUnixTs() - startTime < timeout) {\n      connection.sendRawTransaction(rawTransaction, {\n        skipPreflight: true,\n      });\n      await sleep(500);\n    }\n  })();\n  try {\n    const confirmation = await awaitTransactionSignatureConfirmation(\n      txid,\n      timeout,\n      connection,\n      'recent',\n      true,\n    );\n\n    if (!confirmation)\n      throw new Error('Timed out awaiting confirmation on transaction');\n\n    if (confirmation.err) {\n      console.error(confirmation.err);\n      throw new Error('Transaction failed: Custom instruction error');\n    }\n\n    slot = confirmation?.slot || 0;\n  } catch (err: any) {\n    console.error('Timeout Error caught', err);\n    if (err.timeout) {\n      throw new Error('Timed out awaiting confirmation on transaction');\n    }\n    let simulateResult: SimulatedTransactionResponse | null = null;\n    try {\n      simulateResult = (\n        await simulateTransaction(connection, signedTransaction, 'single')\n      ).value;\n    } catch (e) {}\n    if (simulateResult && simulateResult.err) {\n      if (simulateResult.logs) {\n        for (let i = simulateResult.logs.length - 1; i >= 0; --i) {\n          const line = simulateResult.logs[i];\n          if (line.startsWith('Program log: ')) {\n            throw new Error(\n              'Transaction failed: ' + line.slice('Program log: '.length),\n            );\n          }\n        }\n      }\n      throw new Error(JSON.stringify(simulateResult.err));\n    }\n    // throw new Error('Transaction failed');\n  } finally {\n    done = true;\n  }\n\n  console.log('Latency', txid, getUnixTs() - startTime);\n  return { txid, slot };\n}\n\nasync function simulateTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  commitment: Commitment,\n): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n  // @ts-ignore\n  transaction.recentBlockhash = await connection._recentBlockhash(\n    // @ts-ignore\n    connection._disableBlockhashCaching,\n  );\n\n  const signData = transaction.serializeMessage();\n  // @ts-ignore\n  const wireTransaction = transaction._serialize(signData);\n  const encodedTransaction = wireTransaction.toString('base64');\n  const config: any = { encoding: 'base64', commitment };\n  const args = [encodedTransaction, config];\n\n  // @ts-ignore\n  const res = await connection._rpcRequest('simulateTransaction', args);\n  if (res.error) {\n    throw new Error('failed to simulate transaction: ' + res.error.message);\n  }\n  return res.result;\n}\n\nasync function awaitTransactionSignatureConfirmation(\n  txid: TransactionSignature,\n  timeout: number,\n  connection: Connection,\n  commitment: Commitment = 'recent',\n  queryStatus = false,\n): Promise<SignatureStatus | null | void> {\n  let done = false;\n  let status: SignatureStatus | null | void = {\n    slot: 0,\n    confirmations: 0,\n    err: null,\n  };\n  let subId = 0;\n  status = await new Promise(async (resolve, reject) => {\n    setTimeout(() => {\n      if (done) {\n        return;\n      }\n      done = true;\n      console.log('Rejecting for timeout...');\n      reject({ timeout: true });\n    }, timeout);\n    try {\n      subId = connection.onSignature(\n        txid,\n        (result, context) => {\n          done = true;\n          status = {\n            err: result.err,\n            slot: context.slot,\n            confirmations: 0,\n          };\n          if (result.err) {\n            console.log('Rejected via websocket', result.err);\n            reject(status);\n          } else {\n            console.log('Resolved via websocket', result);\n            resolve(status);\n          }\n        },\n        commitment,\n      );\n    } catch (e) {\n      done = true;\n      console.error('WS error in setup', txid, e);\n    }\n    while (!done && queryStatus) {\n      // eslint-disable-next-line no-loop-func\n      (async () => {\n        try {\n          const signatureStatuses = await connection.getSignatureStatuses([\n            txid,\n          ]);\n          status = signatureStatuses && signatureStatuses.value[0];\n          if (!done) {\n            if (!status) {\n              console.log('REST null result for', txid, status);\n            } else if (status.err) {\n              console.log('REST error for', txid, status);\n              done = true;\n              reject(status.err);\n            } else if (!status.confirmations) {\n              console.log('REST no confirmations for', txid, status);\n            } else {\n              console.log('REST confirmation for', txid, status);\n              done = true;\n              resolve(status);\n            }\n          }\n        } catch (e) {\n          if (!done) {\n            console.log('REST connection error: txid', txid, e);\n          }\n        }\n      })();\n      await sleep(2000);\n    }\n  });\n\n  //@ts-ignore\n  if (connection._signatureSubscriptions[subId])\n    connection.removeSignatureListener(subId);\n  done = true;\n  console.log('Returning status', status);\n  return status;\n}\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import { useEffect, useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport {\n  CircularProgress,\n  Container,\n  IconButton,\n  Link,\n  Slider,\n  Snackbar,\n} from '@material-ui/core';\n// @ts-ignore\nimport { TwitterTimelineEmbed, TwitterShareButton, TwitterFollowButton, TwitterHashtagButton, TwitterMentionButton, TwitterTweetEmbed, TwitterMomentShare, TwitterDMButton, TwitterVideoEmbed, TwitterOnAirButton } from 'react-twitter-embed';\n\nimport { LAMPORTS_PER_SOL } from '@solana/web3.js'\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { createStyles, Theme } from '@material-ui/core/styles';\nimport { PhaseCountdown } from './countdown';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Alert from '@material-ui/lab/Alert';\n\nimport * as anchor from '@project-serum/anchor';\n\n\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { WalletDialogButton } from '@solana/wallet-adapter-material-ui';\n\nimport {\n  awaitTransactionSignatureConfirmation,\n  CandyMachineAccount,\n  getCandyMachineState,\n  mintOneToken,\n} from './candy-machine';\n\nimport {\n  FairLaunchAccount,\n  getFairLaunchState,\n  punchTicket,\n  purchaseTicket,\n  receiveRefund,\n  show,\n  show_lottery,\n  winnerwinnerchickendinner\n} from './fair-launch';\n\nimport { formatNumber, getAtaForMint, toDate } from './utils';\nimport Countdown from 'react-countdown';\n\n\nconst ConnectButton = styled(WalletDialogButton)`\n  width: 100%;\n  height: 60px;\n  margin-top: 10px;\n  margin-bottom: 5px;\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nconst MintContainer = styled.div``; // add your styles here\n\nconst MintButton = styled(Button)`\n  width: 100%;\n  height: 60px;\n  margin-top: 10px;\n  margin-bottom: 5px;\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n`; // add your styles here\n\nconst dialogStyles: any = (theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 0,\n      padding: theme.spacing(2),\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500],\n    },\n  });\n\nconst ValueSlider = styled(Slider)({\n  color: '#C0D5FE',\n  height: 8,\n  '& > *': {\n    height: 4,\n  },\n  '& .MuiSlider-track': {\n    border: 'none',\n    height: 4,\n  },\n  '& .MuiSlider-thumb': {\n    height: 24,\n    width: 24,\n    marginTop: -10,\n    background: 'linear-gradient(180deg, #604AE5 0%, #813EEE 100%)',\n    border: '2px solid currentColor',\n    '&:focus, &:hover, &.Mui-active, &.Mui-focusVisible': {\n      boxShadow: 'inherit',\n    },\n    '&:before': {\n      display: 'none',\n    },\n  },\n  '& .MuiSlider-valueLabel': {\n    '& > *': {\n      background: 'linear-gradient(180deg, #604AE5 0%, #813EEE 100%)',\n    },\n    lineHeight: 1.2,\n    fontSize: 12,\n    padding: 0,\n    width: 32,\n    height: 32,\n    marginLeft: 9,\n  },\n});\n\nenum Phase {\n  Phase0,\n  Phase1,\n  Phase2,\n  Lottery,\n  Phase3,\n  Phase4,\n  Unknown,\n}\n\nconst Header = (props: {\n  phaseName: string;\n  desc: string;\n  date: anchor.BN | undefined;\n  status?: string;\n}) => {\n  const { phaseName, desc, date, status } = props;\n  return (\n    <Grid container justifyContent=\"center\">\n      <Grid xs={6} justifyContent=\"center\" direction=\"column\">\n        <Typography variant=\"h5\" style={{ fontWeight: 600 }}>\n          {phaseName}\n        </Typography>\n        <Typography variant=\"body1\" color=\"textSecondary\">\n          {desc}\n        </Typography>\n      </Grid>\n      <Grid xs={6} container justifyContent=\"flex-end\">\n        <PhaseCountdown\n          date={toDate(date)}\n          style={{ justifyContent: 'flex-end' }}\n          status={status || 'COMPLETE'}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nfunction getPhase(\n  fairLaunch: FairLaunchAccount | undefined,\n  candyMachine: CandyMachineAccount | undefined,\n): Phase {\n  const curr = new Date().getTime();\n\n  const phaseOne = toDate(fairLaunch?.state.data.phaseOneStart)?.getTime();\n  const phaseOneEnd = toDate(fairLaunch?.state.data.phaseOneEnd)?.getTime();\n  const phaseTwoEnd = toDate(fairLaunch?.state.data.phaseTwoEnd)?.getTime();\n  const candyMachineGoLive = toDate(candyMachine?.state.goLiveDate)?.getTime();\n\n  if (phaseOne && curr < phaseOne) {\n    return Phase.Phase0;\n  } else if (phaseOneEnd && curr <= phaseOneEnd) {\n    return Phase.Phase1;\n  } else if (phaseTwoEnd && curr <= phaseTwoEnd) {\n    return Phase.Phase2;\n  } else if (!fairLaunch?.state.phaseThreeStarted) {\n    return Phase.Lottery;\n  } else if (\n    fairLaunch?.state.phaseThreeStarted &&\n    candyMachineGoLive &&\n    curr > candyMachineGoLive\n  ) {\n    return Phase.Phase4;\n  } else if (fairLaunch?.state.phaseThreeStarted) {\n    return Phase.Phase3;\n  }\n\n  return Phase.Unknown;\n}\n\nexport interface HomeProps {\n  candyMachineId?: anchor.web3.PublicKey;\n  fairLaunchId: anchor.web3.PublicKey;\n  connection: anchor.web3.Connection;\n  startDate: number;\n  txTimeout: number;\n}\n\nconst FAIR_LAUNCH_LOTTERY_SIZE =\n  8 + // discriminator\n  32 + // fair launch\n  1 + // bump\n  8; // size of bitmask ones\n\nconst isWinner = (\n  fairLaunch: FairLaunchAccount | undefined,\n  fairLaunchBalance: number,\n): boolean => {\n  console.log(fairLaunchBalance)\n  if (fairLaunchBalance > 0) return true;\n  if (\n    !fairLaunch?.lottery.data ||\n    !fairLaunch?.lottery.data.length ||\n    !fairLaunch?.ticket.data?.seq ||\n    !fairLaunch?.state.phaseThreeStarted\n  ) {\n    console.log('false')\n    return false;\n  }\n  const myByte =\n        fairLaunch.lottery.data[\n          FAIR_LAUNCH_LOTTERY_SIZE + Math.floor(fairLaunch.ticket.data?.seq.toNumber() / 8)\n        ];\n\n      const positionFromRight = 7 - (fairLaunch.ticket.data?.seq.toNumber() % 8);\n      const mask = Math.pow(2, positionFromRight);\n      const isWinner = myByte & mask;\n      \n  return isWinner > 0;\n};\n function sleep(ms: any) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\nlet first = true;\n\nconst Home = (props: HomeProps) => {\n\n  const [fairLaunchBalance, setFairLaunchBalance] = useState<number>(0);\n  const [yourSOLBalance, setYourSOLBalance] = useState<number | null>(null);\n const [show1, setShow1] = useState<string[]>([\"\"]);\n  const  [show2, setShow2] = useState<string[]>([\"\"]);\n  const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\n  const [contributed, setContributed] = useState(0);\n\n  const wallet = useWallet();\n\n  const anchorWallet = useMemo(() => {\n    if (\n      !wallet ||\n      !wallet.publicKey ||\n      !wallet.signAllTransactions ||\n      !wallet.signTransaction\n    ) {\n      return;\n    }\n\n    return {\n      publicKey: wallet.publicKey,\n      signAllTransactions: wallet.signAllTransactions,\n      signTransaction: wallet.signTransaction,\n    } as anchor.Wallet;\n  }, [wallet]);\n\n  const [alertState, setAlertState] = useState<AlertState>({\n    open: false,\n    message: '',\n    severity: undefined,\n  });\n\n  const [fairLaunch, setFairLaunch] = useState<FairLaunchAccount>();\n  const [candyMachine, setCandyMachine] = useState<CandyMachineAccount>();\n  const [howToOpen, setHowToOpen] = useState(false);\n  const [refundExplainerOpen, setRefundExplainerOpen] = useState(false);\n  const [showOpen, setShowOpen] = useState(false);\n  const [aShow1, setAShow1] = useState<any>([]);\n  const [aShow2, setAShow2] = useState<any>([]);\n  // @ts-ignore\n    if (fairLaunch != undefined && first && anchorWallet != undefined){\nif (fairLaunch.state != undefined){\nfirst = false\n// @ts-ignore\n\n  setTimeout(async function(){\n    // @ts-ignore\nconst t1 = (await show(anchorWallet, fairLaunch))\n\n  console.log(t1)\n    // @ts-ignore\n  const t2 = (await show_lottery(anchorWallet, fairLaunch))\n  console.log(t2)\n  try{\nsetAShow1(\n  \n  <div>\n  <h1>This fair3d's publicKey: {process.env.REACT_APP_FAIR_LAUNCH_ID!}</h1>\n  <h2>DYOR and run the show and show_lottery commands yourself on your own version of our modified Metaplex CLI...</h2>\n  <h2>...fear not! the Solana Program code in RUST is available for peer review on the same github repository :)</h2>\n  To accomplish this, run these commands with solana cli, git, node, npm and yarn installed - make sure you configure solana cli first! <br />\n  git clone https://github.com/dunncreativess/fair3d <br />\n  cd fair3d/js && yarn install && yarn build   <br />\n  node packages/cli/build/fair-launch-cli.js show -e mainnet-beta -k ~/.config/solana/id.json -f {process.env.REACT_APP_FAIR_LAUNCH_ID!} <br />\n  later, you can also run: <br />\n  node packages/cli/build/fair-launch-cli.js show_lottery -e mainnet-beta -k ~/.config/solana/id.json -f {process.env.REACT_APP_FAIR_LAUNCH_ID!} <br />\n  \n\n                        <h2>Metaplex fair-launch-cli 'show' command output:</h2>\n\n    {\n\n// @ts-ignore\n      t1.map((m, idx) => {\n\n            return (\n            <>\n              {m}<br />\n              \n            \n\n            </>\n            );\n    \n          })\n    }\n\n    </div>\n  );\n\n    } catch (err){\n      \n    }\n    try{\n setAShow2(\n \n  <div>\n\n                      <h2>Metaplex fair-launch-cli 'show_lottery' command output:</h2>\n\n                          {\n\n// @ts-ignore\n      t2.map((m, idx) => {\n\n            return (\n            <>\n              {m}<br />\n              \n            \n\n            </>\n            );\n          })}\n    </div>\n  );\n  \n    } catch (err){\n      \n    }\n}, 1000)\n}\n}\n  const onMint = async () => {\n    try {\n      setIsMinting(true);\n      if (wallet.connected && candyMachine?.program && wallet.publicKey) {\n        if (\n          fairLaunch?.ticket.data?.state.unpunched &&\n          isWinner(fairLaunch, fairLaunchBalance)\n        ) {\n          await onPunchTicket();\n        }\n\n        const mintTxId = await mintOneToken(candyMachine, wallet.publicKey);\n\n        const status = await awaitTransactionSignatureConfirmation(\n          mintTxId,\n          props.txTimeout,\n          props.connection,\n          'singleGossip',\n          false,\n        );\n\n        if (!status?.err) {\n          setAlertState({\n            open: true,\n            message: 'Congratulations! Mint succeeded!',\n            severity: 'success',\n          });\n        } else {\n          setAlertState({\n            open: true,\n            message: 'Mint failed! Please try again!',\n            severity: 'error',\n          });\n        }\n      }\n    } catch (error: any) {\n      // TODO: blech:\n      let message = error.msg || 'Minting failed! Please try again!';\n      if (!error.msg) {\n        if (!error.message) {\n          message = 'Transaction Timeout! Please try again.';\n        } else if (error.message.indexOf('0x138')) {\n        } else if (error.message.indexOf('0x137')) {\n          message = `SOLD OUT!`;\n        } else if (error.message.indexOf('0x135')) {\n          message = `Insufficient funds to mint. Please fund your wallet.`;\n        }\n      } else {\n        if (error.code === 311) {\n          message = `SOLD OUT!`;\n          window.location.reload();\n        } else if (error.code === 312) {\n          message = `Minting period hasn't started yet.`;\n        }\n      }\n\n      setAlertState({\n        open: true,\n        message,\n        severity: 'error',\n      });\n    } finally {\n      setIsMinting(false);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (!anchorWallet) {\n        return;\n      }\n\n      try {\n        const state = await getFairLaunchState(\n          anchorWallet,\n          props.fairLaunchId,\n          props.connection,\n        );\n\n        setFairLaunch(state);\n\n        setContributed(\n          (\n            state.state.currentMedian || state.state.data.priceRangeStart\n          ).toNumber() / LAMPORTS_PER_SOL,\n        );\n      } catch (e) {\n        console.log('Problem getting fair launch state');\n        console.log(e);\n      }\n      if (props.candyMachineId) {\n        try {\n          const cndy = await getCandyMachineState(\n            anchorWallet,\n            props.candyMachineId,\n            props.connection,\n          );\n          setCandyMachine(cndy);\n        } catch (e) {\n          console.log('Problem getting candy machine state');\n          console.log(e);\n        }\n      } else {\n        console.log('No candy machine detected in configuration.');\n      }\n    })();\n  }, [\n    anchorWallet,\n    props.candyMachineId,\n    props.connection,\n    props.fairLaunchId,\n  ]);\n\n  const min = formatNumber.asNumber(fairLaunch?.state.data.priceRangeStart);\n  const max = formatNumber.asNumber(fairLaunch?.state.data.priceRangeEnd);\n  const step = formatNumber.asNumber(fairLaunch?.state.data.tickSize);\n  const median = formatNumber.asNumber(fairLaunch?.state.currentMedian);\n  // @ts-ignore\n  const highest = (fairLaunch?.state.currentHighest) / LAMPORTS_PER_SOL;\n  let numtickets = formatNumber.asInteger(fairLaunch?.state.data.numberOfTokens);\n  console.log(min)\n  const marks = [\n    {\n      value: min || 0,\n        label: `${min} SOL`,\n    },{\n      value: highest || 0,\n        label: `Winning Bid: ${highest} SOL`,\n    },\n    // TODO:L\n    // display user comitted value\n    // {\n    //   value: 37,\n    //   label: '37°C',\n    // },\n    {\n      value: max || 0,\n      label: `${max} SOL`,\n    },\n  ].filter(_ => _ !== undefined) as any;\n\n  const onDeposit = async () => {\n    if (!anchorWallet) {\n      return;\n    }\n\n    console.log('deposit');\n    setIsMinting(true);\n\n    // @ts-ignore\n                      console.log(fairLaunch.state.authority.toBase58())\n                      console.log(anchorWallet.publicKey.toBase58())\ntry {\n    // @ts-ignore\n      if (fairLaunch.state.authority.toBase58() == anchorWallet.publicKey.toBase58()){\n\n    // @ts-ignore\n      await winnerwinnerchickendinner(anchorWallet, fairLaunch);\n      setIsMinting(false);\n      setAlertState({\n        open: true,\n        message: `Congratulations! You've punched every ticket and taken most of the balance ;)!`,\n        severity: 'success',\n      });\n      return;\n    }\n    } catch (e) {\n      console.log(e);\n      setIsMinting(false);\n      setAlertState({\n        open: true,\n        message: 'Something went wrong.',\n        severity: 'error',\n      });\n    }\n    try {\n      await purchaseTicket(contributed, anchorWallet, fairLaunch);\n      setIsMinting(false);\n      setAlertState({\n        open: true,\n        message: `Congratulations! Bid ${\n          fairLaunch?.ticket.data ? 'updated' : 'inserted'\n        }!`,\n        severity: 'success',\n      });\n    } catch (e) {\n      console.log(e);\n      setIsMinting(false);\n      setAlertState({\n        open: true,\n        message: 'Something went wrong.',\n        severity: 'error',\n      });\n    }\n  };\n  const onRugRefund = async () => {\n    if (!anchorWallet) {\n      return;\n    }\n\n    console.log('refund');\n    try {\n      setIsMinting(true);\n      await receiveRefund(anchorWallet, fairLaunch);\n      setIsMinting(false);\n      setAlertState({\n        open: true,\n        message:\n          'Congratulations! You have received a refund. This is an irreversible action.',\n        severity: 'success',\n      });\n    } catch (e) {\n      console.log(e);\n      setIsMinting(false);\n      setAlertState({\n        open: true,\n        message: 'Something went wrong.',\n        severity: 'error',\n      });\n    }\n  };\n  const onRefundTicket = async () => {\n    if (!anchorWallet) {\n      return;\n    }\n\n    console.log('refund');\n    try {\n      setIsMinting(true);\n      await purchaseTicket(0, anchorWallet, fairLaunch);\n      setIsMinting(false);\n      setAlertState({\n        open: true,\n        message:\n          'Congratulations! Funds withdrawn. This is an irreversible action.',\n        severity: 'success',\n      });\n    } catch (e) {\n      console.log(e);\n      setIsMinting(false);\n      setAlertState({\n        open: true,\n        message: 'Something went wrong.',\n        severity: 'error',\n      });\n    }\n  };\n\n  const onPunchTicket = async () => {\n    if (!anchorWallet || !fairLaunch || !fairLaunch.ticket) {\n      return;\n    }\n\n    console.log('punch');\n    setIsMinting(true);\n    try {\n      await punchTicket(anchorWallet, fairLaunch);\n      setIsMinting(false);\n      setAlertState({\n        open: true,\n        message: 'Congratulations! Ticket punched!',\n        severity: 'success',\n      });\n    } catch (e) {\n      console.log(e);\n      setIsMinting(false);\n      setAlertState({\n        open: true,\n        message: 'Something went wrong.',\n        severity: 'error',\n      });\n    }\n  };\n\n  const phase = getPhase(fairLaunch, candyMachine);\n\n  const candyMachinePredatesFairLaunch =\n    candyMachine?.state.goLiveDate &&\n    fairLaunch?.state.data.phaseTwoEnd &&\n    candyMachine?.state.goLiveDate.lt(fairLaunch?.state.data.phaseTwoEnd);\n\n  const notEnoughSOL = false;\n// @ts-ignore\nif (fairLaunch != undefined){\nconsole.log(fairLaunch.ticket)\n}\n  return (\n\n    <>\n    <Container style={{ marginTop: 100 }}>\n  \n     <Container maxWidth=\"xl\" style={{ position: 'relative' }}>\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'flex-end',\n          }}\n        >\n          <Link\n            component=\"button\"\n            variant=\"body2\"\n            color=\"textSecondary\"\n            align=\"right\"\n            onClick={() => {\n               \n\n              setShowOpen(true);\n\n            }}\n          >\n            Show Game && Show Lottery\n          </Link>\n        </div>\n      </Container>\n      <Container maxWidth=\"xl\" style={{ position: 'relative' }}>\n        <Paper\n          style={{ padding: 24, backgroundColor: '#151A1F', borderRadius: 6 }}\n        >\n          <Grid container justifyContent=\"center\" direction=\"column\">\n            {phase === Phase.Phase0 && (\n              <Header\n                phaseName={'Phase 0'}\n                desc={'Anticipation Phase'}\n                date={fairLaunch?.state.data.phaseOneStart}\n              />\n            )}\n            {phase === Phase.Phase1 && (\n              <Header\n                phaseName={'Phase 1'}\n                desc={'SOL of the Hill Phase'}\n                date={fairLaunch?.state.data.phaseOneEnd}\n              />\n            )}\n\n            {phase === Phase.Phase2 && (\n              <Header\n                phaseName={'Phase 2'}\n                desc={'Grace period'}\n                date={fairLaunch?.state.data.phaseTwoEnd}\n              />\n            )}\n\n            {phase === Phase.Lottery && (\n              <Header\n                phaseName={'Phase 3'}\n                desc={'MAKE DEV RUN LOTTERY!'}\n                date={fairLaunch?.state.data.phaseTwoEnd.add(\n                  fairLaunch?.state.data.lotteryDuration,\n                )}\n              />\n            )}\n\n            {phase === Phase.Phase3 && !candyMachine && (\n              <Header\n                phaseName={'Phase 3'}\n                desc={'Fair3d Game finished!'}\n                date={fairLaunch?.state.data.phaseTwoEnd}\n              />\n            )}\n\n            {phase === Phase.Phase3 && candyMachine && (\n              <Header\n                phaseName={'Phase 3'}\n                desc={'Minting starts in...'}\n                date={candyMachine?.state.goLiveDate}\n              />\n            )}\n\n            {phase === Phase.Phase4 && (\n              <Header\n                phaseName={\n                  candyMachinePredatesFairLaunch ? 'Phase 3' : 'Phase 4'\n                }\n                desc={'Candy Time 🍬 🍬 🍬'}\n                date={candyMachine?.state.goLiveDate}\n                status=\"LIVE\"\n              />\n            )}\n<TwitterShareButton\n    url={'https://fair3d.me'}\n    options={{ text: '#fair3d is awesome but hey, now I\\'m hurting my chances at $SOL of the Hill?', via: 'fair3d_me' }}\n  />\n            {fairLaunch && (\n              <Grid\n                container\n                direction=\"column\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                style={{\n                  height: 200,\n                  marginTop: 20,\n                  marginBottom: 20,\n                  background: '#384457',\n                  borderRadius: 6,\n                }}\n              >\n              <Typography variant=\"h6\" style={{ fontWeight: 900 }}>{ fairLaunch.state.authority.toBase58().slice(0,3)+'...'+ fairLaunch.state.authority.toBase58().slice(fairLaunch.state.authority.toBase58().length-3,fairLaunch.state.authority.toBase58().length)} is Authority</Typography>\n                {[Phase.Lottery].includes(phase) ? (\n                  <Typography>\n                    MAKE DEV RUN LOTTERY!! @jarettdunn @STACCArt <br />\n                    Hi! Make the DEV run the Lottery! This is to ensure no other party has a \n                    chance to change the results, as they're (currently...) calculated off-chain\n                    \n                  </Typography>\n                ): [Phase.Phase0, Phase.Phase1].includes(phase) && !fairLaunch.ticket.data ? (\n                 <>  <Typography>\n                    The last person to bid a new highest bid wins 90% the treasurypot. <br />\n\n                    10% of bidders win around 10% treasurypot. <br />\n                    \n                  </Typography>\n                  <Typography>Both net-new bids and a changed bid, if higher than the current highest bid, will become the new Authority.</Typography>\n                   </>\n                ): [Phase.Phase0, Phase.Phase1].includes(phase) && fairLaunch.ticket.data ? (\n                  <>\n\n                    <Typography>Your bid</Typography>\n                    <Typography variant=\"h6\" style={{ fontWeight: 900 }}>\n                      {\n                        formatNumber.format(\n                        (fairLaunch?.ticket.data?.amount.toNumber() || 0) /\n                          LAMPORTS_PER_SOL,\n                      )}{' '}\n                      SOL\n                    </Typography>\n                    <Typography>Both net-new bids and a changed bid, if higher than the current highest bid, will become the new Authority.</Typography>\n                  </>\n\n                  // @ts-ignore\n                ): [Phase.Phase2].includes(phase) && fairLaunch.ticket.data && fairLaunch?.ticket.data?.amount.toNumber() < median ? (\n                  <>\n\n                    <Typography>Your bid</Typography>\n                    <Typography variant=\"h6\" style={{ fontWeight: 900 }}>\n                      {\n                        formatNumber.format(\n                        (fairLaunch?.ticket.data?.amount.toNumber() || 0) /\n                          LAMPORTS_PER_SOL,\n                      )}{' '}\n                      SOL\n                      </Typography>\n                      <Typography>Median Bid - The Minimum To Qualify For A Chance At 10% Of The Bidders Sharing 10% Of The Pot :)</Typography>\n                    <Typography variant=\"h6\" style={{ fontWeight: 900 }}>\n                      {\n                        formatNumber.format(\n                        (median || 0) /\n                          LAMPORTS_PER_SOL,\n                      )}{' '}\n                      SOL\n                    </Typography>\n                    <Typography>Congrats on your bid! The Authority is now chosen and will win 90% of the pot. \n                    If you want a chance to win a share of what remains in the pot, adjust bid. GLHF!</Typography>\n                  </>\n                  // @ts-ignore\n                ) : [Phase.Phase2].includes(phase) && fairLaunch.ticket.data && fairLaunch?.ticket.data?.amount.toNumber() >= median ? (\n                  <>\n\n                    <Typography>Your bid</Typography>\n                    <Typography variant=\"h6\" style={{ fontWeight: 900 }}>\n                      {\n                        formatNumber.format(\n                        (fairLaunch?.ticket.data?.amount.toNumber() || 0) /\n                          LAMPORTS_PER_SOL,\n                      )}{' '}\n                      SOL\n                      </Typography>\n                      <Typography>Median Bid - The Minimum To Qualify For A Chance At 10% Of The Bidders Sharing 10% Of The Pot :)</Typography>\n                    <Typography variant=\"h6\" style={{ fontWeight: 900 }}>\n                      {\n                        formatNumber.format(\n                        (median || 0) /\n                          LAMPORTS_PER_SOL,\n                      )}{' '}\n                      SOL\n                    </Typography>\n                    <Typography>Congrats on your bid! The Authority is now chosen and will win 90% of the pot. </Typography>\n                  </>\n                )  : (\n                  <Typography>\n                    You didn't participate in this Fair3d Game.\n                  </Typography>\n                )}\n              </Grid>\n            )}\n\n            {fairLaunch && (\n              <>\n                {[\n                  Phase.Phase1,\n                  Phase.Phase2,\n                  Phase.Phase3,\n                  Phase.Lottery,\n                ].includes(phase) &&\n                  fairLaunch?.ticket?.data?.state.withdrawn && (\n                    <div style={{ paddingTop: '15px' }}>\n                      <Alert severity=\"error\">\n                        Your bid was withdrawn and cannot be adjusted or\n                        re-inserted.\n                      </Alert>\n                    </div>\n                  )}\n                {[Phase.Phase1, Phase.Phase2].includes(phase) &&\n                  fairLaunch.state.currentMedian &&\n                  fairLaunch?.ticket?.data?.amount &&\n                  !fairLaunch?.ticket?.data?.state.withdrawn &&\n                  fairLaunch.state.currentMedian.gt(\n                    fairLaunch?.ticket?.data?.amount,\n                  ) && (\n                    <div style={{ paddingTop: '15px' }}>\n                      <Alert severity=\"warning\">\n                        Your bid is currently below the median bid and will not be\n                        eligible for the Fair3d Game.\n                      </Alert>\n                    </div>\n                  )}\n                {[Phase.Phase3, Phase.Phase4, Phase.Lottery].includes(phase) &&\n                  fairLaunch.state.currentMedian &&\n                  fairLaunch?.ticket?.data?.amount &&\n                  !fairLaunch?.ticket?.data?.state.withdrawn &&\n                  fairLaunch.state.currentMedian.gt(\n                    fairLaunch?.ticket?.data?.amount,\n                  ) && (\n                    <div style={{ paddingTop: '15px' }}>\n                      <Alert severity=\"error\">\n                        Your bid wasn't the newest highest bid - you didn't win 90% of the treasurypot! Your bid was below the median bid and was not included in\n                        the lottery to win a chance of 10% of the pot.\n                      </Alert>\n                    </div>\n                  )}\n                {notEnoughSOL && (\n                  <Alert severity=\"error\">\n                    You do not have enough SOL in your account to place this\n                    bid.\n                  </Alert>\n                )}\n              </>\n            )}\n\n            {[Phase.Phase1, Phase.Phase2].includes(phase) && (\n              <>\n                <Grid style={{ marginTop: 40, marginBottom: 20 }}>\n                  <ValueSlider\n                    min={min}\n                    marks={marks}\n                    max={max}\n                    step={step}\n                    value={contributed}\n                    onChange={(ev, val) => setContributed(val as any)}\n                    valueLabelDisplay=\"auto\"\n                    style={{\n                      width: 'calc(100% - 40px)',\n                      marginLeft: 20,\n                      height: 30,\n                    }}\n                  />\n                </Grid>\n              </>\n            )}\n\n            {!wallet.connected ? (\n              <ConnectButton>\n                Connect{' '}\n                {[Phase.Phase1].includes(phase) ? 'to bid' : 'to see status'}\n              </ConnectButton>\n            ) : (\n              <div>\n              \n                {[Phase.Phase1, Phase.Phase2].includes(phase) && (\n                  <>\n                    <MintButton\n                      onClick={onDeposit}\n                      variant=\"contained\"\n                      disabled={\n                        isMinting ||\n                        (!fairLaunch?.ticket.data && phase === Phase.Phase2) ||\n                        notEnoughSOL\n                      }\n                    >\n                      {isMinting ? (\n                        <CircularProgress />\n                      ) : !fairLaunch?.ticket.data ? (\n                        'Place bid'\n                      ) : (\n                        'Change bid'\n                      )}\n                      {}\n                    </MintButton>\n                  </>\n                )}\n                \n\n                {\n\n                  [Phase.Phase3, Phase.Phase4].includes(phase) && (\n                  <>\n\n                    {\n// @ts-ignore\n                      fairLaunch.state.authority.toBase58() == anchorWallet.publicKey.toBase58() && (\n                    <MintButton\n                      onClick={onDeposit}\n                      variant=\"contained\"\n                      disabled={\n                        isMinting\n                      }\n                    >\n                       {isMinting ? <CircularProgress /> : 'WINNERwinner!! Click me!'}\n                      </MintButton>\n                    )}\n\n\n                    {isWinner(fairLaunch, fairLaunchBalance) && (\n                      <MintButton\n                        onClick={onPunchTicket}\n                        variant=\"contained\"\n                        disabled={\n                          fairLaunch?.ticket.data?.state.punched !== undefined\n                        }\n                      >\n                        {isMinting ? <CircularProgress /> : 'Punch Ticket'}\n                      </MintButton>\n                    )}\n\n                  </>\n                )}\n\n                {phase === Phase.Phase4 && (\n                  <>\n                    {(!fairLaunch ||\n                      isWinner(fairLaunch, fairLaunchBalance)) && (\n                      <MintContainer>\n                        <MintButton\n                          disabled={\n                            candyMachine?.state.isSoldOut ||\n                            isMinting ||\n                            !candyMachine?.state.isActive ||\n                            (fairLaunch?.ticket?.data?.state.punched &&\n                              fairLaunchBalance === 0)\n                          }\n                          onClick={onMint}\n                          variant=\"contained\"\n                        >\n                          {fairLaunch?.ticket?.data?.state.punched &&\n                          fairLaunchBalance === 0 ? (\n                            'MINTED'\n                          ) : candyMachine?.state.isSoldOut ? (\n                            'SOLD OUT'\n                          ) : isMinting ? (\n                            <CircularProgress />\n                          ) : (\n                            'MINT'\n                          )}\n                        </MintButton>\n                      </MintContainer>\n                    )}\n\n                  </>\n                )}\n              </div>\n            )}\n\n            <Grid\n              container\n              justifyContent=\"space-between\"\n              color=\"textSecondary\"\n            > <Link\n                component=\"button\"\n                variant=\"body2\"\n                color=\"textSecondary\"\n                align=\"left\"\n                onClick={() => {\n                  setHowToOpen(true);\n                }}\n              >\n                How this game works\n              </Link>\n              \n            </Grid>\n            <Dialog\n              open={refundExplainerOpen}\n              onClose={() => setRefundExplainerOpen(false)}\n              PaperProps={{\n                style: { backgroundColor: '#222933', borderRadius: 6 },\n              }}\n            >\n              <MuiDialogContent style={{ padding: 24 }}>\n                During Fair3d Game phases, or if you are a winner, or if this website\n                is not configured to be a fair launch but simply a candy\n                machine, refunds are disallowed.\n              </MuiDialogContent>\n            </Dialog>\n            <Dialog\n              open={showOpen}\n              onClose={() => {\n                setShowOpen(false);\n              }}\n              PaperProps={{\n                style: { backgroundColor: '#222933', borderRadius: 6 },\n              }}\n            >\n              <MuiDialogContent style={{ padding: 24 }}>\n                \n                    <div>\n                      <h1>Show Fair Launch + Show Lottery</h1>\n                      <p>\n                        Anyone at any time can run these commands for transparency of the game...\n                     </p>\n                     \n                     {aShow1}\n                     {aShow2}\n                                           \n                    </div>\n              </MuiDialogContent>\n            </Dialog>\n            <Dialog\n              open={howToOpen}\n              onClose={() => setHowToOpen(false)}\n              PaperProps={{\n                style: { backgroundColor: '#222933', borderRadius: 6 },\n              }}\n            >\n              <MuiDialogTitle\n                disableTypography\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between',\n                }}\n              >\n                <Link\n                  component=\"button\"\n                  variant=\"h6\"\n                  color=\"textSecondary\"\n                  onClick={() => {\n                    setHowToOpen(true);\n                  }}\n                >\n                  How to win\n                </Link>\n                <IconButton\n                  aria-label=\"close\"\n                  className={dialogStyles.closeButton}\n                  onClick={() => setHowToOpen(false)}\n                >\n                  <CloseIcon />\n                </IconButton>\n              </MuiDialogTitle>\n              <MuiDialogContent>\n                <Typography variant=\"h6\">\n                  Phase 1 - The Game:\n                </Typography>\n                <Typography gutterBottom color=\"textSecondary\">\n                  Every time someone new bids the price increases and the timer resets. \n                  Dev takes 1% of every bid, fuckboi takes 1% for putting up $,\n                  which doesn't get to see treasurypot.\n                  That new highest bidder becomes the Authority.\n                  Anyone at any phase can check the code on dunncreativess/fair3d,\n                  or run the show command on the cli.\n                  Metaplex team can assist you.\n                \n                </Typography>\n                <Typography variant=\"h6\">Phase 2 - Grace period:</Typography>\n                <Typography gutterBottom color=\"textSecondary\">\n                  You can optionally pay the median bid in order to qualify for a runner up ticket.\n                </Typography>\n                \n                    <Typography variant=\"h6\">Phase 3 - The Lottery:</Typography>\n                    <Typography gutterBottom color=\"textSecondary\">\n                      If you get a ticket, the Authority must conduct a lottery. \n                      The Metaplex team can assist the Authority.\n                      There are 10% of the total unique addresses bidding as winning tickets, +1 for good luck :)\n\n\n                    </Typography>\n                    <Typography variant=\"h6\">\n                      Phase 4 - The Candy Machine:\n                    </Typography>\n                    <Typography gutterBottom color=\"textSecondary\">\n                      Winners of lottery share 10% treasurypot when you punch your ticket.\n                      You also get an NFT.\n                      The Authority can punch everyones tickets for them. When withdrawing, the Authority gets what's left of the treasurypot - 90%.\n                    </Typography>\n\n                    <Typography variant=\"h6\">\n                      Wat?\n                    </Typography>\n                    <Typography gutterBottom color=\"textSecondary\">\n                      If 500 bidders means 51 runner up tickets. The final top bidder wins 90% of the treasurypot. Anyone who bid over the median or who opts into paying the median bid gets a chance at one of those 51 winning runner up tickets, and those 50 winning tickets share 10% pot.\n                    </Typography>\n\n                    <Typography variant=\"h6\">\n                      Tips? Strategy? Nash Tables?\n                    </Typography>\n                    <Typography gutterBottom color=\"textSecondary\">\n                    All in all it's not what @redacted_j had in mind. At all. <br />\nIt's probably better to bid more sooner. More than once. If your goal is 1st prize (which it probably should be). You can now update your existing bids... By outpricing everyone else taking it seriously, you'd ensure the thing concludes before many other ppl out there know about it. That said, doing it from more than 1 address would increase your chances at getting either a winning ticket (which would get you a shiny Nft you'll be able to exchange for a new winning bid instead of sol in the next game) or a losing ticket (which you'll be able to exchange for a bid just over the median in the next game)\nYou need to outgreed the consensus greed before the pool contributing to consensus includes greedier parties.\n<br /> Bidding more earlier from more addresses:\n\n<br /> 1. Ensures you'll probably priceout everyone easier than letting the 24hr timer nearly conclude over and over, as there will absolutely be more parties interested in pricing out everyone else as time elapses. \n<br /> 2. If your bids from any address are over the median by conclusion 2nd phase, they can punch to receive a ticket.  This ticket gives you a chance at sharing the 2nd place prize pool. \n<br /> 3. Any ticket can be used in the next game instead of sol to enter a bid at median. These can then be manually increased incrementally to ensure another ticket, and chance at 2nd place prize, or maximally to become new highest bidder on that 2nd game - for a fraction of the cost in either case. \n<br /> 4. If your ticket wine that games draw, when punching you'll get an NFT from the candy machine. In the following game, winning nfts can be exchanged for a new top bid instead of paying sol. \n<br /> 5. Because the following game will absolutely have more interest than the previous games, the won nfts will always have more value than what it probably cost to acquire them. Losing tickets may have some value more or less... This depends entirely on when these things are redeemed.\n<br /> 6. Moreover either of these things can be traded on secondary.\n<br />\n<br /> In short: bidding more from more addresses as early as is feasible almost definitely ensures free bids, as well as significantly increasing chances at either pot.\n\n<br /> <br /> Not financial advice. Risk only what you can afford to lose. \n<br /> <br /> If you're among the subset of people that would rather see the timer almost expire then bid again - that's actually ok, too. The system needs you to thrive.\n\n</Typography>\n                    \n              </MuiDialogContent>\n            </Dialog>\n\n            {/* {wallet.connected && (\n              <p>\n                Address: {shortenAddress(wallet.publicKey?.toBase58() || '')}\n              </p>\n            )}\n\n            {wallet.connected && (\n              <p>Balance: {(balance || 0).toLocaleString()} SOL</p>\n            )} */}\n          </Grid>\n        </Paper>\n      </Container>\n\n      {fairLaunch && (\n        <Container\n          maxWidth=\"sm\"\n          style={{ position: 'relative', marginTop: 10 }}\n        >\n          <div style={{ marginLeft:50 }}>\n            <Grid container direction=\"row\" wrap=\"nowrap\">\n              <Grid container md={4} direction=\"column\">\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Bids\n                </Typography>\n                <Typography\n                  color=\"textPrimary\"\n                  style={{ fontWeight: 'bold' }}\n                >\n                  {fairLaunch?.state.numberTicketsSold.toNumber() - fairLaunch?.state.numberTicketsDropped.toNumber()|| 0}\n                </Typography>\n              </Grid>\n              \n              <Grid container md={4} direction=\"column\">\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  1st Prize\n                </Typography>\n                <Typography\n                  variant=\"h6\"\n                  color=\"textPrimary\"\n                  style={{ fontWeight: 'bold' }}\n                >\n                  ◎{' '}\n                  {formatNumber.format(\n                    (fairLaunch?.treasury * 0.9 || 0) / LAMPORTS_PER_SOL,\n                  )}\n                </Typography>\n              </Grid>\n              <Grid container md={4} direction=\"column\">\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Top Bid\n                </Typography>\n                <Typography\n                  color=\"textPrimary\"\n                  style={{ fontWeight: 'bold' }}\n                >\n                  ◎{' '}\n                  {formatNumber.format(\n                    (fairLaunch.state.currentHighest || 0) / LAMPORTS_PER_SOL,\n                  )}\n                </Typography>\n              </Grid>\n              <Grid container md={4} direction=\"column\">\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  2nd Prizes\n                </Typography>\n                <Typography\n                                  variant=\"h6\"\n\n                  color=\"textPrimary\"\n                  style={{ fontWeight: 'bold' }}\n                >\n                  ◎{' '}\n                  {formatNumber.format(\n                    (fairLaunch?.treasury * 0.1 || 0) / LAMPORTS_PER_SOL / numtickets,\n                  )}\n                </Typography>\n              </Grid>\n              <Grid container md={4} direction=\"column\">\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                2nd Bids\n                </Typography>\n                <Typography\n                  color=\"textPrimary\"\n                  style={{ fontWeight: 'bold' }}\n                >\n                  &gt;◎ {formatNumber.format(median)}\n                </Typography>\n              </Grid>\n              <Grid container md={4} direction=\"column\">\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  # 2nd\n                </Typography>\n                <Typography\n                  color=\"textPrimary\"\n                  style={{ fontWeight: 'bold' }}\n                >\n                  \n                   { (numtickets)\n                  }\n                </Typography>\n              </Grid>\n            </Grid>\n          </div>\n        </Container>\n      )}\n      <Snackbar\n        open={alertState.open}\n        autoHideDuration={6000}\n        onClose={() => setAlertState({ ...alertState, open: false })}\n      >\n        <Alert\n          onClose={() => setAlertState({ ...alertState, open: false })}\n          severity={alertState.severity}\n        >\n          {alertState.message}\n        </Alert>\n      </Snackbar>\n        <br /><Typography><TwitterTimelineEmbed sourceType=\"profile\" screenName=\"fair3d_me\" options={{textSize: 1, height: 400}} />\n</Typography>\n    </Container>\n\n    </>\n  );\n};\n\ninterface AlertState {\n  open: boolean;\n  message: string;\n  severity: 'success' | 'info' | 'warning' | 'error' | undefined;\n}\n\nexport default Home;","import { Paper } from '@material-ui/core';\nimport Countdown from 'react-countdown';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport { useState } from 'react';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      padding: theme.spacing(0),\n      '& > *': {\n        margin: theme.spacing(0.5),\n        marginRight: 0,\n        width: theme.spacing(6),\n        height: theme.spacing(6),\n        display: 'flex',\n        flexDirection: 'column',\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        background: '#384457',\n        color: 'white',\n        borderRadius: 5,\n        fontSize: 10,\n      },\n    },\n    done: {\n      display: 'flex',\n      margin: theme.spacing(1),\n      marginRight: 0,\n      padding: theme.spacing(1),\n      flexDirection: 'column',\n      alignContent: 'center',\n      alignItems: 'center',\n      justifyContent: 'center',\n      background: '#384457',\n      color: 'white',\n      borderRadius: 5,\n      fontWeight: 'bold',\n      fontSize: 18,\n    },\n    item: {\n      fontWeight: 'bold',\n      fontSize: 18,\n    }\n  }),\n);\n\n\ninterface PhaseCountdownProps {\n  date: Date | undefined;\n  style?: React.CSSProperties;\n  status?: string;\n  onComplete?: () => void;\n  start?: Date;\n  end?: Date;\n}\n\ninterface CountdownRender {\n  days: number;\n  hours: number;\n  minutes: number;\n  seconds: number;\n  completed: boolean;\n}\n\nexport const PhaseCountdown: React.FC<PhaseCountdownProps> = ({\n  date,\n  status,\n  style,\n  start,\n  end,\n  onComplete,\n}) => {\n  const classes = useStyles();\n\n  const [isFixed, setIsFixed] = useState(start && end && date ? start.getTime() - Date.now() < 0 : false);\n\n  const renderCountdown = ({ days, hours, minutes, seconds, completed }: CountdownRender) => {\n    hours += days * 24\n    if (completed) {\n      return status ? <span className={classes.done}  >{status}</span> : null;\n    } else {\n      return (\n        <div className={classes.root} style={style} >\n          {isFixed && <Paper elevation={0}>\n            <span className={classes.item}>\n              +\n            </span>\n          </Paper>}\n          <Paper elevation={0}>\n            <span className={classes.item}>\n              {hours < 10 ? `0${hours}` : hours}\n            </span>\n            <span>hrs</span>\n          </Paper>\n          <Paper elevation={0}>\n            <span className={classes.item}>\n              {minutes < 10 ? `0${minutes}` : minutes}\n            </span>\n            <span>mins</span>\n          </Paper>\n          <Paper elevation={0}>\n            <span className={classes.item}>\n              {seconds < 10 ? `0${seconds}` : seconds}\n            </span>\n            <span>secs</span>\n          </Paper>\n        </div>\n      )\n    }\n  }\n\n  if (date && start && end) {\n    if (isFixed) {\n      <Countdown\n        date={start}\n        now={() => end.getTime()}\n        onComplete={() => setIsFixed(false)}\n        renderer={renderCountdown}\n      />\n    }\n  }\n\n  if (date) {\n    return (\n      <Countdown\n        date={date}\n        onComplete={onComplete}\n        renderer={renderCountdown}\n      />\n    )\n  } else {\n    return null\n  }\n}\n","import React, { useContext, useEffect, useMemo, useRef } from 'react';\nimport confetti from 'canvas-confetti';\n\nexport interface ConfettiContextState {\n  dropConfetti: () => void;\n}\n\nconst ConfettiContext = React.createContext<ConfettiContextState | null>(null);\n\nexport const ConfettiProvider = ({ children = null as any }) => {\n  const canvasRef = useRef<HTMLCanvasElement>();\n  const confettiRef = useRef<confetti.CreateTypes>();\n\n  const dropConfetti = useMemo(\n    () => () => {\n      if (confettiRef.current && canvasRef.current) {\n        canvasRef.current.style.visibility = 'visible';\n        confettiRef\n          .current({\n            particleCount: 400,\n            spread: 160,\n            origin: { y: 0.3 },\n          })\n          ?.finally(() => {\n            if (canvasRef.current) {\n              canvasRef.current.style.visibility = 'hidden';\n            }\n          });\n      }\n    },\n    [],\n  );\n\n  useEffect(() => {\n    if (canvasRef.current && !confettiRef.current) {\n      canvasRef.current.style.visibility = 'hidden';\n      confettiRef.current = confetti.create(canvasRef.current, {\n        resize: true,\n        useWorker: true,\n      });\n    }\n  }, []);\n\n  const canvasStyle: React.CSSProperties = {\n    width: '100vw',\n    height: '100vh',\n    position: 'absolute',\n    zIndex: 1,\n    top: 0,\n    left: 0,\n  };\n\n  return (\n    <ConfettiContext.Provider value={{ dropConfetti }}>\n      <canvas ref={canvasRef as any} style={canvasStyle} />\n      {children}\n    </ConfettiContext.Provider>\n  );\n};\n\nexport const Confetti = () => {\n  const { dropConfetti } = useConfetti();\n\n  useEffect(() => {\n    dropConfetti();\n  }, [dropConfetti]);\n\n  return <></>;\n};\n\nexport const useConfetti = () => {\n  const context = useContext(ConfettiContext);\n  return context as ConfettiContextState;\n};\n","import './App.css';\nimport { useMemo } from 'react';\n\nimport Home from './Home';\n\nimport * as anchor from '@project-serum/anchor';\nimport { clusterApiUrl } from '@solana/web3.js';\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\nimport {\n  getPhantomWallet,\n  getSolflareWallet,\n  getSolletWallet,\n} from '@solana/wallet-adapter-wallets';\n\nimport {\n  ConnectionProvider,\n  WalletProvider,\n} from '@solana/wallet-adapter-react';\n\nimport { WalletDialogProvider } from '@solana/wallet-adapter-material-ui';\nimport { ThemeProvider, createTheme } from '@material-ui/core';\nimport { ConfettiProvider } from './confetti';\n\nconst theme = createTheme({\n  palette: {\n    type: 'dark',\n  },\n});\n\nconst candyMachineId = process.env.REACT_APP_CANDY_MACHINE_ID\n  ? new anchor.web3.PublicKey(process.env.REACT_APP_CANDY_MACHINE_ID)\n  : undefined;\n\nconst fairLaunchId = new anchor.web3.PublicKey(\n  process.env.REACT_APP_FAIR_LAUNCH_ID!,\n);\n\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\n\nconst rpcHost = clusterApiUrl(network)//process.env.REACT_APP_SOLANA_RPC_HOST!;\nconst connection = new anchor.web3.Connection(rpcHost);\n\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE!, 10);\n\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\n\nconst App = () => {\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\n\n  const wallets = useMemo(\n    () => [getPhantomWallet(), getSolflareWallet(), getSolletWallet()],\n    [],\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ConnectionProvider endpoint={endpoint}>\n        <WalletProvider wallets={wallets} autoConnect>\n          <WalletDialogProvider>\n            <ConfettiProvider>\n              <Home\n                candyMachineId={candyMachineId}\n                fairLaunchId={fairLaunchId}\n                connection={connection}\n                startDate={startDateSeed}\n                txTimeout={txTimeout}\n              />\n            </ConfettiProvider>\n          </WalletDialogProvider>\n        </WalletProvider>\n      </ConnectionProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}