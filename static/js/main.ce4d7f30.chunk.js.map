{"version":3,"sources":["fair-launch.ts","candy-machine.ts","connection.tsx","utils.ts","Home.tsx","countdown.tsx","confetti.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LotteryState","FAIR_LAUNCH_PROGRAM","anchor","PublicKey","fairLaunchId","process","fairLaunchId2","fairLaunchId3","fairLaunchId4","getFairLaunchState","anchorWallet","connection","a","provider","preflightCommitment","fetchIdl","idl","program","account","fairLaunch","fetch","state","getFairLaunchTicket","tokenMint","publicKey","fairLaunchTicket","bump","fairLaunchData","console","log","getBalance","treasury","lotteryData","Uint8Array","getFairLaunchLotteryBitmap","fairLaunchLotteryBitmap","getAccountInfo","fairLaunchLotteryBitmapObj","data","id","ticket","pubkey","lottery","punchTicket","getAtaForMint","buyerTokenAccount","amount","gt","currentMedian","toNumber","getSetupForTicketing","remainingAccounts","instructions","signers","rpc","adjustTicket","accounts","dev","buyer","systemProgram","SystemProgram","programId","clock","SYSVAR_CLOCK_PUBKEY","__private","logAccounts","length","undefined","isSigner","isWritable","accountExists","createAssociatedTokenAccountInstruction","payer","tokenProgram","TOKEN_PROGRAM_ID","findProgramAddress","Buffer","from","toBuffer","anchorProgram","ticketKey","amountLamports","treasuryMint","Math","ceil","LAMPORTS_PER_SOL","priceRangeStart","transferAuthority","Keypair","generate","push","Token","createApproveInstruction","amountNumber","fees","getFairLaunchTicketSeqLookup","seq","fairLaunchTicketSeqLookup","seqBump","instruction","createTicketSeq","rent","SYSVAR_RENT_PUBKEY","receiveRefund","toBase58","purchaseTicket","authority","fairLaunchOne","fairLaunchTwo","fairLaunchThree","fairLaunchFour","CANDY_MACHINE_PROGRAM","TOKEN_METADATA_PROGRAM_ID","awaitTransactionSignatureConfirmation","txid","timeout","queryStatus","done","status","slot","confirmations","err","subId","Promise","resolve","reject","setTimeout","getSignatureStatuses","signatureStatuses","value","sleep","_signatureSubscriptions","removeSignatureListener","associatedTokenAddress","walletAddress","splTokenMintAddress","keys","TransactionInstruction","SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","getCandyMachineState","candyMachineId","candyMachine","itemsAvailable","itemsRedeemed","itemsRemaining","isSoldOut","isActive","goLiveDate","Date","getTime","wallet","config","price","getMasterEdition","mint","getMetadata","mintOneToken","userTokenAccountAddress","userPayingAccountAddress","candyMachineAddress","MintLayout","span","getMinimumBalanceForRentExemption","fromPubkey","newAccountPubkey","space","lamports","createAccount","createInitMintInstruction","createMintToInstruction","metadataAddress","masterEdition","mintNft","metadata","mintAuthority","updateAuthority","tokenMetadataProgram","sendTransactionWithRetry","ms","SequenceType","commitment","includesFeePayer","block","beforeSend","WalletNotConnectedError","transaction","Transaction","forEach","add","getRecentBlockhash","recentBlockhash","blockhash","setSigners","map","s","partialSign","signTransaction","sendSignedTransaction","signedTransaction","getUnixTs","DEFAULT_TIMEOUT","rawTransaction","serialize","startTime","sendRawTransaction","skipPreflight","confirmation","Error","error","simulateResult","simulateTransaction","logs","i","line","startsWith","slice","JSON","stringify","_recentBlockhash","_disableBlockhashCaching","signData","serializeMessage","wireTransaction","_serialize","encodedTransaction","toString","args","encoding","_rpcRequest","res","message","result","onSignature","context","e","FAIR_LAUNCH_PROGRAM_ID","toDate","numberFormater","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","formatNumber","format","val","asNumber","toArrayLike","Phase","useStyles","makeStyles","theme","createStyles","root","display","padding","spacing","margin","marginRight","width","height","flexDirection","alignContent","alignItems","justifyContent","background","color","borderRadius","fontSize","fontWeight","item","PhaseCountdown","date","start","end","onComplete","classes","useState","now","isFixed","renderCountdown","days","hours","minutes","seconds","completed","className","Paper","elevation","renderer","ConnectButton","styled","WalletDialogButton","MintContainer","div","MintButton","Button","dialogStyles","closeButton","position","right","top","palette","grey","ValueSlider","Slider","border","marginTop","boxShadow","lineHeight","marginLeft","Header","props","phaseName","desc","Grid","container","xs","direction","Typography","variant","getPhase","curr","phaseOne","phaseOneStart","phaseOneEnd","phaseTwoEnd","candyMachineGoLive","Phase0","Phase1","Phase2","phaseThreeStarted","Phase4","Phase3","Unknown","Lottery","isWinner","fairLaunchBalance","myByte","floor","positionFromRight","pow","Home","setFairLaunchBalance","yourSOLBalance","setYourSOLBalance","isMinting","setIsMinting","contributed","setContributed","useWallet","useMemo","signAllTransactions","open","severity","alertState","setAlertState","setFairLaunch","setCandyMachine","howToOpen","setHowToOpen","refundExplainerOpen","setRefundExplainerOpen","antiRugPolicyOpen","setAnitRugPolicyOpen","onMint","connected","unpunched","onPunchTicket","mintTxId","txTimeout","msg","code","window","location","reload","indexOf","useEffect","balance","getTokenAccountBalance","uiAmount","cndy","min","max","priceRangeEnd","step","tickSize","median","marks","label","filter","_","onDeposit","anum","onRugRefund","onRefundTicket","phase","candyMachinePredatesFairLaunch","lt","notEnoughSOL","fee","Container","maxWidth","backgroundColor","current_highest","lotteryDuration","includes","withdrawn","paddingTop","Alert","marginBottom","onChange","ev","valueLabelDisplay","onClick","disabled","CircularProgress","punched","Link","component","align","Dialog","onClose","PaperProps","antiRugSetting","selfDestructDate","reserveBp","tokenRequirement","numberOfTokens","toLocaleDateString","toLocaleTimeString","textAlign","disableTypography","IconButton","gutterBottom","wrap","md","numberTicketsSold","Snackbar","autoHideDuration","ConfettiContext","React","createContext","ConfettiProvider","children","canvasRef","useRef","confettiRef","dropConfetti","current","visibility","particleCount","spread","origin","y","finally","confetti","create","resize","useWorker","Provider","ref","zIndex","left","createTheme","type","Connection","startDateSeed","parseInt","REACT_APP_CANDY_START_DATE","App","endpoint","clusterApiUrl","wallets","getPhantomWallet","getSolflareWallet","getSolletWallet","ThemeProvider","autoConnect","startDate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce4d7f30.chunk.js","sourcesContent":["\nimport * as anchor from '@project-serum/anchor';\n\nimport { TOKEN_PROGRAM_ID, Token } from '@solana/spl-token';\nimport { LAMPORTS_PER_SOL, TransactionInstruction, PublicKey } from '@solana/web3.js';\nimport {\n  createAssociatedTokenAccountInstruction,\n  getAtaForMint,\n  getFairLaunchTicketSeqLookup,\n} from './utils';\n\nexport const FAIR_LAUNCH_PROGRAM = new anchor.web3.PublicKey(\n  'GUes4PH9UcoMuhATVaT1FH5QAQja1uHep8YnPE1oxPSY',\n);\nexport const fairLaunchId = new anchor.web3.PublicKey(\n  process.env.REACT_APP_FAIR_LAUNCH_ID!,\n);\n\nexport const fairLaunchId2 = new anchor.web3.PublicKey(\n  process.env.REACT_APP_FAIR_LAUNCH_ID2!,\n);\nexport const fairLaunchId3 = new anchor.web3.PublicKey(\n  process.env.REACT_APP_FAIR_LAUNCH_ID3!,\n);\nexport const fairLaunchId4 = new anchor.web3.PublicKey(\n  process.env.REACT_APP_FAIR_LAUNCH_ID4!,\n);\nexport interface FairLaunchAccount {\n  id: anchor.web3.PublicKey;\n  program: anchor.Program;\n  state: FairLaunchState;\n\n  ticket: {\n    pubkey: anchor.web3.PublicKey;\n    bump: number;\n    data?: FairLaunchTicket;\n  };\n  lottery: {\n    pubkey: anchor.web3.PublicKey;\n    data?: Uint8Array;\n  };\n  treasury: number;\n}\n\nexport interface FairLaunchTicket {\n  fairLaunch: anchor.web3.PublicKey;\n  buyer: anchor.web3.PublicKey;\n  amount: anchor.BN;\n  state: {\n    punched?: {};\n    unpunched?: {};\n    withdrawn?: {};\n    no_sequence_struct: {};\n  };\n  bump: number;\n  seq: anchor.BN;\n}\n\nexport interface AntiRugSetting {\n  reserveBp: number;\n  tokenRequirement: anchor.BN;\n  selfDestructDate: anchor.BN;\n}\nexport interface FairLaunchState {\n  authority: anchor.web3.PublicKey;\n  bump: number;\ndev: anchor.web3.PublicKey,\n  currentMedian: anchor.BN;\n  currentEligibleHolders: anchor.BN;\n  data: {\n    antiRugSetting?: AntiRugSetting;\n    fee: anchor.BN;\n    numberOfTokens: anchor.BN;\n    phaseOneEnd: anchor.BN;\n    phaseOneStart: anchor.BN;\n    phaseTwoEnd: anchor.BN;\n    priceRangeEnd: anchor.BN;\n    priceRangeStart: anchor.BN;\n    lotteryDuration: anchor.BN;\n    tickSize: anchor.BN;\n    uuid: string;\n  };\n  numberTicketsDropped: anchor.BN;\n  numberTicketsPunched: anchor.BN;\n  numberTicketsSold: anchor.BN;\n  numberTicketsUnSeqed: anchor.BN;\n  numberTokensBurnedForRefunds: anchor.BN;\n  numberTokensPreminted: anchor.BN;\n  phaseThreeStarted: boolean;\n  tokenMint: anchor.web3.PublicKey;\n  tokenMintBump: number;\n  treasury: anchor.web3.PublicKey;\n  treasuryBump: number;\n  treasuryMint: anchor.web3.PublicKey; // only for SPL tokens\n  treasurySnapshot: null;\n}\n\nexport enum LotteryState {\n  Brewing = 'Brewing',\n  Finished = 'Finished',\n  PastDue = 'Past Due',\n}\n\nexport const getLotteryState = (\n  phaseThree: boolean | undefined,\n  lottery: Uint8Array | null,\n  lotteryDuration: anchor.BN,\n  phaseTwoEnd: anchor.BN,\n): LotteryState => {\n  if (\n    !phaseThree &&\n    (!lottery || lottery.length === 0) &&\n    phaseTwoEnd.add(lotteryDuration).lt(new anchor.BN(Date.now() / 1000))\n  ) {\n    return LotteryState.PastDue;\n  } else if (phaseThree) {\n    return LotteryState.Finished;\n  } else {\n    return LotteryState.Brewing;\n  }\n};\n\nexport const getFairLaunchState = async (\n  anchorWallet: anchor.Wallet,\n  fairLaunchId: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection,\n): Promise<FairLaunchAccount> => {\n  const provider = new anchor.Provider(connection, anchorWallet, {\n    preflightCommitment: 'recent',\n  });\n\n  const idl = await anchor.Program.fetchIdl(FAIR_LAUNCH_PROGRAM, provider);\n\n  const program = new anchor.Program(idl, FAIR_LAUNCH_PROGRAM, provider);\n  const state: any = await program.account.fairLaunch.fetch(fairLaunchId);\n\n  const [fairLaunchTicket, bump] = await getFairLaunchTicket(\n    //@ts-ignore\n    state.tokenMint,\n    anchorWallet.publicKey,\n  );\n\n  let fairLaunchData: any;\n\n  try {\n    fairLaunchData = await program.account.fairLaunchTicket.fetch(\n      fairLaunchTicket,\n    );\n  } catch {\n    console.log('No ticket');\n  }\n\n  const treasury = await program.provider.connection.getBalance(state.treasury);\n\n  let lotteryData: Uint8Array = new Uint8Array([]);\n  let fairLaunchLotteryBitmap = (\n    await getFairLaunchLotteryBitmap(\n      //@ts-ignore\n      state.tokenMint,\n    )\n  )[0];\n\n  try {\n    const fairLaunchLotteryBitmapObj =\n      await program.provider.connection.getAccountInfo(fairLaunchLotteryBitmap);\n\n    lotteryData = new Uint8Array(fairLaunchLotteryBitmapObj?.data || []);\n  } catch (e) {\n    console.log('Could not find fair launch lottery.');\n    console.log(e);\n  }\n\n  return {\n    id: fairLaunchId,\n    state,\n    program,\n    ticket: {\n      pubkey: fairLaunchTicket,\n      bump,\n      data: fairLaunchData,\n    },\n    lottery: {\n      pubkey: fairLaunchLotteryBitmap,\n      data: lotteryData,\n    },\n    treasury,\n  };\n};\n\nexport const punchTicket = async (\n  anchorWallet: anchor.Wallet,\n  fairLaunch: FairLaunchAccount,\n) => {\n  const fairLaunchTicket = (\n    await getFairLaunchTicket(\n      //@ts-ignore\n      fairLaunch.state.tokenMint,\n      anchorWallet.publicKey,\n    )\n  )[0];\n\n  const ticket = fairLaunch.ticket.data;\n\n  const fairLaunchLotteryBitmap = ( //@ts-ignore\n    await getFairLaunchLotteryBitmap(fairLaunch.state.tokenMint)\n  )[0];\n\n  const buyerTokenAccount = (\n    await getAtaForMint(\n      //@ts-ignore\n      fairLaunch.state.tokenMint,\n      anchorWallet.publicKey,\n    )\n  )[0];\n\n  if (ticket?.amount.gt(fairLaunch.state.currentMedian)) {\n    console.log(\n      'Adjusting down...',\n      ticket?.amount.toNumber(),\n      fairLaunch.state.currentMedian.toNumber(),\n    );\n    const { remainingAccounts, instructions, signers } =\n      await getSetupForTicketing(\n        fairLaunch.program,\n        fairLaunch.state.currentMedian.toNumber(),\n        anchorWallet,\n        fairLaunch,\n        fairLaunchTicket,\n      );\n    await fairLaunch.program.rpc.adjustTicket(fairLaunch.state.currentMedian, {\n      accounts: {\n        fairLaunchTicket,\n        fairLaunch: fairLaunch.id,\n        fairLaunchLotteryBitmap,\n        dev: fairLaunch.state.dev,\n        buyer: anchorWallet.publicKey,\n        //@ts-ignore\n        treasury: fairLaunch.state.treasury,\n        systemProgram: anchor.web3.SystemProgram.programId,\n        clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n      },\n      __private: { logAccounts: true },\n      instructions: instructions.length > 0 ? instructions : undefined,\n      remainingAccounts: [\n        {\n          pubkey: anchorWallet.publicKey,\n          isSigner: true,\n          isWritable: true,\n        },\n        ...remainingAccounts,\n      ],\n      signers,\n    });\n  }\n\n  const accountExists =\n    await fairLaunch.program.provider.connection.getAccountInfo(\n      buyerTokenAccount,\n    );\n\n  const instructions = !accountExists\n    ? [\n        createAssociatedTokenAccountInstruction(\n          buyerTokenAccount,\n          anchorWallet.publicKey,\n          anchorWallet.publicKey,\n          //@ts-ignore\n          fairLaunch.state.tokenMint,\n        ),\n      ]\n    : [];\n\n  await fairLaunch.program.rpc.punchTicket({\n    accounts: {\n      fairLaunchTicket,\n      fairLaunch: fairLaunch.id,\n      fairLaunchLotteryBitmap,\n      payer: anchorWallet.publicKey,\n      buyerTokenAccount,\n      //@ts-ignore\n      tokenMint: fairLaunch.state.tokenMint,\n      tokenProgram: TOKEN_PROGRAM_ID,\n    },\n    instructions: instructions.length > 0 ? instructions : undefined,\n  });\n};\n\nexport const getFairLaunchTicket = async (\n  tokenMint: anchor.web3.PublicKey,\n  buyer: anchor.web3.PublicKey,\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [Buffer.from('fair_launch'), tokenMint.toBuffer(), buyer.toBuffer()],\n    FAIR_LAUNCH_PROGRAM,\n  );\n};\n\nexport const getFairLaunchLotteryBitmap = async (\n  tokenMint: anchor.web3.PublicKey,\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [Buffer.from('fair_launch'), tokenMint.toBuffer(), Buffer.from('lottery')],\n    FAIR_LAUNCH_PROGRAM,\n  );\n};\n\nconst getSetupForTicketing = async (\n  anchorProgram: anchor.Program,\n  amount: number,\n  anchorWallet: anchor.Wallet,\n  fairLaunch: FairLaunchAccount | undefined,\n  ticketKey: anchor.web3.PublicKey,\n): Promise<{\n  remainingAccounts: {\n    pubkey: anchor.web3.PublicKey | null;\n    isWritable: boolean;\n    isSigner: boolean;\n  }[];\n  instructions: TransactionInstruction[];\n  signers: anchor.web3.Keypair[];\n  amountLamports: number;\n}> => {\n  if (!fairLaunch) {\n    return {\n      remainingAccounts: [],\n      instructions: [],\n      signers: [],\n      amountLamports: 0,\n    };\n  }\n  const ticket = fairLaunch.ticket;\n\n  const remainingAccounts = [];\n  const instructions = [];\n  const signers = [];\n\n  let amountLamports = 0;\n  //@ts-ignore\n  if (!fairLaunch.state.treasuryMint) {\n    if (!ticket && amount === 0) {\n      amountLamports = fairLaunch.state.data.priceRangeStart.toNumber();\n    } else {\n      amountLamports = Math.ceil(amount * LAMPORTS_PER_SOL);\n    }\n  } else {\n    const transferAuthority = anchor.web3.Keypair.generate();\n    signers.push(transferAuthority);\n    // NOTE this token impl will not work till you get decimal mantissa and multiply...\n    /// ex from cli wont work since you dont have a Signer, but an anchor.Wallet\n    /*\n    const token = new Token(\n        anchorProgram.provider.connection,\n        //@ts-ignore\n        fairLaunchObj.treasuryMint,\n        TOKEN_PROGRAM_ID,\n        walletKeyPair,\n      );\n      const mintInfo = await token.getMintInfo();\n      amountNumber = Math.ceil(amountNumber * 10 ** mintInfo.decimals);\n    */\n    instructions.push(\n      Token.createApproveInstruction(\n        TOKEN_PROGRAM_ID,\n        //@ts-ignore\n        fairLaunch.state.treasuryMint,\n        transferAuthority.publicKey,\n        anchorWallet.publicKey,\n        [],\n        //@ts-ignore\n\n        // TODO: get mint decimals\n        amountNumber + fairLaunch.state.data.fees.toNumber(),\n      ),\n    );\n\n    remainingAccounts.push({\n      //@ts-ignore\n      pubkey: fairLaunch.state.treasuryMint,\n      isWritable: true,\n      isSigner: false,\n    });\n    remainingAccounts.push({\n      pubkey: (\n        await getAtaForMint(\n          //@ts-ignore\n          fairLaunch.state.treasuryMint,\n          anchorWallet.publicKey,\n        )\n      )[0],\n      isWritable: true,\n      isSigner: false,\n    });\n    remainingAccounts.push({\n      pubkey: transferAuthority.publicKey,\n      isWritable: false,\n      isSigner: true,\n    });\n    remainingAccounts.push({\n      pubkey: TOKEN_PROGRAM_ID,\n      isWritable: false,\n      isSigner: false,\n    });\n  }\n\n  if (ticket.data) {\n    const [fairLaunchTicketSeqLookup, seqBump] =\n      await getFairLaunchTicketSeqLookup(\n        fairLaunch.state.tokenMint,\n        ticket.data?.seq,\n      );\n\n    const seq = await anchorProgram.provider.connection.getAccountInfo(\n      fairLaunchTicketSeqLookup,\n    );\n    if (!seq) {\n      instructions.push(\n        await anchorProgram.instruction.createTicketSeq(seqBump, {\n          accounts: {\n            fairLaunchTicketSeqLookup,\n            fairLaunch: fairLaunch.id,\n            fairLaunchTicket: ticketKey,\n            payer: anchorWallet.publicKey,\n            systemProgram: anchor.web3.SystemProgram.programId,\n            rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n          },\n          signers: [],\n        }),\n      );\n    }\n  }\n\n  return {\n    remainingAccounts,\n    instructions,\n    signers,\n    amountLamports,\n  };\n};\n\nexport const receiveRefund = async (\n  anchorWallet: anchor.Wallet,\n  fairLaunch: FairLaunchAccount | undefined,\n) => {\n  if (!fairLaunch) {\n    return;\n  }\n\n  const buyerTokenAccount = (\n    await getAtaForMint(fairLaunch.state.tokenMint, anchorWallet.publicKey)\n  )[0];\n\n  const transferAuthority = anchor.web3.Keypair.generate();\n\n  const signers = [transferAuthority];\n  const instructions = [\n    Token.createApproveInstruction(\n      TOKEN_PROGRAM_ID,\n      buyerTokenAccount,\n      transferAuthority.publicKey,\n      anchorWallet.publicKey,\n      [],\n      1,\n    ),\n  ];\n\n  const remainingAccounts = [];\n\n  if (fairLaunch.state.treasuryMint) {\n    remainingAccounts.push({\n      pubkey: fairLaunch.state.treasuryMint,\n      isWritable: true,\n      isSigner: false,\n    });\n    remainingAccounts.push({\n      pubkey: (\n        await getAtaForMint(\n          fairLaunch.state.treasuryMint,\n          anchorWallet.publicKey,\n        )\n      )[0],\n      isWritable: true,\n      isSigner: false,\n    });\n  }\n\n  console.log(\n    'tfr',\n    fairLaunch.state.treasury.toBase58(),\n    anchorWallet.publicKey.toBase58(),\n    buyerTokenAccount.toBase58(),\n  );\n  await fairLaunch.program.rpc.receiveRefund({\n    accounts: {\n      fairLaunch: fairLaunch.id,\n      treasury: fairLaunch.state.treasury,\n      buyer: anchorWallet.publicKey,\n      buyerTokenAccount,\n      transferAuthority: transferAuthority.publicKey,\n      tokenMint: fairLaunch.state.tokenMint,\n      tokenProgram: TOKEN_PROGRAM_ID,\n      systemProgram: anchor.web3.SystemProgram.programId,\n      clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n    },\n\n    __private: { logAccounts: true },\n    remainingAccounts,\n    instructions,\n    signers,\n  });\n};\nexport const purchaseTicket = async (\n  amount: number,\n  anchorWallet: anchor.Wallet,\n  fairLaunch: FairLaunchAccount | undefined,\n) => {\n  if (!fairLaunch) {\n    return;\n  }\n\n  const ticket = fairLaunch.ticket.data;\n\n  const [fairLaunchTicket, bump] = await getFairLaunchTicket(\n    //@ts-ignore\n    fairLaunch.state.tokenMint,\n    anchorWallet.publicKey,\n  );\n\n  const { remainingAccounts, instructions, signers, amountLamports } =\n    await getSetupForTicketing(\n      fairLaunch.program,\n      amount,\n      anchorWallet,\n      fairLaunch,\n      fairLaunchTicket,\n    );\n\n  if (ticket) {\n    const fairLaunchLotteryBitmap = //@ts-ignore\n    (await getFairLaunchLotteryBitmap(fairLaunch.state.tokenMint))[0];\n    console.log(\n      'Anchor wallet',\n      anchorWallet.publicKey.toBase58(),\n      amountLamports,\n    );\n    let buyer = anchorWallet.publicKey\n    if (amountLamports == 0){\n      buyer =fairLaunch.state.authority;\n    }\n    await fairLaunch.program.rpc.adjustTicket(new anchor.BN(amountLamports), {\n      accounts: {\n        fairLaunchTicket,\n        fairLaunch: fairLaunch.id,\n        dev: fairLaunch.state.dev,\n        buyer:buyer,\n        fairLaunchLotteryBitmap,\n        //@ts-ignore\n        treasury: fairLaunch.state.treasury,\n        systemProgram: anchor.web3.SystemProgram.programId,\n        clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n      },\n      __private: { logAccounts: true },\n      remainingAccounts: [\n        {\n          pubkey: fairLaunch.state.treasury,\n          isSigner: false,\n          isWritable: true,\n        },\n        ...remainingAccounts,\n      ],\n      signers,\n      instructions: instructions.length > 0 ? instructions : undefined,\n    });\n\n    return;\n  }\n\n\n  try {\n    \n      let buyer = anchorWallet.publicKey\n    if (amountLamports == 0){\n      buyer =fairLaunch.state.authority;\n    }\n    console.log('Amount', amountLamports);\n    await fairLaunch.program.rpc.purchaseTicket(\n      bump,\n      new anchor.BN(amountLamports),\n      {\n        accounts: {\n          fairLaunchTicket,\n          fairLaunch: fairLaunch.id,\n          fairLaunchOne: fairLaunchId,\n          fairLaunchTwo: fairLaunchId2,\n          fairLaunchThree: fairLaunchId3,\n          fairLaunchFour: fairLaunchId4,\n          //@ts-ignore\n\n      authority: fairLaunch.state.authority,\n      dev:fairLaunch.state.dev,\n      tokenMint: fairLaunch.state.tokenMint,\n          treasury: fairLaunch.state.treasury,\n          buyer: buyer,\n          payer: anchorWallet.publicKey,\n          systemProgram: anchor.web3.SystemProgram.programId,\n          rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n          clock: anchor.web3.SYSVAR_CLOCK_PUBKEY\n        \n        },\n        //__private: { logAccounts: true },\n        remainingAccounts: [\n        {\n          pubkey: anchorWallet.publicKey,\n          isSigner: true,\n          isWritable: true,\n        },{\n          pubkey: fairLaunch.state.dev,\n          isSigner: false,\n          isWritable: true,\n        },{\n          pubkey: fairLaunch.state.authority,\n          isSigner: false,\n          isWritable: true,\n        },\n        ...remainingAccounts,\n      ],\n        signers,\n        instructions: instructions.length > 0 ? instructions : undefined,\n      },\n    );\n  } catch (e) {\n    console.log(e);\n    throw e;\n  }\n};\n\nexport const withdrawFunds = async (\n  anchorWallet: anchor.Wallet,\n  fairLaunch: FairLaunchAccount | undefined,\n) => {\n  if (!fairLaunch) {\n    return;\n  }\n\n  // TODO: create sequence ticket\n\n  const remainingAccounts = [];\n\n  //@ts-ignore\n  if (fairLaunch.state.treasuryMint) {\n    remainingAccounts.push({\n      //@ts-ignore\n      pubkey: fairLaunch.state.treasuryMint,\n      isWritable: true,\n      isSigner: false,\n    });\n    remainingAccounts.push({\n      pubkey: (\n        await getAtaForMint(\n          //@ts-ignore\n          fairLaunch.state.treasuryMint,\n          anchorWallet.publicKey,\n        )\n      )[0],\n      isWritable: true,\n      isSigner: false,\n    });\n    remainingAccounts.push({\n      pubkey: TOKEN_PROGRAM_ID,\n      isWritable: false,\n      isSigner: false,\n    });\n  }\n\n  await fairLaunch.program.rpc.withdrawFunds({\n    accounts: {\n      fairLaunch: fairLaunch.id,\n      // @ts-ignore\n      treasury: fairLaunch.state.treasury,\n      authority: anchorWallet.publicKey,\n      // @ts-ignore\n      tokenMint: fairLaunch.state.tokenMint,\n      systemProgram: anchor.web3.SystemProgram.programId,\n    },\n    remainingAccounts,\n  });\n};","import * as anchor from '@project-serum/anchor';\n\nimport { MintLayout, TOKEN_PROGRAM_ID, Token } from '@solana/spl-token';\nimport { SystemProgram } from '@solana/web3.js';\nimport { sendTransactionWithRetry } from './connection';\n\nimport {\n  getAtaForMint,\n  SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n} from './utils';\n\nexport const CANDY_MACHINE_PROGRAM = new anchor.web3.PublicKey(\n  'cndyAnrLdpjq1Ssp1z8xxDsB8dxe7u4HL5Nxi2K5WXZ',\n);\n\nconst TOKEN_METADATA_PROGRAM_ID = new anchor.web3.PublicKey(\n  'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',\n);\n\ninterface CandyMachineState {\n  itemsAvailable: number;\n  itemsRedeemed: number;\n  itemsRemaining: number;\n  config: anchor.web3.PublicKey;\n  treasury: anchor.web3.PublicKey;\n  tokenMint: anchor.web3.PublicKey;\n  isSoldOut: boolean;\n  isActive: boolean;\n  goLiveDate: anchor.BN;\n  price: anchor.BN;\n}\n\nexport interface CandyMachineAccount {\n  id: anchor.web3.PublicKey;\n  program: anchor.Program;\n  state: CandyMachineState;\n}\n\nexport const awaitTransactionSignatureConfirmation = async (\n  txid: anchor.web3.TransactionSignature,\n  timeout: number,\n  connection: anchor.web3.Connection,\n  commitment: anchor.web3.Commitment = 'recent',\n  queryStatus = false,\n): Promise<anchor.web3.SignatureStatus | null | void> => {\n  let done = false;\n  let status: anchor.web3.SignatureStatus | null | void = {\n    slot: 0,\n    confirmations: 0,\n    err: null,\n  };\n  let subId = 0;\n  status = await new Promise(async (resolve, reject) => {\n    setTimeout(() => {\n      if (done) {\n        return;\n      }\n      done = true;\n      console.log('Rejecting for timeout...');\n      reject({ timeout: true });\n    }, timeout);\n    while (!done && queryStatus) {\n      // eslint-disable-next-line no-loop-func\n      (async () => {\n        try {\n          const signatureStatuses = await connection.getSignatureStatuses([\n            txid,\n          ]);\n          status = signatureStatuses && signatureStatuses.value[0];\n          if (!done) {\n            if (!status) {\n              console.log('REST null result for', txid, status);\n            } else if (status.err) {\n              console.log('REST error for', txid, status);\n              done = true;\n              reject(status.err);\n            } else if (!status.confirmations) {\n              console.log('REST no confirmations for', txid, status);\n            } else {\n              console.log('REST confirmation for', txid, status);\n              done = true;\n              resolve(status);\n            }\n          }\n        } catch (e) {\n          if (!done) {\n            console.log('REST connection error: txid', txid, e);\n          }\n        }\n      })();\n      await sleep(2000);\n    }\n  });\n\n  //@ts-ignore\n  if (connection._signatureSubscriptions[subId]) {\n    connection.removeSignatureListener(subId);\n  }\n  done = true;\n  console.log('Returning status', status);\n  return status;\n};\n\n/* export */ const createAssociatedTokenAccountInstruction = (\n  associatedTokenAddress: anchor.web3.PublicKey,\n  payer: anchor.web3.PublicKey,\n  walletAddress: anchor.web3.PublicKey,\n  splTokenMintAddress: anchor.web3.PublicKey,\n) => {\n  const keys = [\n    { pubkey: payer, isSigner: true, isWritable: true },\n    { pubkey: associatedTokenAddress, isSigner: false, isWritable: true },\n    { pubkey: walletAddress, isSigner: false, isWritable: false },\n    { pubkey: splTokenMintAddress, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SystemProgram.programId,\n      isSigner: false,\n      isWritable: false,\n    },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false,\n    },\n  ];\n  return new anchor.web3.TransactionInstruction({\n    keys,\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n    data: Buffer.from([]),\n  });\n};\n\nexport const getCandyMachineState = async (\n  anchorWallet: anchor.Wallet,\n  candyMachineId: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection,\n): Promise<CandyMachineAccount> => {\n  const provider = new anchor.Provider(connection, anchorWallet, {\n    preflightCommitment: 'recent',\n  });\n\n  const idl = await anchor.Program.fetchIdl(CANDY_MACHINE_PROGRAM, provider);\n\n  const program = new anchor.Program(idl, CANDY_MACHINE_PROGRAM, provider);\n\n  const state: any = await program.account.candyMachine.fetch(candyMachineId);\n  const itemsAvailable = state.data.itemsAvailable.toNumber();\n  const itemsRedeemed = state.itemsRedeemed.toNumber();\n  const itemsRemaining = itemsAvailable - itemsRedeemed;\n\n  return {\n    id: candyMachineId,\n    program,\n    state: {\n      itemsAvailable,\n      itemsRedeemed,\n      itemsRemaining,\n      isSoldOut: itemsRemaining === 0,\n      isActive: state.data.goLiveDate.toNumber() < new Date().getTime() / 1000,\n      goLiveDate: state.data.goLiveDate,\n      treasury: state.wallet,\n      tokenMint: state.tokenMint,\n      config: state.config,\n      price: state.data.price,\n    },\n  };\n};\n\nconst getMasterEdition = async (\n  mint: anchor.web3.PublicKey,\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from('metadata'),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n        Buffer.from('edition'),\n      ],\n      TOKEN_METADATA_PROGRAM_ID,\n    )\n  )[0];\n};\n\nconst getMetadata = async (\n  mint: anchor.web3.PublicKey,\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from('metadata'),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n      ],\n      TOKEN_METADATA_PROGRAM_ID,\n    )\n  )[0];\n};\n\nexport const mintOneToken = async (\n  candyMachine: CandyMachineAccount,\n  payer: anchor.web3.PublicKey,\n): Promise<string> => {\n  const mint = anchor.web3.Keypair.generate();\n\n  const userTokenAccountAddress = (\n    await getAtaForMint(mint.publicKey, payer)\n  )[0];\n\n  const userPayingAccountAddress = (\n    await getAtaForMint(candyMachine.state.tokenMint, payer)\n  )[0];\n\n  const candyMachineAddress = candyMachine.id;\n\n  const remainingAccounts = [];\n  const signers: anchor.web3.Keypair[] = [mint];\n  const instructions = [\n    anchor.web3.SystemProgram.createAccount({\n      fromPubkey: payer,\n      newAccountPubkey: mint.publicKey,\n      space: MintLayout.span,\n      lamports:\n        await candyMachine.program.provider.connection.getMinimumBalanceForRentExemption(\n          MintLayout.span,\n        ),\n      programId: TOKEN_PROGRAM_ID,\n    }),\n    Token.createInitMintInstruction(\n      TOKEN_PROGRAM_ID,\n      mint.publicKey,\n      0,\n      payer,\n      payer,\n    ),\n    createAssociatedTokenAccountInstruction(\n      userTokenAccountAddress,\n      payer,\n      payer,\n      mint.publicKey,\n    ),\n    Token.createMintToInstruction(\n      TOKEN_PROGRAM_ID,\n      mint.publicKey,\n      userTokenAccountAddress,\n      payer,\n      [],\n      1,\n    ),\n  ];\n\n  let tokenAccount;\n  if (candyMachine.state.tokenMint) {\n    const transferAuthority = anchor.web3.Keypair.generate();\n\n    signers.push(transferAuthority);\n    remainingAccounts.push({\n      pubkey: userPayingAccountAddress,\n      isWritable: true,\n      isSigner: false,\n    });\n    remainingAccounts.push({\n      pubkey: transferAuthority.publicKey,\n      isWritable: false,\n      isSigner: true,\n    });\n\n    instructions.push(\n      Token.createApproveInstruction(\n        TOKEN_PROGRAM_ID,\n        userPayingAccountAddress,\n        transferAuthority.publicKey,\n        payer,\n        [],\n        candyMachine.state.price.toNumber(),\n      ),\n    );\n  }\n  const metadataAddress = await getMetadata(mint.publicKey);\n  const masterEdition = await getMasterEdition(mint.publicKey);\n\n  instructions.push(\n    await candyMachine.program.instruction.mintNft({\n      accounts: {\n        config: candyMachine.state.config,\n        candyMachine: candyMachineAddress,\n        payer,\n        wallet: candyMachine.state.treasury,\n        mint: mint.publicKey,\n        metadata: metadataAddress,\n        masterEdition,\n        mintAuthority: payer,\n        updateAuthority: payer,\n        tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\n        tokenProgram: TOKEN_PROGRAM_ID,\n        systemProgram: SystemProgram.programId,\n        rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n        clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n      },\n      remainingAccounts:\n        remainingAccounts.length > 0 ? remainingAccounts : undefined,\n    }),\n  );\n\n  if (tokenAccount) {\n    instructions.push(\n      Token.createRevokeInstruction(\n        TOKEN_PROGRAM_ID,\n        userPayingAccountAddress,\n        payer,\n        [],\n      ),\n    );\n  }\n  try {\n    return (\n      await sendTransactionWithRetry(\n        candyMachine.program.provider.connection,\n        candyMachine.program.provider.wallet,\n        instructions,\n        signers,\n      )\n    ).txid;\n  } catch (e) {\n    console.log(e);\n  }\n  return 'j';\n};\n\nexport const shortenAddress = (address: string, chars = 4): string => {\n  return `${address.slice(0, chars)}...${address.slice(-chars)}`;\n};\n\nconst sleep = (ms: number): Promise<void> => {\n  return new Promise(resolve => setTimeout(resolve, ms));\n};\n","import {\n  Keypair,\n  Commitment,\n  Connection,\n  RpcResponseAndContext,\n  SignatureStatus,\n  SimulatedTransactionResponse,\n  Transaction,\n  TransactionInstruction,\n  TransactionSignature,\n  Blockhash,\n  FeeCalculator,\n} from '@solana/web3.js';\n\nimport {\n  WalletNotConnectedError,\n} from '@solana/wallet-adapter-base';\n\ninterface BlockhashAndFeeCalculator {\n  blockhash: Blockhash;\n  feeCalculator: FeeCalculator;\n}\n\nexport const getErrorForTransaction = async (\n  connection: Connection,\n  txid: string,\n) => {\n  // wait for all confirmation before geting transaction\n  await connection.confirmTransaction(txid, 'max');\n\n  const tx = await connection.getParsedConfirmedTransaction(txid);\n\n  const errors: string[] = [];\n  if (tx?.meta && tx.meta.logMessages) {\n    tx.meta.logMessages.forEach(log => {\n      const regex = /Error: (.*)/gm;\n      let m;\n      while ((m = regex.exec(log)) !== null) {\n        // This is necessary to avoid infinite loops with zero-width matches\n        if (m.index === regex.lastIndex) {\n          regex.lastIndex++;\n        }\n\n        if (m.length > 1) {\n          errors.push(m[1]);\n        }\n      }\n    });\n  }\n\n  return errors;\n};\n\nexport enum SequenceType {\n  Sequential,\n  Parallel,\n  StopOnFailure,\n}\n\nexport async function sendTransactionsWithManualRetry(\n  connection: Connection,\n  wallet: any,\n  instructions: TransactionInstruction[][],\n  signers: Keypair[][],\n) {\n  let stopPoint = 0;\n  let tries = 0;\n  let lastInstructionsLength = null;\n  let toRemoveSigners: Record<number, boolean> = {};\n  instructions = instructions.filter((instr, i) => {\n    if (instr.length > 0) {\n      return true;\n    } else {\n      toRemoveSigners[i] = true;\n      return false;\n    }\n  });\n  let filteredSigners = signers.filter((_, i) => !toRemoveSigners[i]);\n\n  while (stopPoint < instructions.length && tries < 3) {\n    instructions = instructions.slice(stopPoint, instructions.length);\n    filteredSigners = filteredSigners.slice(stopPoint, filteredSigners.length);\n\n    if (instructions.length === lastInstructionsLength) tries = tries + 1;\n    else tries = 0;\n\n    try {\n      if (instructions.length === 1) {\n        await sendTransactionWithRetry(\n          connection,\n          wallet,\n          instructions[0],\n          filteredSigners[0],\n          'single',\n        );\n        stopPoint = 1;\n      } else {\n        stopPoint = await sendTransactions(\n          connection,\n          wallet,\n          instructions,\n          filteredSigners,\n          SequenceType.StopOnFailure,\n          'single',\n        );\n      }\n    } catch (e) {\n      console.error(e);\n    }\n    console.log(\n      'Died on ',\n      stopPoint,\n      'retrying from instruction',\n      instructions[stopPoint],\n      'instructions length is',\n      instructions.length,\n    );\n    lastInstructionsLength = instructions.length;\n  }\n}\n\nexport const sendTransactions = async (\n  connection: Connection,\n  wallet: any,\n  instructionSet: TransactionInstruction[][],\n  signersSet: Keypair[][],\n  sequenceType: SequenceType = SequenceType.Parallel,\n  commitment: Commitment = 'singleGossip',\n  successCallback: (txid: string, ind: number) => void = (txid, ind) => {},\n  failCallback: (reason: string, ind: number) => boolean = (txid, ind) => false,\n  block?: BlockhashAndFeeCalculator,\n): Promise<number> => {\n  if (!wallet.publicKey) throw new WalletNotConnectedError();\n\n  const unsignedTxns: Transaction[] = [];\n\n  if (!block) {\n    block = await connection.getRecentBlockhash(commitment);\n  }\n\n  for (let i = 0; i < instructionSet.length; i++) {\n    const instructions = instructionSet[i];\n    const signers = signersSet[i];\n\n    if (instructions.length === 0) {\n      continue;\n    }\n\n    let transaction = new Transaction();\n    instructions.forEach(instruction => transaction.add(instruction));\n    transaction.recentBlockhash = block.blockhash;\n    transaction.setSigners(\n      // fee payed by the wallet owner\n      wallet.publicKey,\n      ...signers.map(s => s.publicKey),\n    );\n\n    if (signers.length > 0) {\n      transaction.partialSign(...signers);\n    }\n\n    unsignedTxns.push(transaction);\n  }\n\n  const signedTxns = await wallet.signAllTransactions(unsignedTxns);\n\n  const pendingTxns: Promise<{ txid: string; slot: number }>[] = [];\n\n  let breakEarlyObject = { breakEarly: false, i: 0 };\n  console.log(\n    'Signed txns length',\n    signedTxns.length,\n    'vs handed in length',\n    instructionSet.length,\n  );\n  for (let i = 0; i < signedTxns.length; i++) {\n    const signedTxnPromise = sendSignedTransaction({\n      connection,\n      signedTransaction: signedTxns[i],\n    });\n\n    signedTxnPromise\n      .then(({ txid, slot }) => {\n        successCallback(txid, i);\n      })\n      .catch(reason => {\n        // @ts-ignore\n        failCallback(signedTxns[i], i);\n        if (sequenceType === SequenceType.StopOnFailure) {\n          breakEarlyObject.breakEarly = true;\n          breakEarlyObject.i = i;\n        }\n      });\n\n    if (sequenceType !== SequenceType.Parallel) {\n      try {\n        await signedTxnPromise;\n      } catch (e) {\n        console.log('Caught failure', e);\n        if (breakEarlyObject.breakEarly) {\n          console.log('Died on ', breakEarlyObject.i);\n          return breakEarlyObject.i; // Return the txn we failed on by index\n        }\n      }\n    } else {\n      pendingTxns.push(signedTxnPromise);\n    }\n  }\n\n  if (sequenceType !== SequenceType.Parallel) {\n    await Promise.all(pendingTxns);\n  }\n\n  return signedTxns.length;\n};\n\nexport const sendTransaction = async (\n  connection: Connection,\n  wallet: any,\n  instructions: TransactionInstruction[],\n  signers: Keypair[],\n  awaitConfirmation = true,\n  commitment: Commitment = 'singleGossip',\n  includesFeePayer: boolean = false,\n  block?: BlockhashAndFeeCalculator,\n) => {\n  if (!wallet.publicKey) throw new WalletNotConnectedError();\n\n  let transaction = new Transaction();\n  instructions.forEach(instruction => transaction.add(instruction));\n  transaction.recentBlockhash = (\n    block || (await connection.getRecentBlockhash(commitment))\n  ).blockhash;\n\n  if (includesFeePayer) {\n    transaction.setSigners(...signers.map(s => s.publicKey));\n  } else {\n    transaction.setSigners(\n      // fee payed by the wallet owner\n      wallet.publicKey,\n      ...signers.map(s => s.publicKey),\n    );\n  }\n\n  if (signers.length > 0) {\n    transaction.partialSign(...signers);\n  }\n  if (!includesFeePayer) {\n    transaction = await wallet.signTransaction(transaction);\n  }\n\n  const rawTransaction = transaction.serialize();\n  let options = {\n    skipPreflight: true,\n    commitment,\n  };\n\n  const txid = await connection.sendRawTransaction(rawTransaction, options);\n  let slot = 0;\n\n  if (awaitConfirmation) {\n    const confirmation = await awaitTransactionSignatureConfirmation(\n      txid,\n      DEFAULT_TIMEOUT,\n      connection,\n      commitment,\n    );\n\n    if (!confirmation)\n      throw new Error('Timed out awaiting confirmation on transaction');\n    slot = confirmation?.slot || 0;\n\n    if (confirmation?.err) {\n      const errors = await getErrorForTransaction(connection, txid);\n\n      console.log(errors);\n      throw new Error(`Raw transaction ${txid} failed`);\n    }\n  }\n\n  return { txid, slot };\n};\n\nexport const sendTransactionWithRetry = async (\n  connection: Connection,\n  wallet: any,\n  instructions: TransactionInstruction[],\n  signers: Keypair[],\n  commitment: Commitment = 'singleGossip',\n  includesFeePayer: boolean = false,\n  block?: BlockhashAndFeeCalculator,\n  beforeSend?: () => void,\n) => {\n  if (!wallet.publicKey) throw new WalletNotConnectedError();\n\n  let transaction = new Transaction();\n  instructions.forEach(instruction => transaction.add(instruction));\n  transaction.recentBlockhash = (\n    block || (await connection.getRecentBlockhash(commitment))\n  ).blockhash;\n\n  if (includesFeePayer) {\n    transaction.setSigners(...signers.map(s => s.publicKey));\n  } else {\n    transaction.setSigners(\n      // fee payed by the wallet owner\n      wallet.publicKey,\n      ...signers.map(s => s.publicKey),\n    );\n  }\n\n  if (signers.length > 0) {\n    transaction.partialSign(...signers);\n  }\n  if (!includesFeePayer) {\n    transaction = await wallet.signTransaction(transaction);\n  }\n\n  if (beforeSend) {\n    beforeSend();\n  }\n\n  const { txid, slot } = await sendSignedTransaction({\n    connection,\n    signedTransaction: transaction,\n  });\n\n  return { txid, slot };\n};\n\nexport const getUnixTs = () => {\n  return new Date().getTime() / 1000;\n};\n\nconst DEFAULT_TIMEOUT = 15000;\n\nexport async function sendSignedTransaction({\n  signedTransaction,\n  connection,\n  timeout = DEFAULT_TIMEOUT,\n}: {\n  signedTransaction: Transaction;\n  connection: Connection;\n  sendingMessage?: string;\n  sentMessage?: string;\n  successMessage?: string;\n  timeout?: number;\n}): Promise<{ txid: string; slot: number }> {\n  const rawTransaction = signedTransaction.serialize();\n  const startTime = getUnixTs();\n  let slot = 0;\n  const txid: TransactionSignature = await connection.sendRawTransaction(\n    rawTransaction,\n    {\n      skipPreflight: true,\n    },\n  );\n\n  console.log('Started awaiting confirmation for', txid);\n\n  let done = false;\n  (async () => {\n    while (!done && getUnixTs() - startTime < timeout) {\n      connection.sendRawTransaction(rawTransaction, {\n        skipPreflight: true,\n      });\n      await sleep(500);\n    }\n  })();\n  try {\n    const confirmation = await awaitTransactionSignatureConfirmation(\n      txid,\n      timeout,\n      connection,\n      'recent',\n      true,\n    );\n\n    if (!confirmation)\n      throw new Error('Timed out awaiting confirmation on transaction');\n\n    if (confirmation.err) {\n      console.error(confirmation.err);\n      throw new Error('Transaction failed: Custom instruction error');\n    }\n\n    slot = confirmation?.slot || 0;\n  } catch (err: any) {\n    console.error('Timeout Error caught', err);\n    if (err.timeout) {\n      throw new Error('Timed out awaiting confirmation on transaction');\n    }\n    let simulateResult: SimulatedTransactionResponse | null = null;\n    try {\n      simulateResult = (\n        await simulateTransaction(connection, signedTransaction, 'single')\n      ).value;\n    } catch (e) {}\n    if (simulateResult && simulateResult.err) {\n      if (simulateResult.logs) {\n        for (let i = simulateResult.logs.length - 1; i >= 0; --i) {\n          const line = simulateResult.logs[i];\n          if (line.startsWith('Program log: ')) {\n            throw new Error(\n              'Transaction failed: ' + line.slice('Program log: '.length),\n            );\n          }\n        }\n      }\n      throw new Error(JSON.stringify(simulateResult.err));\n    }\n    // throw new Error('Transaction failed');\n  } finally {\n    done = true;\n  }\n\n  console.log('Latency', txid, getUnixTs() - startTime);\n  return { txid, slot };\n}\n\nasync function simulateTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  commitment: Commitment,\n): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n  // @ts-ignore\n  transaction.recentBlockhash = await connection._recentBlockhash(\n    // @ts-ignore\n    connection._disableBlockhashCaching,\n  );\n\n  const signData = transaction.serializeMessage();\n  // @ts-ignore\n  const wireTransaction = transaction._serialize(signData);\n  const encodedTransaction = wireTransaction.toString('base64');\n  const config: any = { encoding: 'base64', commitment };\n  const args = [encodedTransaction, config];\n\n  // @ts-ignore\n  const res = await connection._rpcRequest('simulateTransaction', args);\n  if (res.error) {\n    throw new Error('failed to simulate transaction: ' + res.error.message);\n  }\n  return res.result;\n}\n\nasync function awaitTransactionSignatureConfirmation(\n  txid: TransactionSignature,\n  timeout: number,\n  connection: Connection,\n  commitment: Commitment = 'recent',\n  queryStatus = false,\n): Promise<SignatureStatus | null | void> {\n  let done = false;\n  let status: SignatureStatus | null | void = {\n    slot: 0,\n    confirmations: 0,\n    err: null,\n  };\n  let subId = 0;\n  status = await new Promise(async (resolve, reject) => {\n    setTimeout(() => {\n      if (done) {\n        return;\n      }\n      done = true;\n      console.log('Rejecting for timeout...');\n      reject({ timeout: true });\n    }, timeout);\n    try {\n      subId = connection.onSignature(\n        txid,\n        (result, context) => {\n          done = true;\n          status = {\n            err: result.err,\n            slot: context.slot,\n            confirmations: 0,\n          };\n          if (result.err) {\n            console.log('Rejected via websocket', result.err);\n            reject(status);\n          } else {\n            console.log('Resolved via websocket', result);\n            resolve(status);\n          }\n        },\n        commitment,\n      );\n    } catch (e) {\n      done = true;\n      console.error('WS error in setup', txid, e);\n    }\n    while (!done && queryStatus) {\n      // eslint-disable-next-line no-loop-func\n      (async () => {\n        try {\n          const signatureStatuses = await connection.getSignatureStatuses([\n            txid,\n          ]);\n          status = signatureStatuses && signatureStatuses.value[0];\n          if (!done) {\n            if (!status) {\n              console.log('REST null result for', txid, status);\n            } else if (status.err) {\n              console.log('REST error for', txid, status);\n              done = true;\n              reject(status.err);\n            } else if (!status.confirmations) {\n              console.log('REST no confirmations for', txid, status);\n            } else {\n              console.log('REST confirmation for', txid, status);\n              done = true;\n              resolve(status);\n            }\n          }\n        } catch (e) {\n          if (!done) {\n            console.log('REST connection error: txid', txid, e);\n          }\n        }\n      })();\n      await sleep(2000);\n    }\n  });\n\n  //@ts-ignore\n  if (connection._signatureSubscriptions[subId])\n    connection.removeSignatureListener(subId);\n  done = true;\n  console.log('Returning status', status);\n  return status;\n}\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import * as anchor from '@project-serum/anchor';\nimport { TOKEN_PROGRAM_ID } from '@solana/spl-token';\nimport { SystemProgram } from '@solana/web3.js';\nimport {\n  LAMPORTS_PER_SOL,\n  SYSVAR_RENT_PUBKEY,\n  TransactionInstruction,\n} from '@solana/web3.js';\n\nexport const FAIR_LAUNCH_PROGRAM_ID = new anchor.web3.PublicKey(\n  '3i1LEoG7xM9PvcfDA8jahjnbd2jxXe99835yGUZa9ZhT',\n);\n\nexport const toDate = (value?: anchor.BN) => {\n  if (!value) {\n    return;\n  }\n\n  return new Date(value.toNumber() * 1000);\n};\n\nconst numberFormater = new Intl.NumberFormat('en-US', {\n  style: 'decimal',\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n});\n\nexport const formatNumber = {\n  format: (val?: number) => {\n    if (!val) {\n      return '--';\n    }\n\n    return numberFormater.format(val);\n  },\n  asNumber: (val?: anchor.BN) => {\n    if (!val) {\n      return undefined;\n    }\n\n    return val.toNumber() / LAMPORTS_PER_SOL;\n  },\n};\n\nexport const SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID =\n  new anchor.web3.PublicKey('ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL');\n\nexport const getFairLaunchTicketSeqLookup = async (\n  tokenMint: anchor.web3.PublicKey,\n  seq: anchor.BN,\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [\n      Buffer.from('fair_launch'),\n      tokenMint.toBuffer(),\n      seq.toArrayLike(Buffer, 'le', 8),\n    ],\n    FAIR_LAUNCH_PROGRAM_ID,\n  );\n};\n\nexport const getAtaForMint = async (\n  mint: anchor.web3.PublicKey,\n  buyer: anchor.web3.PublicKey,\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [buyer.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()],\n    SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n  );\n};\n\nexport const getFairLaunchTicket = async (\n  tokenMint: anchor.web3.PublicKey,\n  buyer: anchor.web3.PublicKey,\n): Promise<[anchor.web3.PublicKey, number]> => {\n  return await anchor.web3.PublicKey.findProgramAddress(\n    [Buffer.from('fair_launch'), tokenMint.toBuffer(), buyer.toBuffer()],\n    FAIR_LAUNCH_PROGRAM_ID,\n  );\n};\n\nexport function createAssociatedTokenAccountInstruction(\n  associatedTokenAddress: anchor.web3.PublicKey,\n  payer: anchor.web3.PublicKey,\n  walletAddress: anchor.web3.PublicKey,\n  splTokenMintAddress: anchor.web3.PublicKey,\n) {\n  const keys = [\n    {\n      pubkey: payer,\n      isSigner: true,\n      isWritable: true,\n    },\n    {\n      pubkey: associatedTokenAddress,\n      isSigner: false,\n      isWritable: true,\n    },\n    {\n      pubkey: walletAddress,\n      isSigner: false,\n      isWritable: false,\n    },\n    {\n      pubkey: splTokenMintAddress,\n      isSigner: false,\n      isWritable: false,\n    },\n    {\n      pubkey: SystemProgram.programId,\n      isSigner: false,\n      isWritable: false,\n    },\n    {\n      pubkey: TOKEN_PROGRAM_ID,\n      isSigner: false,\n      isWritable: false,\n    },\n    {\n      pubkey: SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false,\n    },\n  ];\n  return new TransactionInstruction({\n    keys,\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n    data: Buffer.from([]),\n  });\n}\n","import { useEffect, useMemo, useState } from 'react';\nimport styled from 'styled-components';\nimport {\n  CircularProgress,\n  Container,\n  IconButton,\n  Link,\n  Slider,\n  Snackbar,\n} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { createStyles, Theme } from '@material-ui/core/styles';\nimport { PhaseCountdown } from './countdown';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Alert from '@material-ui/lab/Alert';\n\nimport * as anchor from '@project-serum/anchor';\n\nimport { LAMPORTS_PER_SOL } from '@solana/web3.js';\n\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { WalletDialogButton } from '@solana/wallet-adapter-material-ui';\n\nimport {\n  awaitTransactionSignatureConfirmation,\n  CandyMachineAccount,\n  getCandyMachineState,\n  mintOneToken,\n} from './candy-machine';\n\nimport {\n  FairLaunchAccount,\n  getFairLaunchState,\n  punchTicket,\n  purchaseTicket,\n  receiveRefund,\n} from './fair-launch';\n\nimport { formatNumber, getAtaForMint, toDate } from './utils';\nimport Countdown from 'react-countdown';\n\nconst ConnectButton = styled(WalletDialogButton)`\n  width: 100%;\n  height: 60px;\n  margin-top: 2px;\n  margin-bottom: 1px;\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nconst MintContainer = styled.div``; // add your styles here\n\nconst MintButton = styled(Button)`\n  width: 100%;\n  height: 60px;\n  margin-top: 2px;\n  margin-bottom: 1px;\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n`; // add your styles here\n\nconst dialogStyles: any = (theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 0,\n      padding: theme.spacing(2),\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500],\n    },\n  });\n\nconst ValueSlider = styled(Slider)({\n  color: '#C0D5FE',\n  height: 8,\n  '& > *': {\n    height: 4,\n  },\n  '& .MuiSlider-track': {\n    border: 'none',\n    height: 4,\n  },\n  '& .MuiSlider-thumb': {\n    height: 24,\n    width: 24,\n    marginTop: -10,\n    background: 'linear-gradient(180deg, #604AE5 0%, #813EEE 100%)',\n    border: '2px solid currentColor',\n    '&:focus, &:hover, &.Mui-active, &.Mui-focusVisible': {\n      boxShadow: 'inherit',\n    },\n    '&:before': {\n      display: 'none',\n    },\n  },\n  '& .MuiSlider-valueLabel': {\n    '& > *': {\n      background: 'linear-gradient(180deg, #604AE5 0%, #813EEE 100%)',\n    },\n    lineHeight: 1.2,\n    fontSize: 12,\n    padding: 0,\n    width: 32,\n    height: 32,\n    marginLeft: 9,\n  },\n});\n\nenum Phase {\n  Phase0,\n  Phase1,\n  Phase2,\n  Lottery,\n  Phase3,\n  Phase4,\n  Unknown,\n}\n\nconst Header = (props: {\n  phaseName: string;\n  desc: string;\n  date: anchor.BN | undefined;\n  status?: string;\n}) => {\n  const { phaseName, desc, date, status } = props;\n  return (\n    <Grid container justifyContent=\"center\">\n      <Grid xs={6} justifyContent=\"center\" direction=\"column\">\n        <Typography variant=\"h5\" style={{ fontWeight: 600 }}>\n          {phaseName}\n        </Typography>\n        <Typography variant=\"body1\" color=\"textSecondary\">\n          {desc}\n        </Typography>\n      </Grid>\n      <Grid xs={6} container justifyContent=\"flex-end\">\n        <PhaseCountdown\n          date={toDate(date)}\n          style={{ justifyContent: 'flex-end' }}\n          status={status || 'COMPLETE'}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nfunction getPhase(\n  fairLaunch: FairLaunchAccount | undefined,\n  candyMachine: CandyMachineAccount | undefined,\n): Phase {\n  const curr = new Date().getTime();\n\n  const phaseOne = toDate(fairLaunch?.state.data.phaseOneStart)?.getTime();\n  const phaseOneEnd = toDate(fairLaunch?.state.data.phaseOneEnd)?.getTime();\n  const phaseTwoEnd = toDate(fairLaunch?.state.data.phaseTwoEnd)?.getTime();\n  const candyMachineGoLive = toDate(candyMachine?.state.goLiveDate)?.getTime();\n\n  if (phaseOne && curr < phaseOne) {\n    return Phase.Phase0;\n  } else if (phaseOneEnd && curr <= phaseOneEnd) {\n    return Phase.Phase1;\n  } else if (phaseTwoEnd && curr <= phaseTwoEnd) {\n    return Phase.Phase2;\n  } else if (!fairLaunch?.state.phaseThreeStarted) {\n    return Phase.Lottery;\n  } else if (\n    fairLaunch?.state.phaseThreeStarted &&\n    candyMachineGoLive &&\n    curr > candyMachineGoLive\n  ) {\n    return Phase.Phase4;\n  } else if (fairLaunch?.state.phaseThreeStarted) {\n    return Phase.Phase3;\n  }\n\n  return Phase.Unknown;\n}\n\nexport interface HomeProps {\n  candyMachineId?: anchor.web3.PublicKey;\n  fairLaunchId: anchor.web3.PublicKey;\n  connection: anchor.web3.Connection;\n  startDate: number;\n  txTimeout: number;\n}\n\nconst FAIR_LAUNCH_LOTTERY_SIZE =\n  8 + // discriminator\n  32 + // fair launch\n  1 + // bump\n  8; // size of bitmask ones\n\nconst isWinner = (\n  fairLaunch: FairLaunchAccount | undefined,\n  fairLaunchBalance: number,\n): boolean => {\n  if (fairLaunchBalance > 0) return true;\n  if (\n    !fairLaunch?.lottery.data ||\n    !fairLaunch?.lottery.data.length ||\n    !fairLaunch?.ticket.data?.seq ||\n    !fairLaunch?.state.phaseThreeStarted\n  ) {\n    return false;\n  }\n\n  const myByte =\n    fairLaunch.lottery.data[\n      FAIR_LAUNCH_LOTTERY_SIZE +\n        Math.floor(fairLaunch.ticket.data?.seq.toNumber() / 8)\n    ];\n\n  const positionFromRight = 7 - (fairLaunch.ticket.data?.seq.toNumber() % 8);\n  const mask = Math.pow(2, positionFromRight);\n  const isWinner = myByte & mask;\n  return isWinner > 0;\n};\n\nconst Home = (props: HomeProps) => {\n  const [fairLaunchBalance, setFairLaunchBalance] = useState<number>(0);\n  const [yourSOLBalance, setYourSOLBalance] = useState<number | null>(null);\n\n  const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\n  const [contributed, setContributed] = useState(0);\n\n  const wallet = useWallet();\n\n  const anchorWallet = useMemo(() => {\n    if (\n      !wallet ||\n      !wallet.publicKey ||\n      !wallet.signAllTransactions ||\n      !wallet.signTransaction\n    ) {\n      return;\n    }\n\n    return {\n      publicKey: wallet.publicKey,\n      signAllTransactions: wallet.signAllTransactions,\n      signTransaction: wallet.signTransaction,\n    } as anchor.Wallet;\n  }, [wallet]);\n\n  const [alertState, setAlertState] = useState<AlertState>({\n    open: false,\n    message: '',\n    severity: undefined,\n  });\n\n  const [fairLaunch, setFairLaunch] = useState<FairLaunchAccount>();\n  const [candyMachine, setCandyMachine] = useState<CandyMachineAccount>();\n  const [howToOpen, setHowToOpen] = useState(false);\n  const [refundExplainerOpen, setRefundExplainerOpen] = useState(false);\n  const [antiRugPolicyOpen, setAnitRugPolicyOpen] = useState(false);\n\n  const onMint = async () => {\n    try {\n      setIsMinting(true);\n      if (wallet.connected && candyMachine?.program && wallet.publicKey) {\n        if (\n          fairLaunch?.ticket.data?.state.unpunched &&\n          isWinner(fairLaunch, fairLaunchBalance)\n        ) {\n          await onPunchTicket();\n        }\n\n        const mintTxId = await mintOneToken(candyMachine, wallet.publicKey);\n\n        const status = await awaitTransactionSignatureConfirmation(\n          mintTxId,\n          props.txTimeout,\n          props.connection,\n          'singleGossip',\n          false,\n        );\n\n        if (!status?.err) {\n          setAlertState({\n            open: true,\n            message: 'Congratulations! Mint succeeded!',\n            severity: 'success',\n          });\n        } else {\n          setAlertState({\n            open: true,\n            message: 'Mint failed! Please try again!',\n            severity: 'error',\n          });\n        }\n      }\n    } catch (error: any) {\n      // TODO: blech:\n      let message = error.msg || 'Minting failed! Please try again!';\n      if (!error.msg) {\n        if (!error.message) {\n          message = 'Transaction Timeout! Please try again.';\n        } else if (error.message.indexOf('0x138')) {\n        } else if (error.message.indexOf('0x137')) {\n          message = `SOLD OUT!`;\n        } else if (error.message.indexOf('0x135')) {\n          message = `Insufficient funds to mint. Please fund your wallet.`;\n        }\n      } else {\n        if (error.code === 311) {\n          message = `SOLD OUT!`;\n          window.location.reload();\n        } else if (error.code === 312) {\n          message = `Minting period hasn't started yet.`;\n        }\n      }\n\n      setAlertState({\n        open: true,\n        message,\n        severity: 'error',\n      });\n    } finally {\n      setIsMinting(false);\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (!anchorWallet) {\n        return;\n      }\n\n      try {\n        const balance = await props.connection.getBalance(\n          anchorWallet.publicKey,\n        );\n        setYourSOLBalance(balance);\n\n        const state = await getFairLaunchState(\n          anchorWallet,\n          props.fairLaunchId,\n          props.connection,\n        );\n\n        setFairLaunch(state);\n\n        try {\n          if (state.state.tokenMint) {\n            const fairLaunchBalance =\n              await props.connection.getTokenAccountBalance(\n                (\n                  await getAtaForMint(\n                    state.state.tokenMint,\n                    anchorWallet.publicKey,\n                  )\n                )[0],\n              );\n\n            if (fairLaunchBalance.value) {\n              setFairLaunchBalance(fairLaunchBalance.value.uiAmount || 0);\n            }\n          }\n        } catch (e) {\n          console.log('Problem getting fair launch token balance');\n          console.log(e);\n        }\n\n      } catch (e) {\n        console.log('Problem getting fair launch state');\n        console.log(e);\n      }\n      if (props.candyMachineId) {\n        try {\n          const cndy = await getCandyMachineState(\n            anchorWallet,\n            props.candyMachineId,\n            props.connection,\n          );\n          setCandyMachine(cndy);\n        } catch (e) {\n          console.log('Problem getting candy machine state');\n          console.log(e);\n        }\n      } else {\n        console.log('No candy machine detected in configuration.');\n      }\n    })();\n  }, [\n    anchorWallet,\n    props.candyMachineId,\n    props.connection,\n    props.fairLaunchId,\n  ]);\n\n  const min = formatNumber.asNumber(fairLaunch?.state.data.priceRangeStart);\n  const max = formatNumber.asNumber(fairLaunch?.state.data.priceRangeEnd);\n  const step = formatNumber.asNumber(fairLaunch?.state.data.tickSize);\n  const median = formatNumber.asNumber(fairLaunch?.state.currentMedian);\n  const marks = [\n    {\n      value: min || 0,\n      label: `${min} SOL`,\n    },\n    // TODO:L\n    {\n      value: median || 0,\n      label: `${median}`,\n    },\n    // display user comitted value\n    // {\n    //   value: 37,\n    //   label: '37°C',\n    // },\n    {\n      value: max || 0,\n      label: `${max} SOL`,\n    },\n  ].filter(_ => _ !== undefined && _.value !== 0) as any;\n\n  const onDeposit = async () => {\n    if (!anchorWallet) {\n      return;\n    }\n    console.log('deposit');\n    setIsMinting(true);\n    try {\n      let anum = contributed;\n      if (getPhase(fairLaunch, candyMachine) == Phase.Phase2){\n        anum=0;\n      }\n      await purchaseTicket(anum, anchorWallet, fairLaunch);\n      setIsMinting(false);\n      setAlertState({\n        open: true,\n        message: `Congratulations! Bid ${\n          fairLaunch?.ticket.data ? 'updated' : 'inserted'\n        }!`,\n        severity: 'success',\n      });\n    } catch (e) {\n      console.log(e);\n      setIsMinting(false);\n      setAlertState({\n        open: true,\n        message: 'Something went wrong.',\n        severity: 'error',\n      });\n    }\n  };\n  const onRugRefund = async () => {\n    if (!anchorWallet) {\n      return;\n    }\n\n    console.log('refund');\n    try {\n      setIsMinting(true);\n      await receiveRefund(anchorWallet, fairLaunch);\n      setIsMinting(false);\n      setAlertState({\n        open: true,\n        message:\n          'Congratulations! You have received a refund. This is an irreversible action.',\n        severity: 'success',\n      });\n    } catch (e) {\n      console.log(e);\n      setIsMinting(false);\n      setAlertState({\n        open: true,\n        message: 'Something went wrong.',\n        severity: 'error',\n      });\n    }\n  };\n  const onRefundTicket = async () => {\n    if (!anchorWallet) {\n      return;\n    }\n\n    console.log('refund');\n    try {\n      setIsMinting(true);\n      await purchaseTicket(0, anchorWallet, fairLaunch);\n      setIsMinting(false);\n      setAlertState({\n        open: true,\n        message:\n          'Congratulations! Funds withdrawn. This is an irreversible action.',\n        severity: 'success',\n      });\n    } catch (e) {\n      console.log(e);\n      setIsMinting(false);\n      setAlertState({\n        open: true,\n        message: 'Something went wrong.',\n        severity: 'error',\n      });\n    }\n  };\n\n  const onPunchTicket = async () => {\n    if (!anchorWallet || !fairLaunch || !fairLaunch.ticket) {\n      return;\n    }\n\n    console.log('punch');\n    setIsMinting(true);\n    try {\n      await punchTicket(anchorWallet, fairLaunch);\n      setIsMinting(false);\n      setAlertState({\n        open: true,\n        message: 'Congratulations! Ticket punched!',\n        severity: 'success',\n      });\n    } catch (e) {\n      console.log(e);\n      setIsMinting(false);\n      setAlertState({\n        open: true,\n        message: 'Something went wrong.',\n        severity: 'error',\n      });\n    }\n  };\n\n  const phase = getPhase(fairLaunch, candyMachine);\n\n  const candyMachinePredatesFairLaunch =\n    candyMachine?.state.goLiveDate &&\n    fairLaunch?.state.data.phaseTwoEnd &&\n    candyMachine?.state.goLiveDate.lt(fairLaunch?.state.data.phaseTwoEnd);\n\n  const notEnoughSOL = !!(\n    yourSOLBalance != null &&\n    fairLaunch?.state.data.priceRangeStart &&\n    fairLaunch?.state.data.fee &&\n    yourSOLBalance + (fairLaunch?.ticket?.data?.amount.toNumber() || 0) <\n      contributed * LAMPORTS_PER_SOL +\n        fairLaunch?.state.data.fee.toNumber() +\n        0.01\n  );\n\n  return (\n    <Container style={{ marginTop: 0 }}>\n    <div>Hi we're on devnet :)</div>\n      <Container maxWidth=\"xs\" style={{ position: 'relative' }}>\n        <Paper\n          style={{ padding: 24, backgroundColor: '#151A1F', borderRadius: 6 }}\n        >\n          <Grid container justifyContent=\"center\" direction=\"column\">\n            {phase === Phase.Phase0 && (\n              <Header\n                phaseName={'Phase 0'}\n                desc={'Anticipation Phase'}\n                date={fairLaunch?.state.data.phaseOneStart}\n              />\n            )}\n            {phase === Phase.Phase1 && (\n              <div>\n              <Header\n                phaseName={'This is NOT FLP!'}\n                desc={'You may lose all your $. Risk only what you can afford to lose.'}\n                date={fairLaunch?.state.data.phaseOneEnd}\n              />\n\n              <Typography variant=\"h5\" style={{ fontWeight: 900 }}>\n                    \n                    {fairLaunch?.state.authority.toBase58().slice(0, 3) +\n                      '...' +\n                      fairLaunch?.state.authority\n                        .toBase58()\n                        .slice(\n                          fairLaunch?.state.authority.toBase58().length - 3,\n                          fairLaunch?.state.authority.toBase58().length,\n                        )}{' '}\n                    is Going to Win 1st Prize of ◎{''}\n\n                    { // @ts-ignore\n                      formatNumber.format(fairLaunch?.treasury / LAMPORTS_PER_SOL)}! If nobody outbids 'em _soon_ \n                     { // @ts-ignore\n                      formatNumber.format(fairLaunch?.current_highest / LAMPORTS_PER_SOL)}! This be the current winning bid.\n                  </Typography>\n                  </div>  \n            )}\n\n            {phase === Phase.Phase2 && (\n              <Header\n                phaseName={'Hey press the mint $'}\n                desc={'It\\'ll pay the winner, you pay sol fees, then restart this game:)'}\n                date={fairLaunch?.state.data.phaseTwoEnd}\n              />\n            )}\n\n            {phase === Phase.Lottery && (\n              <Header\n                phaseName={'Phase 3'}\n                desc={'Raffle in progress'}\n                date={fairLaunch?.state.data.phaseTwoEnd.add(\n                  fairLaunch?.state.data.lotteryDuration,\n                )}\n              />\n            )}\n\n            {phase === Phase.Phase3 && !candyMachine && (\n              <Header\n                phaseName={'Phase 3'}\n                desc={'Raffle finished!'}\n                date={fairLaunch?.state.data.phaseTwoEnd}\n              />\n            )}\n\n            {phase === Phase.Phase3 && candyMachine && (\n              <Header\n                phaseName={'Phase 3'}\n                desc={'Minting starts in...'}\n                date={candyMachine?.state.goLiveDate}\n              />\n            )}\n\n            {phase === Phase.Phase4 && (\n              <Header\n                phaseName={\n                  candyMachinePredatesFairLaunch ? 'Phase 3' : 'Phase 4'\n                }\n                desc={'Candy Time 🍬 🍬 🍬'}\n                date={candyMachine?.state.goLiveDate}\n                status=\"LIVE\"\n              />\n            )}\n\n            {fairLaunch && (\n              <>\n                {[\n                  Phase.Phase1,\n                  Phase.Phase2,\n                  Phase.Phase3,\n                  Phase.Lottery,\n                ].includes(phase) &&\n                  fairLaunch?.ticket?.data?.state.withdrawn && (\n                    <div style={{ paddingTop: '15px' }}>\n                      <Alert severity=\"error\">\n                        Your bid was withdrawn and cannot be adjusted or\n                        re-inserted.\n                      </Alert>\n                    </div>\n                  )}\n                {[Phase.Phase1, Phase.Phase2].includes(phase) &&\n                  fairLaunch.state.currentMedian &&\n                  fairLaunch?.ticket?.data?.amount &&\n                  !fairLaunch?.ticket?.data?.state.withdrawn &&\n                  fairLaunch.state.currentMedian.gt(\n                    fairLaunch?.ticket?.data?.amount,\n                  ) && (\n                    <div style={{ paddingTop: '15px' }}>\n                      <Alert severity=\"warning\">\n                        Your bid is currently below the median and will not be\n                        eligible for the raffle.\n                      </Alert>\n                    </div>\n                  )}\n                {[Phase.Phase3, Phase.Lottery].includes(phase) &&\n                  fairLaunch.state.currentMedian &&\n                  fairLaunch?.ticket?.data?.amount &&\n                  !fairLaunch?.ticket?.data?.state.withdrawn &&\n                  fairLaunch.state.currentMedian.gt(\n                    fairLaunch?.ticket?.data?.amount,\n                  ) && (\n                    <div style={{ paddingTop: '15px' }}>\n                      <Alert severity=\"error\">\n                        Your bid was below the median and was not included in\n                        the raffle. You may click <em>Withdraw</em> when the\n                        raffle ends or you will be automatically issued one when\n                        the Fair Launch authority withdraws from the treasury.\n                      </Alert>\n                    </div>\n                  )}\n                {notEnoughSOL && (\n                  <Alert severity=\"error\">\n                    You do not have enough SOL in your account to place this\n                    bid.\n                  </Alert>\n                )}\n              </>\n            )}\n\n            {[Phase.Phase1, Phase.Phase2].includes(phase) && (\n              <>\n                <Grid style={{ marginTop: 40, marginBottom: 20 }}>\n                  <ValueSlider\n                    min={min}\n                    marks={marks}\n                    max={max}\n                    step={step}\n                    value={contributed}\n                    onChange={(ev, val) => setContributed(val as any)}\n                    valueLabelDisplay=\"auto\"\n                    style={{\n                      width: 'calc(100% - 40px)',\n                      marginLeft: 20,\n                      height: 30,\n                    }}\n                  />\n                </Grid>\n              </>\n            )}\n\n            {!wallet.connected ? (\n              <ConnectButton>\n                Connect{' '}\n                {[Phase.Phase1].includes(phase) ? 'to bid' : 'to see status'}\n              </ConnectButton>\n            ) : (\n              <div>\n                {[Phase.Phase1, Phase.Phase2].includes(phase) && (\n                  <>\n                    <MintButton\n                      onClick={onDeposit}\n                      variant=\"contained\"\n                      disabled={\n                        false \n                      }\n                    >\n                      {isMinting ? (\n                        <CircularProgress />\n                      ) : !fairLaunch?.ticket.data ? (\n                        'Place bid'\n                      ) : (\n                        'Good luck with your ticket!'\n                      )}\n                      {}\n                    </MintButton>\n                  </>\n                )}\n                 \n\n                {[Phase.Phase3].includes(phase) && (\n                  <>\n                    {isWinner(fairLaunch, fairLaunchBalance) && (\n                      <MintButton\n                        onClick={onPunchTicket}\n                        variant=\"contained\"\n                        disabled={\n                          fairLaunch?.ticket.data?.state.punched !== undefined\n                        }\n                      >\n                        {isMinting ? <CircularProgress /> : 'Punch Ticket'}\n                      </MintButton>\n                    )}\n\n                    {!isWinner(fairLaunch, fairLaunchBalance) && (\n                      <MintButton\n                        onClick={onRefundTicket}\n                        variant=\"contained\"\n                        disabled={\n                          isMinting ||\n                          fairLaunch?.ticket.data === undefined ||\n                          fairLaunch?.ticket.data?.state.withdrawn !== undefined\n                        }\n                      >\n                        {isMinting ? <CircularProgress /> : 'Withdraw'}\n                      </MintButton>\n                    )}\n                  </>\n                )}\n\n                {phase === Phase.Phase4 && (\n                  <>\n                    {(!fairLaunch ||\n                      isWinner(fairLaunch, fairLaunchBalance)) && (\n                      <MintContainer>\n                        <MintButton\n                          disabled={\n                            candyMachine?.state.isSoldOut ||\n                            isMinting ||\n                            !candyMachine?.state.isActive ||\n                            (fairLaunch?.ticket?.data?.state.punched &&\n                              fairLaunchBalance === 0)\n                          }\n                          onClick={onMint}\n                          variant=\"contained\"\n                        >\n                          {fairLaunch?.ticket?.data?.state.punched &&\n                          fairLaunchBalance === 0 ? (\n                            'MINTED'\n                          ) : candyMachine?.state.isSoldOut ? (\n                            'SOLD OUT'\n                          ) : isMinting ? (\n                            <CircularProgress />\n                          ) : (\n                            'MINT'\n                          )}\n                        </MintButton>\n                      </MintContainer>\n                    )}\n\n                    {!isWinner(fairLaunch, fairLaunchBalance) && (\n                      <MintButton\n                        onClick={onRefundTicket}\n                        variant=\"contained\"\n                        disabled={\n                          isMinting ||\n                          fairLaunch?.ticket.data === undefined ||\n                          fairLaunch?.ticket.data?.state.withdrawn !== undefined\n                        }\n                      >\n                        {isMinting ? <CircularProgress /> : 'Withdraw'}\n                      </MintButton>\n                    )}\n                  </>\n                )}\n              </div>\n            )}\n\n            <Grid\n              container\n              justifyContent=\"space-between\"\n              color=\"textSecondary\"\n            >\n              <Link\n                component=\"button\"\n                variant=\"body2\"\n                color=\"textSecondary\"\n                align=\"left\"\n                onClick={() => {\n                  setHowToOpen(true);\n                }}\n              >\n                Wat is this\n              </Link>\n\n            </Grid>\n            <Dialog\n              open={refundExplainerOpen}\n              onClose={() => setRefundExplainerOpen(false)}\n              PaperProps={{\n                style: { backgroundColor: '#222933', borderRadius: 6 },\n              }}\n            >\n              <MuiDialogContent style={{ padding: 24 }}>\n                During raffle phases, or if you are a winner, or if this website\n                is not configured to be a fair launch but simply a candy\n                machine, refunds are disallowed.\n              </MuiDialogContent>\n            </Dialog>\n            <Dialog\n              open={antiRugPolicyOpen}\n              onClose={() => {\n                setAnitRugPolicyOpen(false);\n              }}\n              PaperProps={{\n                style: { backgroundColor: '#222933', borderRadius: 6 },\n              }}\n            >\n              <MuiDialogContent style={{ padding: 24 }}>\n                {!fairLaunch?.state.data.antiRugSetting && (\n                  <span>This Fair Launch has no anti-rug settings.</span>\n                )}\n                {fairLaunch?.state.data.antiRugSetting &&\n                  fairLaunch.state.data.antiRugSetting.selfDestructDate && (\n                    <div>\n                      <h3>Anti-Rug Policy</h3>\n                      <p>\n                        This raffle is governed by a smart contract to prevent\n                        the artist from running away with your money.\n                      </p>\n                      <p>How it works:</p>\n                      This project will retain{' '}\n                      {fairLaunch.state.data.antiRugSetting.reserveBp / 100}% (◎{' '}\n                      {(fairLaunch?.treasury *\n                        fairLaunch.state.data.antiRugSetting.reserveBp) /\n                        (LAMPORTS_PER_SOL * 10000)}\n                      ) of the pledged amount in a locked state until all but{' '}\n                      {fairLaunch.state.data.antiRugSetting.tokenRequirement.toNumber()}{' '}\n                      NFTs (out of up to{' '}\n                      {fairLaunch.state.data.numberOfTokens.toNumber()}) have\n                      been minted.\n                      <p>\n                        If more than{' '}\n                        {fairLaunch.state.data.antiRugSetting.tokenRequirement.toNumber()}{' '}\n                        NFTs remain as of{' '}\n                        {toDate(\n                          fairLaunch.state.data.antiRugSetting.selfDestructDate,\n                        )?.toLocaleDateString()}{' '}\n                        at{' '}\n                        {toDate(\n                          fairLaunch.state.data.antiRugSetting.selfDestructDate,\n                        )?.toLocaleTimeString()}\n                        , you will have the option to get a refund of{' '}\n                        {fairLaunch.state.data.antiRugSetting.reserveBp / 100}%\n                        of the cost of your token.\n                      </p>\n                      {fairLaunch?.ticket?.data &&\n                        !fairLaunch?.ticket?.data.state.withdrawn && (\n                          <MintButton\n                            onClick={onRugRefund}\n                            variant=\"contained\"\n                            disabled={\n                              !!!fairLaunch.ticket.data ||\n                              !fairLaunch.ticket.data.state.punched ||\n                              Date.now() / 1000 <\n                                fairLaunch.state.data.antiRugSetting.selfDestructDate.toNumber()\n                            }\n                          >\n                            {isMinting ? (\n                              <CircularProgress />\n                            ) : Date.now() / 1000 <\n                              fairLaunch.state.data.antiRugSetting.selfDestructDate.toNumber() ? (\n                              <span>\n                                Refund in...\n                                <Countdown\n                                  date={toDate(\n                                    fairLaunch.state.data.antiRugSetting\n                                      .selfDestructDate,\n                                  )}\n                                />\n                              </span>\n                            ) : (\n                              'Refund'\n                            )}\n                            {}\n                          </MintButton>\n                        )}\n                      <div style={{ textAlign: 'center', marginTop: '-5px' }}>\n                        {fairLaunch?.ticket?.data &&\n                          !fairLaunch?.ticket?.data?.state.punched && (\n                            <small>\n                              You currently have a ticket but it has not been\n                              punched yet, so cannot be refunded.\n                            </small>\n                          )}\n                      </div>\n                    </div>\n                  )}\n              </MuiDialogContent>\n            </Dialog>\n            <Dialog\n              open={howToOpen}\n              onClose={() => setHowToOpen(false)}\n              PaperProps={{\n                style: { backgroundColor: '#222933', borderRadius: 6 },\n              }}\n            >\n              <MuiDialogTitle\n                disableTypography\n                style={{\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between',\n                }}\n              >\n                <Link\n                  component=\"button\"\n                  variant=\"h6\"\n                  color=\"textSecondary\"\n                  onClick={() => {\n                    setHowToOpen(true);\n                  }}\n                >\n                  How it works\n                </Link>\n                <IconButton\n                  aria-label=\"close\"\n                  className={dialogStyles.closeButton}\n                  onClick={() => setHowToOpen(false)}\n                >\n                  <CloseIcon />\n                </IconButton>\n              </MuiDialogTitle>\n              <MuiDialogContent>\n                <Typography variant=\"h6\">\n                  There is one phase.\n                </Typography>\n                <Typography gutterBottom color=\"textSecondary\">\n                  You contribute. When you do for a particular game the ranges increase and the entry into all games is reduced a bit.\n                </Typography>\n                <Typography variant=\"h6\">Phase 2 - Not Really</Typography>\n                <Typography gutterBottom color=\"textSecondary\">\n                 Anyone can press the magic button, release winnings to our lucky frien, 10% stays behind to seed the next game tho.\n                </Typography>\n <Typography variant=\"h6\">Btw</Typography>\n                <Typography gutterBottom color=\"textSecondary\">\n                Any bid of any amount will let you win, if nobody bids before the timer runs out. Glhf.\n                </Typography>\n              </MuiDialogContent>\n            </Dialog>\n\n            {/* {wallet.connected && (\n              <p>\n                Address: {shortenAddress(wallet.publicKey?.toBase58() || '')}\n              </p>\n            )}\n\n            {wallet.connected && (\n              <p>Balance: {(balance || 0).toLocaleString()} SOL</p>\n            )} */}\n          </Grid>\n        </Paper>\n      </Container>\n\n      {fairLaunch && (\n        <Container\n          maxWidth=\"xs\"\n          style={{ position: 'relative', marginTop: 10 }}\n        >\n          <div style={{ margin: 20 }}>\n            <Grid container direction=\"row\" wrap=\"nowrap\">\n              <Grid container md={4} direction=\"column\">\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Bids\n                </Typography>\n                <Typography\n                  variant=\"h6\"\n                  color=\"textPrimary\"\n                  style={{ fontWeight: 'bold' }}\n                >\n                  {fairLaunch?.state.numberTicketsSold.toNumber() || 0}\n                </Typography>\n              </Grid>\n              <Grid container md={4} direction=\"column\">\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Median bid\n                </Typography>\n                <Typography\n                  variant=\"h6\"\n                  color=\"textPrimary\"\n                  style={{ fontWeight: 'bold' }}\n                >\n                  ◎ {formatNumber.format(median)}\n                </Typography>\n              </Grid>\n              <Grid container md={4} direction=\"column\">\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Total raised\n                </Typography>\n                <Typography\n                  variant=\"h6\"\n                  color=\"textPrimary\"\n                  style={{ fontWeight: 'bold' }}\n                >\n                  ◎{' '}\n                  {formatNumber.format(\n                    (fairLaunch?.treasury || 0) / LAMPORTS_PER_SOL,\n                  )}\n                </Typography>\n              </Grid>\n            </Grid>\n          </div>\n        </Container>\n      )}\n      <Snackbar\n        open={alertState.open}\n        autoHideDuration={6000}\n        onClose={() => setAlertState({ ...alertState, open: false })}\n      >\n        <Alert\n          onClose={() => setAlertState({ ...alertState, open: false })}\n          severity={alertState.severity}\n        >\n          {alertState.message}\n        </Alert>\n      </Snackbar>\n    </Container>\n  );\n};\n\ninterface AlertState {\n  open: boolean;\n  message: string;\n  severity: 'success' | 'info' | 'warning' | 'error' | undefined;\n}\n\nexport default Home;\n","import { Paper } from '@material-ui/core';\nimport Countdown from 'react-countdown';\nimport { Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport { useState } from 'react';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      padding: theme.spacing(0),\n      '& > *': {\n        margin: theme.spacing(0.5),\n        marginRight: 0,\n        width: theme.spacing(6),\n        height: theme.spacing(6),\n        display: 'flex',\n        flexDirection: 'column',\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        background: '#384457',\n        color: 'white',\n        borderRadius: 5,\n        fontSize: 10,\n      },\n    },\n    done: {\n      display: 'flex',\n      margin: theme.spacing(1),\n      marginRight: 0,\n      padding: theme.spacing(1),\n      flexDirection: 'column',\n      alignContent: 'center',\n      alignItems: 'center',\n      justifyContent: 'center',\n      background: '#384457',\n      color: 'white',\n      borderRadius: 5,\n      fontWeight: 'bold',\n      fontSize: 18,\n    },\n    item: {\n      fontWeight: 'bold',\n      fontSize: 18,\n    }\n  }),\n);\n\n\ninterface PhaseCountdownProps {\n  date: Date | undefined;\n  style?: React.CSSProperties;\n  status?: string;\n  onComplete?: () => void;\n  start?: Date;\n  end?: Date;\n}\n\ninterface CountdownRender {\n  days: number;\n  hours: number;\n  minutes: number;\n  seconds: number;\n  completed: boolean;\n}\n\nexport const PhaseCountdown: React.FC<PhaseCountdownProps> = ({\n  date,\n  status,\n  style,\n  start,\n  end,\n  onComplete,\n}) => {\n  const classes = useStyles();\n\n  const [isFixed, setIsFixed] = useState(start && end && date ? start.getTime() - Date.now() < 0 : false);\n\n  const renderCountdown = ({ days, hours, minutes, seconds, completed }: CountdownRender) => {\n    hours += days * 24\n    if (completed) {\n      return status ? <span className={classes.done}  >{status}</span> : null;\n    } else {\n      return (\n        <div className={classes.root} style={style} >\n          {isFixed && <Paper elevation={0}>\n            <span className={classes.item}>\n              +\n            </span>\n          </Paper>}\n          <Paper elevation={0}>\n            <span className={classes.item}>\n              {hours < 10 ? `0${hours}` : hours}\n            </span>\n            <span>hrs</span>\n          </Paper>\n          <Paper elevation={0}>\n            <span className={classes.item}>\n              {minutes < 10 ? `0${minutes}` : minutes}\n            </span>\n            <span>mins</span>\n          </Paper>\n          <Paper elevation={0}>\n            <span className={classes.item}>\n              {seconds < 10 ? `0${seconds}` : seconds}\n            </span>\n            <span>secs</span>\n          </Paper>\n        </div>\n      )\n    }\n  }\n\n  if (date && start && end) {\n    if (isFixed) {\n      <Countdown\n        date={start}\n        now={() => end.getTime()}\n        onComplete={() => setIsFixed(false)}\n        renderer={renderCountdown}\n      />\n    }\n  }\n\n  if (date) {\n    return (\n      <Countdown\n        date={date}\n        onComplete={onComplete}\n        renderer={renderCountdown}\n      />\n    )\n  } else {\n    return null\n  }\n}\n","import React, { useContext, useEffect, useMemo, useRef } from 'react';\nimport confetti from 'canvas-confetti';\n\nexport interface ConfettiContextState {\n  dropConfetti: () => void;\n}\n\nconst ConfettiContext = React.createContext<ConfettiContextState | null>(null);\n\nexport const ConfettiProvider = ({ children = null as any }) => {\n  const canvasRef = useRef<HTMLCanvasElement>();\n  const confettiRef = useRef<confetti.CreateTypes>();\n\n  const dropConfetti = useMemo(\n    () => () => {\n      if (confettiRef.current && canvasRef.current) {\n        canvasRef.current.style.visibility = 'visible';\n        confettiRef\n          .current({\n            particleCount: 400,\n            spread: 160,\n            origin: { y: 0.3 },\n          })\n          ?.finally(() => {\n            if (canvasRef.current) {\n              canvasRef.current.style.visibility = 'hidden';\n            }\n          });\n      }\n    },\n    [],\n  );\n\n  useEffect(() => {\n    if (canvasRef.current && !confettiRef.current) {\n      canvasRef.current.style.visibility = 'hidden';\n      confettiRef.current = confetti.create(canvasRef.current, {\n        resize: true,\n        useWorker: true,\n      });\n    }\n  }, []);\n\n  const canvasStyle: React.CSSProperties = {\n    width: '100vw',\n    height: '100vh',\n    position: 'absolute',\n    zIndex: 1,\n    top: 0,\n    left: 0,\n  };\n\n  return (\n    <ConfettiContext.Provider value={{ dropConfetti }}>\n      <canvas ref={canvasRef as any} style={canvasStyle} />\n      {children}\n    </ConfettiContext.Provider>\n  );\n};\n\nexport const Confetti = () => {\n  const { dropConfetti } = useConfetti();\n\n  useEffect(() => {\n    dropConfetti();\n  }, [dropConfetti]);\n\n  return <></>;\n};\n\nexport const useConfetti = () => {\n  const context = useContext(ConfettiContext);\n  return context as ConfettiContextState;\n};\n","import './App.css';\nimport { useMemo } from 'react';\n\nimport Home from './Home';\n\nimport * as anchor from '@project-serum/anchor';\nimport { clusterApiUrl } from '@solana/web3.js';\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\nimport {\n  getPhantomWallet,\n  getSolflareWallet,\n  getSolletWallet,\n} from '@solana/wallet-adapter-wallets';\n\nimport {\n  ConnectionProvider,\n  WalletProvider,\n} from '@solana/wallet-adapter-react';\n\nimport { WalletDialogProvider } from '@solana/wallet-adapter-material-ui';\nimport { ThemeProvider, createTheme } from '@material-ui/core';\nimport { ConfettiProvider } from './confetti';\n\nconst theme = createTheme({\n  palette: {\n    type: 'dark',\n  },\n});\n\nconst candyMachineId = process.env.REACT_APP_CANDY_MACHINE_ID\n  ? new anchor.web3.PublicKey(process.env.REACT_APP_CANDY_MACHINE_ID)\n  : undefined;\n\nexport const fairLaunchId = new anchor.web3.PublicKey(\n  process.env.REACT_APP_FAIR_LAUNCH_ID!,\n);\n\nexport const fairLaunchId2 = new anchor.web3.PublicKey(\n  process.env.REACT_APP_FAIR_LAUNCH_ID2!,\n);\nexport const fairLaunchId3 = new anchor.web3.PublicKey(\n  process.env.REACT_APP_FAIR_LAUNCH_ID3!,\n);\nexport const fairLaunchId4 = new anchor.web3.PublicKey(\n  process.env.REACT_APP_FAIR_LAUNCH_ID4!,\n);\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\n\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\nconst connection = new anchor.web3.Connection(rpcHost);\n\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE!, 10);\n\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\n\nconst App = () => {\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\n\n  const wallets = useMemo(\n    () => [getPhantomWallet(), getSolflareWallet(), getSolletWallet()],\n    [],\n  );\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ConnectionProvider endpoint={endpoint}>\n        <WalletProvider wallets={wallets} autoConnect>\n          <WalletDialogProvider>\n            <div\n              className=\"container-div\"\n              style={{ margin: 0, alignItems: 'center' }}\n            >\n              <div style={{ display: 'inline' }}>\n                <div style={{ textAlign: 'center' }}>Team 1</div>\n                <ConfettiProvider>\n                  <Home\n                    candyMachineId={candyMachineId}\n                    fairLaunchId={fairLaunchId}\n                    connection={connection}\n                    startDate={startDateSeed}\n                    txTimeout={txTimeout}\n                  />\n                </ConfettiProvider>\n              </div>\n              <div style={{ display: 'inline' }}>\n                <div style={{ textAlign: 'center' }}>Team 2</div>\n                <ConfettiProvider>\n                  <Home\n                    candyMachineId={candyMachineId}\n                    fairLaunchId={fairLaunchId2}\n                    connection={connection}\n                    startDate={startDateSeed}\n                    txTimeout={txTimeout}\n                  />\n                </ConfettiProvider>\n              </div>\n            </div>\n            <div\n              className=\"container-div\"\n              style={{ margin: 0, alignItems: 'center' }}\n            >\n              <div style={{ display: 'inline' }}>\n                <div style={{ textAlign: 'center' }}>Team 3</div>\n                <ConfettiProvider>\n                  <Home\n                    candyMachineId={candyMachineId}\n                    fairLaunchId={fairLaunchId3}\n                    connection={connection}\n                    startDate={startDateSeed}\n                    txTimeout={txTimeout}\n                  />\n                </ConfettiProvider>\n              </div>\n              <div style={{ display: 'inline' }}>\n                <div style={{ textAlign: 'center' }}>Team 4</div>\n                <ConfettiProvider>\n                  <Home\n                    candyMachineId={candyMachineId}\n                    fairLaunchId={fairLaunchId4}\n                    connection={connection}\n                    startDate={startDateSeed}\n                    txTimeout={txTimeout}\n                  />\n                </ConfettiProvider>\n              </div>\n            </div>\n          </WalletDialogProvider>\n        </WalletProvider>\n      </ConnectionProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}